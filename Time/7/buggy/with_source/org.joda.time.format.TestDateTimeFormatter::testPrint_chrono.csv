bug,class,method,line,path,line_source
7,org.joda.time.Chronology,<init>,63,/JodaTime/src/main/java/org/joda/time/Chronology.java,public abstract class Chronology {
7,org.joda.time.DateTime,<init>,468,/JodaTime/src/main/java/org/joda/time/DateTime.java,"super(year, monthOfYear, dayOfMonth,"
7,org.joda.time.DateTime,<init>,470,/JodaTime/src/main/java/org/joda/time/DateTime.java,}
7,org.joda.time.DateTime,<init>,439,/JodaTime/src/main/java/org/joda/time/DateTime.java,"super(year, monthOfYear, dayOfMonth,"
7,org.joda.time.DateTime,<init>,441,/JodaTime/src/main/java/org/joda/time/DateTime.java,}
7,org.joda.time.DateTime,<init>,172,/JodaTime/src/main/java/org/joda/time/DateTime.java,"super(instant, chronology);"
7,org.joda.time.DateTime,<init>,173,/JodaTime/src/main/java/org/joda/time/DateTime.java,}
7,org.joda.time.DateTime,toDateTime,479,/JodaTime/src/main/java/org/joda/time/DateTime.java,return this;
7,org.joda.time.DateTime,withChronology,547,/JodaTime/src/main/java/org/joda/time/DateTime.java,newChronology = DateTimeUtils.getChronology(newChronology);
7,org.joda.time.DateTime,withChronology,548,/JodaTime/src/main/java/org/joda/time/DateTime.java,"return (newChronology == getChronology() ? this : new DateTime(getMillis(), newChronology));"
7,org.joda.time.DateTimeField,<init>,33,/JodaTime/src/main/java/org/joda/time/DateTimeField.java,public abstract class DateTimeField {
7,org.joda.time.DateTimeFieldType,<clinit>,72,/JodaTime/src/main/java/org/joda/time/DateTimeFieldType.java,private static final DateTimeFieldType ERA_TYPE = new StandardDateTimeFieldType(
7,org.joda.time.DateTimeFieldType,<clinit>,75,/JodaTime/src/main/java/org/joda/time/DateTimeFieldType.java,private static final DateTimeFieldType YEAR_OF_ERA_TYPE = new StandardDateTimeFieldType(
7,org.joda.time.DateTimeFieldType,<clinit>,78,/JodaTime/src/main/java/org/joda/time/DateTimeFieldType.java,private static final DateTimeFieldType CENTURY_OF_ERA_TYPE = new StandardDateTimeFieldType(
7,org.joda.time.DateTimeFieldType,<clinit>,81,/JodaTime/src/main/java/org/joda/time/DateTimeFieldType.java,private static final DateTimeFieldType YEAR_OF_CENTURY_TYPE = new StandardDateTimeFieldType(
7,org.joda.time.DateTimeFieldType,<clinit>,84,/JodaTime/src/main/java/org/joda/time/DateTimeFieldType.java,private static final DateTimeFieldType YEAR_TYPE = new StandardDateTimeFieldType(
7,org.joda.time.DateTimeFieldType,<clinit>,87,/JodaTime/src/main/java/org/joda/time/DateTimeFieldType.java,private static final DateTimeFieldType DAY_OF_YEAR_TYPE = new StandardDateTimeFieldType(
7,org.joda.time.DateTimeFieldType,<clinit>,90,/JodaTime/src/main/java/org/joda/time/DateTimeFieldType.java,private static final DateTimeFieldType MONTH_OF_YEAR_TYPE = new StandardDateTimeFieldType(
7,org.joda.time.DateTimeFieldType,<clinit>,93,/JodaTime/src/main/java/org/joda/time/DateTimeFieldType.java,private static final DateTimeFieldType DAY_OF_MONTH_TYPE = new StandardDateTimeFieldType(
7,org.joda.time.DateTimeFieldType,<clinit>,96,/JodaTime/src/main/java/org/joda/time/DateTimeFieldType.java,private static final DateTimeFieldType WEEKYEAR_OF_CENTURY_TYPE = new StandardDateTimeFieldType(
7,org.joda.time.DateTimeFieldType,<clinit>,99,/JodaTime/src/main/java/org/joda/time/DateTimeFieldType.java,private static final DateTimeFieldType WEEKYEAR_TYPE = new StandardDateTimeFieldType(
7,org.joda.time.DateTimeFieldType,<clinit>,102,/JodaTime/src/main/java/org/joda/time/DateTimeFieldType.java,private static final DateTimeFieldType WEEK_OF_WEEKYEAR_TYPE = new StandardDateTimeFieldType(
7,org.joda.time.DateTimeFieldType,<clinit>,105,/JodaTime/src/main/java/org/joda/time/DateTimeFieldType.java,private static final DateTimeFieldType DAY_OF_WEEK_TYPE = new StandardDateTimeFieldType(
7,org.joda.time.DateTimeFieldType,<clinit>,109,/JodaTime/src/main/java/org/joda/time/DateTimeFieldType.java,private static final DateTimeFieldType HALFDAY_OF_DAY_TYPE = new StandardDateTimeFieldType(
7,org.joda.time.DateTimeFieldType,<clinit>,112,/JodaTime/src/main/java/org/joda/time/DateTimeFieldType.java,private static final DateTimeFieldType HOUR_OF_HALFDAY_TYPE = new StandardDateTimeFieldType(
7,org.joda.time.DateTimeFieldType,<clinit>,115,/JodaTime/src/main/java/org/joda/time/DateTimeFieldType.java,private static final DateTimeFieldType CLOCKHOUR_OF_HALFDAY_TYPE = new StandardDateTimeFieldType(
7,org.joda.time.DateTimeFieldType,<clinit>,118,/JodaTime/src/main/java/org/joda/time/DateTimeFieldType.java,private static final DateTimeFieldType CLOCKHOUR_OF_DAY_TYPE = new StandardDateTimeFieldType(
7,org.joda.time.DateTimeFieldType,<clinit>,121,/JodaTime/src/main/java/org/joda/time/DateTimeFieldType.java,private static final DateTimeFieldType HOUR_OF_DAY_TYPE = new StandardDateTimeFieldType(
7,org.joda.time.DateTimeFieldType,<clinit>,124,/JodaTime/src/main/java/org/joda/time/DateTimeFieldType.java,private static final DateTimeFieldType MINUTE_OF_DAY_TYPE = new StandardDateTimeFieldType(
7,org.joda.time.DateTimeFieldType,<clinit>,127,/JodaTime/src/main/java/org/joda/time/DateTimeFieldType.java,private static final DateTimeFieldType MINUTE_OF_HOUR_TYPE = new StandardDateTimeFieldType(
7,org.joda.time.DateTimeFieldType,<clinit>,130,/JodaTime/src/main/java/org/joda/time/DateTimeFieldType.java,private static final DateTimeFieldType SECOND_OF_DAY_TYPE = new StandardDateTimeFieldType(
7,org.joda.time.DateTimeFieldType,<clinit>,133,/JodaTime/src/main/java/org/joda/time/DateTimeFieldType.java,private static final DateTimeFieldType SECOND_OF_MINUTE_TYPE = new StandardDateTimeFieldType(
7,org.joda.time.DateTimeFieldType,<clinit>,136,/JodaTime/src/main/java/org/joda/time/DateTimeFieldType.java,private static final DateTimeFieldType MILLIS_OF_DAY_TYPE = new StandardDateTimeFieldType(
7,org.joda.time.DateTimeFieldType,<clinit>,139,/JodaTime/src/main/java/org/joda/time/DateTimeFieldType.java,private static final DateTimeFieldType MILLIS_OF_SECOND_TYPE = new StandardDateTimeFieldType(
7,org.joda.time.DateTimeFieldType,<init>,152,/JodaTime/src/main/java/org/joda/time/DateTimeFieldType.java,super();
7,org.joda.time.DateTimeFieldType,<init>,153,/JodaTime/src/main/java/org/joda/time/DateTimeFieldType.java,iName = name;
7,org.joda.time.DateTimeFieldType,<init>,154,/JodaTime/src/main/java/org/joda/time/DateTimeFieldType.java,}
7,org.joda.time.DateTimeFieldType,centuryOfEra,353,/JodaTime/src/main/java/org/joda/time/DateTimeFieldType.java,return CENTURY_OF_ERA_TYPE;
7,org.joda.time.DateTimeFieldType,clockhourOfDay,226,/JodaTime/src/main/java/org/joda/time/DateTimeFieldType.java,return CLOCKHOUR_OF_DAY_TYPE;
7,org.joda.time.DateTimeFieldType,clockhourOfHalfday,244,/JodaTime/src/main/java/org/joda/time/DateTimeFieldType.java,return CLOCKHOUR_OF_HALFDAY_TYPE;
7,org.joda.time.DateTimeFieldType,dayOfMonth,272,/JodaTime/src/main/java/org/joda/time/DateTimeFieldType.java,return DAY_OF_MONTH_TYPE;
7,org.joda.time.DateTimeFieldType,dayOfWeek,263,/JodaTime/src/main/java/org/joda/time/DateTimeFieldType.java,return DAY_OF_WEEK_TYPE;
7,org.joda.time.DateTimeFieldType,dayOfYear,281,/JodaTime/src/main/java/org/joda/time/DateTimeFieldType.java,return DAY_OF_YEAR_TYPE;
7,org.joda.time.DateTimeFieldType,era,362,/JodaTime/src/main/java/org/joda/time/DateTimeFieldType.java,return ERA_TYPE;
7,org.joda.time.DateTimeFieldType,halfdayOfDay,253,/JodaTime/src/main/java/org/joda/time/DateTimeFieldType.java,return HALFDAY_OF_DAY_TYPE;
7,org.joda.time.DateTimeFieldType,hourOfDay,217,/JodaTime/src/main/java/org/joda/time/DateTimeFieldType.java,return HOUR_OF_DAY_TYPE;
7,org.joda.time.DateTimeFieldType,hourOfHalfday,235,/JodaTime/src/main/java/org/joda/time/DateTimeFieldType.java,return HOUR_OF_HALFDAY_TYPE;
7,org.joda.time.DateTimeFieldType,millisOfDay,172,/JodaTime/src/main/java/org/joda/time/DateTimeFieldType.java,return MILLIS_OF_DAY_TYPE;
7,org.joda.time.DateTimeFieldType,millisOfSecond,163,/JodaTime/src/main/java/org/joda/time/DateTimeFieldType.java,return MILLIS_OF_SECOND_TYPE;
7,org.joda.time.DateTimeFieldType,minuteOfDay,208,/JodaTime/src/main/java/org/joda/time/DateTimeFieldType.java,return MINUTE_OF_DAY_TYPE;
7,org.joda.time.DateTimeFieldType,minuteOfHour,199,/JodaTime/src/main/java/org/joda/time/DateTimeFieldType.java,return MINUTE_OF_HOUR_TYPE;
7,org.joda.time.DateTimeFieldType,monthOfYear,317,/JodaTime/src/main/java/org/joda/time/DateTimeFieldType.java,return MONTH_OF_YEAR_TYPE;
7,org.joda.time.DateTimeFieldType,secondOfDay,190,/JodaTime/src/main/java/org/joda/time/DateTimeFieldType.java,return SECOND_OF_DAY_TYPE;
7,org.joda.time.DateTimeFieldType,secondOfMinute,181,/JodaTime/src/main/java/org/joda/time/DateTimeFieldType.java,return SECOND_OF_MINUTE_TYPE;
7,org.joda.time.DateTimeFieldType,weekOfWeekyear,290,/JodaTime/src/main/java/org/joda/time/DateTimeFieldType.java,return WEEK_OF_WEEKYEAR_TYPE;
7,org.joda.time.DateTimeFieldType,weekyear,299,/JodaTime/src/main/java/org/joda/time/DateTimeFieldType.java,return WEEKYEAR_TYPE;
7,org.joda.time.DateTimeFieldType,weekyearOfCentury,308,/JodaTime/src/main/java/org/joda/time/DateTimeFieldType.java,return WEEKYEAR_OF_CENTURY_TYPE;
7,org.joda.time.DateTimeFieldType,year,326,/JodaTime/src/main/java/org/joda/time/DateTimeFieldType.java,return YEAR_TYPE;
7,org.joda.time.DateTimeFieldType,yearOfCentury,344,/JodaTime/src/main/java/org/joda/time/DateTimeFieldType.java,return YEAR_OF_CENTURY_TYPE;
7,org.joda.time.DateTimeFieldType,yearOfEra,335,/JodaTime/src/main/java/org/joda/time/DateTimeFieldType.java,return YEAR_OF_ERA_TYPE;
7,org.joda.time.DateTimeFieldType$StandardDateTimeFieldType,<init>,443,/JodaTime/src/main/java/org/joda/time/DateTimeFieldType.java,super(name);
7,org.joda.time.DateTimeFieldType$StandardDateTimeFieldType,<init>,444,/JodaTime/src/main/java/org/joda/time/DateTimeFieldType.java,iOrdinal = ordinal;
7,org.joda.time.DateTimeFieldType$StandardDateTimeFieldType,<init>,445,/JodaTime/src/main/java/org/joda/time/DateTimeFieldType.java,iUnitType = unitType;
7,org.joda.time.DateTimeFieldType$StandardDateTimeFieldType,<init>,446,/JodaTime/src/main/java/org/joda/time/DateTimeFieldType.java,iRangeType = rangeType;
7,org.joda.time.DateTimeFieldType$StandardDateTimeFieldType,<init>,447,/JodaTime/src/main/java/org/joda/time/DateTimeFieldType.java,}
7,org.joda.time.DateTimeFieldType$StandardDateTimeFieldType,getDurationType,451,/JodaTime/src/main/java/org/joda/time/DateTimeFieldType.java,return iUnitType;
7,org.joda.time.DateTimeFieldType$StandardDateTimeFieldType,getField,461,/JodaTime/src/main/java/org/joda/time/DateTimeFieldType.java,chronology = DateTimeUtils.getChronology(chronology);
7,org.joda.time.DateTimeFieldType$StandardDateTimeFieldType,getField,463,/JodaTime/src/main/java/org/joda/time/DateTimeFieldType.java,switch (iOrdinal) {
7,org.joda.time.DateTimeFieldType$StandardDateTimeFieldType,getField,473,/JodaTime/src/main/java/org/joda/time/DateTimeFieldType.java,return chronology.year();
7,org.joda.time.DateTimeFieldType$StandardDateTimeFieldType,getField,477,/JodaTime/src/main/java/org/joda/time/DateTimeFieldType.java,return chronology.monthOfYear();
7,org.joda.time.DateTimeFieldType$StandardDateTimeFieldType,getField,479,/JodaTime/src/main/java/org/joda/time/DateTimeFieldType.java,return chronology.dayOfMonth();
7,org.joda.time.DateTimeFieldType$StandardDateTimeFieldType,getField,487,/JodaTime/src/main/java/org/joda/time/DateTimeFieldType.java,return chronology.dayOfWeek();
7,org.joda.time.DateTimeFieldType$StandardDateTimeFieldType,getField,497,/JodaTime/src/main/java/org/joda/time/DateTimeFieldType.java,return chronology.hourOfDay();
7,org.joda.time.DateTimeFieldType$StandardDateTimeFieldType,getField,501,/JodaTime/src/main/java/org/joda/time/DateTimeFieldType.java,return chronology.minuteOfHour();
7,org.joda.time.DateTimeFieldType$StandardDateTimeFieldType,getField,505,/JodaTime/src/main/java/org/joda/time/DateTimeFieldType.java,return chronology.secondOfMinute();
7,org.joda.time.DateTimeFieldType$StandardDateTimeFieldType,getRangeDurationType,456,/JodaTime/src/main/java/org/joda/time/DateTimeFieldType.java,return iRangeType;
7,org.joda.time.DateTimeUtils,<clinit>,35,/JodaTime/src/main/java/org/joda/time/DateTimeUtils.java,private static final SystemMillisProvider SYSTEM_MILLIS_PROVIDER = new SystemMillisProvider();
7,org.joda.time.DateTimeUtils,<clinit>,37,/JodaTime/src/main/java/org/joda/time/DateTimeUtils.java,private static volatile MillisProvider cMillisProvider = SYSTEM_MILLIS_PROVIDER;
7,org.joda.time.DateTimeUtils,checkPermission,129,/JodaTime/src/main/java/org/joda/time/DateTimeUtils.java,SecurityManager sm = System.getSecurityManager();
7,org.joda.time.DateTimeUtils,checkPermission,130,/JodaTime/src/main/java/org/joda/time/DateTimeUtils.java,if (sm != null) {
7,org.joda.time.DateTimeUtils,checkPermission,133,/JodaTime/src/main/java/org/joda/time/DateTimeUtils.java,}
7,org.joda.time.DateTimeUtils,getChronology,252,/JodaTime/src/main/java/org/joda/time/DateTimeUtils.java,if (chrono == null) {
7,org.joda.time.DateTimeUtils,getChronology,255,/JodaTime/src/main/java/org/joda/time/DateTimeUtils.java,return chrono;
7,org.joda.time.DateTimeUtils,getDateFormatSymbols,365,/JodaTime/src/main/java/org/joda/time/DateTimeUtils.java,"Method method = DateFormatSymbols.class.getMethod(""getInstance"", new Class[] {Locale.class});"
7,org.joda.time.DateTimeUtils,getDateFormatSymbols,366,/JodaTime/src/main/java/org/joda/time/DateTimeUtils.java,"return (DateFormatSymbols) method.invoke(null, new Object[] {locale});"
7,org.joda.time.DateTimeUtils,getInstantChronology,164,/JodaTime/src/main/java/org/joda/time/DateTimeUtils.java,if (instant == null) {
7,org.joda.time.DateTimeUtils,getInstantChronology,167,/JodaTime/src/main/java/org/joda/time/DateTimeUtils.java,Chronology chrono = instant.getChronology();
7,org.joda.time.DateTimeUtils,getInstantChronology,168,/JodaTime/src/main/java/org/joda/time/DateTimeUtils.java,if (chrono == null) {
7,org.joda.time.DateTimeUtils,getInstantChronology,171,/JodaTime/src/main/java/org/joda/time/DateTimeUtils.java,return chrono;
7,org.joda.time.DateTimeUtils,getInstantMillis,146,/JodaTime/src/main/java/org/joda/time/DateTimeUtils.java,if (instant == null) {
7,org.joda.time.DateTimeUtils,getInstantMillis,149,/JodaTime/src/main/java/org/joda/time/DateTimeUtils.java,return instant.getMillis();
7,org.joda.time.DateTimeUtils,getZone,269,/JodaTime/src/main/java/org/joda/time/DateTimeUtils.java,if (zone == null) {
7,org.joda.time.DateTimeUtils,getZone,272,/JodaTime/src/main/java/org/joda/time/DateTimeUtils.java,return zone;
7,org.joda.time.DateTimeUtils,setCurrentMillisFixed,82,/JodaTime/src/main/java/org/joda/time/DateTimeUtils.java,checkPermission();
7,org.joda.time.DateTimeUtils,setCurrentMillisFixed,83,/JodaTime/src/main/java/org/joda/time/DateTimeUtils.java,cMillisProvider = new FixedMillisProvider(fixedMillis);
7,org.joda.time.DateTimeUtils,setCurrentMillisFixed,84,/JodaTime/src/main/java/org/joda/time/DateTimeUtils.java,}
7,org.joda.time.DateTimeUtils,setCurrentMillisSystem,68,/JodaTime/src/main/java/org/joda/time/DateTimeUtils.java,checkPermission();
7,org.joda.time.DateTimeUtils,setCurrentMillisSystem,69,/JodaTime/src/main/java/org/joda/time/DateTimeUtils.java,cMillisProvider = SYSTEM_MILLIS_PROVIDER;
7,org.joda.time.DateTimeUtils,setCurrentMillisSystem,70,/JodaTime/src/main/java/org/joda/time/DateTimeUtils.java,}
7,org.joda.time.DateTimeUtils$FixedMillisProvider,<init>,414,/JodaTime/src/main/java/org/joda/time/DateTimeUtils.java,FixedMillisProvider(long fixedMillis) {
7,org.joda.time.DateTimeUtils$FixedMillisProvider,<init>,415,/JodaTime/src/main/java/org/joda/time/DateTimeUtils.java,iMillis = fixedMillis;
7,org.joda.time.DateTimeUtils$FixedMillisProvider,<init>,416,/JodaTime/src/main/java/org/joda/time/DateTimeUtils.java,}
7,org.joda.time.DateTimeUtils$SystemMillisProvider,<init>,393,/JodaTime/src/main/java/org/joda/time/DateTimeUtils.java,static class SystemMillisProvider implements MillisProvider {
7,org.joda.time.DateTimeZone,<clinit>,93,/JodaTime/src/main/java/org/joda/time/DateTimeZone.java,"public static final DateTimeZone UTC = new FixedDateTimeZone(""UTC"", ""UTC"", 0, 0);"
7,org.joda.time.DateTimeZone,<clinit>,113,/JodaTime/src/main/java/org/joda/time/DateTimeZone.java,setProvider0(null);
7,org.joda.time.DateTimeZone,<clinit>,114,/JodaTime/src/main/java/org/joda/time/DateTimeZone.java,setNameProvider0(null);
7,org.joda.time.DateTimeZone,<clinit>,115,/JodaTime/src/main/java/org/joda/time/DateTimeZone.java,}
7,org.joda.time.DateTimeZone,<init>,685,/JodaTime/src/main/java/org/joda/time/DateTimeZone.java,protected DateTimeZone(String id) {
7,org.joda.time.DateTimeZone,<init>,686,/JodaTime/src/main/java/org/joda/time/DateTimeZone.java,if (id == null) {
7,org.joda.time.DateTimeZone,<init>,689,/JodaTime/src/main/java/org/joda/time/DateTimeZone.java,iID = id;
7,org.joda.time.DateTimeZone,<init>,690,/JodaTime/src/main/java/org/joda/time/DateTimeZone.java,}
7,org.joda.time.DateTimeZone,convertLocalToUTC,929,/JodaTime/src/main/java/org/joda/time/DateTimeZone.java,int offsetLocal = getOffset(instantLocal);
7,org.joda.time.DateTimeZone,convertLocalToUTC,931,/JodaTime/src/main/java/org/joda/time/DateTimeZone.java,int offset = getOffset(instantLocal - offsetLocal);
7,org.joda.time.DateTimeZone,convertLocalToUTC,933,/JodaTime/src/main/java/org/joda/time/DateTimeZone.java,if (offsetLocal != offset) {
7,org.joda.time.DateTimeZone,convertLocalToUTC,964,/JodaTime/src/main/java/org/joda/time/DateTimeZone.java,long instantUTC = instantLocal - offset;
7,org.joda.time.DateTimeZone,convertLocalToUTC,966,/JodaTime/src/main/java/org/joda/time/DateTimeZone.java,if ((instantLocal ^ instantUTC) < 0 && (instantLocal ^ offset) < 0) {
7,org.joda.time.DateTimeZone,convertLocalToUTC,969,/JodaTime/src/main/java/org/joda/time/DateTimeZone.java,return instantUTC;
7,org.joda.time.DateTimeZone,convertUTCToLocal,906,/JodaTime/src/main/java/org/joda/time/DateTimeZone.java,int offset = getOffset(instantUTC);
7,org.joda.time.DateTimeZone,convertUTCToLocal,907,/JodaTime/src/main/java/org/joda/time/DateTimeZone.java,long instantLocal = instantUTC + offset;
7,org.joda.time.DateTimeZone,convertUTCToLocal,909,/JodaTime/src/main/java/org/joda/time/DateTimeZone.java,if ((instantUTC ^ instantLocal) < 0 && (instantUTC ^ offset) >= 0) {
7,org.joda.time.DateTimeZone,convertUTCToLocal,912,/JodaTime/src/main/java/org/joda/time/DateTimeZone.java,return instantLocal;
7,org.joda.time.DateTimeZone,forID,201,/JodaTime/src/main/java/org/joda/time/DateTimeZone.java,if (id == null) {
7,org.joda.time.DateTimeZone,forID,204,/JodaTime/src/main/java/org/joda/time/DateTimeZone.java,"if (id.equals(""UTC"")) {"
7,org.joda.time.DateTimeZone,forID,207,/JodaTime/src/main/java/org/joda/time/DateTimeZone.java,DateTimeZone zone = cProvider.getZone(id);
7,org.joda.time.DateTimeZone,forID,208,/JodaTime/src/main/java/org/joda/time/DateTimeZone.java,if (zone != null) {
7,org.joda.time.DateTimeZone,forID,209,/JodaTime/src/main/java/org/joda/time/DateTimeZone.java,return zone;
7,org.joda.time.DateTimeZone,getDefault,131,/JodaTime/src/main/java/org/joda/time/DateTimeZone.java,DateTimeZone zone = cDefault;
7,org.joda.time.DateTimeZone,getDefault,132,/JodaTime/src/main/java/org/joda/time/DateTimeZone.java,if (zone == null) {
7,org.joda.time.DateTimeZone,getDefault,133,/JodaTime/src/main/java/org/joda/time/DateTimeZone.java,synchronized(DateTimeZone.class) {
7,org.joda.time.DateTimeZone,getDefault,134,/JodaTime/src/main/java/org/joda/time/DateTimeZone.java,zone = cDefault;
7,org.joda.time.DateTimeZone,getDefault,135,/JodaTime/src/main/java/org/joda/time/DateTimeZone.java,if (zone == null) {
7,org.joda.time.DateTimeZone,getDefault,136,/JodaTime/src/main/java/org/joda/time/DateTimeZone.java,DateTimeZone temp = null;
7,org.joda.time.DateTimeZone,getDefault,139,/JodaTime/src/main/java/org/joda/time/DateTimeZone.java,"String id = System.getProperty(""user.timezone"");"
7,org.joda.time.DateTimeZone,getDefault,140,/JodaTime/src/main/java/org/joda/time/DateTimeZone.java,if (id != null) {  // null check avoids stack overflow
7,org.joda.time.DateTimeZone,getDefault,141,/JodaTime/src/main/java/org/joda/time/DateTimeZone.java,temp = forID(id);
7,org.joda.time.DateTimeZone,getDefault,145,/JodaTime/src/main/java/org/joda/time/DateTimeZone.java,}
7,org.joda.time.DateTimeZone,getDefault,146,/JodaTime/src/main/java/org/joda/time/DateTimeZone.java,if (temp == null) {
7,org.joda.time.DateTimeZone,getDefault,151,/JodaTime/src/main/java/org/joda/time/DateTimeZone.java,}
7,org.joda.time.DateTimeZone,getDefault,152,/JodaTime/src/main/java/org/joda/time/DateTimeZone.java,if (temp == null) {
7,org.joda.time.DateTimeZone,getDefault,155,/JodaTime/src/main/java/org/joda/time/DateTimeZone.java,cDefault = zone = temp;
7,org.joda.time.DateTimeZone,getDefault,157,/JodaTime/src/main/java/org/joda/time/DateTimeZone.java,}
7,org.joda.time.DateTimeZone,getDefault,159,/JodaTime/src/main/java/org/joda/time/DateTimeZone.java,return zone;
7,org.joda.time.DateTimeZone,getDefaultNameProvider,526,/JodaTime/src/main/java/org/joda/time/DateTimeZone.java,NameProvider nameProvider = null;
7,org.joda.time.DateTimeZone,getDefaultNameProvider,528,/JodaTime/src/main/java/org/joda/time/DateTimeZone.java,"String providerClass = System.getProperty(""org.joda.time.DateTimeZone.NameProvider"");"
7,org.joda.time.DateTimeZone,getDefaultNameProvider,529,/JodaTime/src/main/java/org/joda/time/DateTimeZone.java,if (providerClass != null) {
7,org.joda.time.DateTimeZone,getDefaultNameProvider,539,/JodaTime/src/main/java/org/joda/time/DateTimeZone.java,}
7,org.joda.time.DateTimeZone,getDefaultNameProvider,541,/JodaTime/src/main/java/org/joda/time/DateTimeZone.java,if (nameProvider == null) {
7,org.joda.time.DateTimeZone,getDefaultNameProvider,542,/JodaTime/src/main/java/org/joda/time/DateTimeZone.java,nameProvider = new DefaultNameProvider();
7,org.joda.time.DateTimeZone,getDefaultNameProvider,545,/JodaTime/src/main/java/org/joda/time/DateTimeZone.java,return nameProvider;
7,org.joda.time.DateTimeZone,getDefaultProvider,440,/JodaTime/src/main/java/org/joda/time/DateTimeZone.java,Provider provider = null;
7,org.joda.time.DateTimeZone,getDefaultProvider,443,/JodaTime/src/main/java/org/joda/time/DateTimeZone.java,String providerClass =
7,org.joda.time.DateTimeZone,getDefaultProvider,445,/JodaTime/src/main/java/org/joda/time/DateTimeZone.java,if (providerClass != null) {
7,org.joda.time.DateTimeZone,getDefaultProvider,455,/JodaTime/src/main/java/org/joda/time/DateTimeZone.java,}
7,org.joda.time.DateTimeZone,getDefaultProvider,457,/JodaTime/src/main/java/org/joda/time/DateTimeZone.java,if (provider == null) {
7,org.joda.time.DateTimeZone,getDefaultProvider,459,/JodaTime/src/main/java/org/joda/time/DateTimeZone.java,"provider = new ZoneInfoProvider(""org/joda/time/tz/data"");"
7,org.joda.time.DateTimeZone,getDefaultProvider,463,/JodaTime/src/main/java/org/joda/time/DateTimeZone.java,}
7,org.joda.time.DateTimeZone,getDefaultProvider,466,/JodaTime/src/main/java/org/joda/time/DateTimeZone.java,if (provider == null) {
7,org.joda.time.DateTimeZone,getDefaultProvider,470,/JodaTime/src/main/java/org/joda/time/DateTimeZone.java,return provider;
7,org.joda.time.DateTimeZone,getID,701,/JodaTime/src/main/java/org/joda/time/DateTimeZone.java,return iID;
7,org.joda.time.DateTimeZone,hashCode,1165,/JodaTime/src/main/java/org/joda/time/DateTimeZone.java,return 57 + getID().hashCode();
7,org.joda.time.DateTimeZone,setDefault,172,/JodaTime/src/main/java/org/joda/time/DateTimeZone.java,SecurityManager sm = System.getSecurityManager();
7,org.joda.time.DateTimeZone,setDefault,173,/JodaTime/src/main/java/org/joda/time/DateTimeZone.java,if (sm != null) {
7,org.joda.time.DateTimeZone,setDefault,176,/JodaTime/src/main/java/org/joda/time/DateTimeZone.java,if (zone == null) {
7,org.joda.time.DateTimeZone,setDefault,179,/JodaTime/src/main/java/org/joda/time/DateTimeZone.java,synchronized(DateTimeZone.class) {
7,org.joda.time.DateTimeZone,setDefault,180,/JodaTime/src/main/java/org/joda/time/DateTimeZone.java,cDefault = zone;
7,org.joda.time.DateTimeZone,setDefault,181,/JodaTime/src/main/java/org/joda/time/DateTimeZone.java,}
7,org.joda.time.DateTimeZone,setDefault,182,/JodaTime/src/main/java/org/joda/time/DateTimeZone.java,}
7,org.joda.time.DateTimeZone,setNameProvider0,511,/JodaTime/src/main/java/org/joda/time/DateTimeZone.java,if (nameProvider == null) {
7,org.joda.time.DateTimeZone,setNameProvider0,512,/JodaTime/src/main/java/org/joda/time/DateTimeZone.java,nameProvider = getDefaultNameProvider();
7,org.joda.time.DateTimeZone,setNameProvider0,514,/JodaTime/src/main/java/org/joda/time/DateTimeZone.java,cNameProvider = nameProvider;
7,org.joda.time.DateTimeZone,setNameProvider0,515,/JodaTime/src/main/java/org/joda/time/DateTimeZone.java,}
7,org.joda.time.DateTimeZone,setProvider0,412,/JodaTime/src/main/java/org/joda/time/DateTimeZone.java,if (provider == null) {
7,org.joda.time.DateTimeZone,setProvider0,413,/JodaTime/src/main/java/org/joda/time/DateTimeZone.java,provider = getDefaultProvider();
7,org.joda.time.DateTimeZone,setProvider0,415,/JodaTime/src/main/java/org/joda/time/DateTimeZone.java,Set<String> ids = provider.getAvailableIDs();
7,org.joda.time.DateTimeZone,setProvider0,416,/JodaTime/src/main/java/org/joda/time/DateTimeZone.java,if (ids == null || ids.size() == 0) {
7,org.joda.time.DateTimeZone,setProvider0,420,/JodaTime/src/main/java/org/joda/time/DateTimeZone.java,"if (!ids.contains(""UTC"")) {"
7,org.joda.time.DateTimeZone,setProvider0,423,/JodaTime/src/main/java/org/joda/time/DateTimeZone.java,"if (!UTC.equals(provider.getZone(""UTC""))) {"
7,org.joda.time.DateTimeZone,setProvider0,426,/JodaTime/src/main/java/org/joda/time/DateTimeZone.java,cProvider = provider;
7,org.joda.time.DateTimeZone,setProvider0,427,/JodaTime/src/main/java/org/joda/time/DateTimeZone.java,cAvailableIDs = ids;
7,org.joda.time.DateTimeZone,setProvider0,428,/JodaTime/src/main/java/org/joda/time/DateTimeZone.java,}
7,org.joda.time.DurationField,<init>,30,/JodaTime/src/main/java/org/joda/time/DurationField.java,public abstract class DurationField implements Comparable<DurationField> {
7,org.joda.time.DurationFieldType,<clinit>,60,/JodaTime/src/main/java/org/joda/time/DurationFieldType.java,"static final DurationFieldType ERAS_TYPE = new StandardDurationFieldType(""eras"", ERAS);"
7,org.joda.time.DurationFieldType,<clinit>,62,/JodaTime/src/main/java/org/joda/time/DurationFieldType.java,"static final DurationFieldType CENTURIES_TYPE = new StandardDurationFieldType(""centuries"", CENTURIES);"
7,org.joda.time.DurationFieldType,<clinit>,64,/JodaTime/src/main/java/org/joda/time/DurationFieldType.java,"static final DurationFieldType WEEKYEARS_TYPE = new StandardDurationFieldType(""weekyears"", WEEKYEARS);"
7,org.joda.time.DurationFieldType,<clinit>,66,/JodaTime/src/main/java/org/joda/time/DurationFieldType.java,"static final DurationFieldType YEARS_TYPE = new StandardDurationFieldType(""years"", YEARS);"
7,org.joda.time.DurationFieldType,<clinit>,68,/JodaTime/src/main/java/org/joda/time/DurationFieldType.java,"static final DurationFieldType MONTHS_TYPE = new StandardDurationFieldType(""months"", MONTHS);"
7,org.joda.time.DurationFieldType,<clinit>,70,/JodaTime/src/main/java/org/joda/time/DurationFieldType.java,"static final DurationFieldType WEEKS_TYPE = new StandardDurationFieldType(""weeks"", WEEKS);"
7,org.joda.time.DurationFieldType,<clinit>,72,/JodaTime/src/main/java/org/joda/time/DurationFieldType.java,"static final DurationFieldType DAYS_TYPE = new StandardDurationFieldType(""days"", DAYS);"
7,org.joda.time.DurationFieldType,<clinit>,74,/JodaTime/src/main/java/org/joda/time/DurationFieldType.java,"static final DurationFieldType HALFDAYS_TYPE = new StandardDurationFieldType(""halfdays"", HALFDAYS);"
7,org.joda.time.DurationFieldType,<clinit>,76,/JodaTime/src/main/java/org/joda/time/DurationFieldType.java,"static final DurationFieldType HOURS_TYPE = new StandardDurationFieldType(""hours"", HOURS);"
7,org.joda.time.DurationFieldType,<clinit>,78,/JodaTime/src/main/java/org/joda/time/DurationFieldType.java,"static final DurationFieldType MINUTES_TYPE = new StandardDurationFieldType(""minutes"", MINUTES);"
7,org.joda.time.DurationFieldType,<clinit>,80,/JodaTime/src/main/java/org/joda/time/DurationFieldType.java,"static final DurationFieldType SECONDS_TYPE = new StandardDurationFieldType(""seconds"", SECONDS);"
7,org.joda.time.DurationFieldType,<clinit>,82,/JodaTime/src/main/java/org/joda/time/DurationFieldType.java,"static final DurationFieldType MILLIS_TYPE = new StandardDurationFieldType(""millis"", MILLIS);"
7,org.joda.time.DurationFieldType,<init>,94,/JodaTime/src/main/java/org/joda/time/DurationFieldType.java,super();
7,org.joda.time.DurationFieldType,<init>,95,/JodaTime/src/main/java/org/joda/time/DurationFieldType.java,iName = name;
7,org.joda.time.DurationFieldType,<init>,96,/JodaTime/src/main/java/org/joda/time/DurationFieldType.java,}
7,org.joda.time.DurationFieldType,centuries,196,/JodaTime/src/main/java/org/joda/time/DurationFieldType.java,return CENTURIES_TYPE;
7,org.joda.time.DurationFieldType,days,151,/JodaTime/src/main/java/org/joda/time/DurationFieldType.java,return DAYS_TYPE;
7,org.joda.time.DurationFieldType,eras,205,/JodaTime/src/main/java/org/joda/time/DurationFieldType.java,return ERAS_TYPE;
7,org.joda.time.DurationFieldType,halfdays,141,/JodaTime/src/main/java/org/joda/time/DurationFieldType.java,return HALFDAYS_TYPE;
7,org.joda.time.DurationFieldType,hours,132,/JodaTime/src/main/java/org/joda/time/DurationFieldType.java,return HOURS_TYPE;
7,org.joda.time.DurationFieldType,millis,105,/JodaTime/src/main/java/org/joda/time/DurationFieldType.java,return MILLIS_TYPE;
7,org.joda.time.DurationFieldType,minutes,123,/JodaTime/src/main/java/org/joda/time/DurationFieldType.java,return MINUTES_TYPE;
7,org.joda.time.DurationFieldType,months,178,/JodaTime/src/main/java/org/joda/time/DurationFieldType.java,return MONTHS_TYPE;
7,org.joda.time.DurationFieldType,seconds,114,/JodaTime/src/main/java/org/joda/time/DurationFieldType.java,return SECONDS_TYPE;
7,org.joda.time.DurationFieldType,weeks,160,/JodaTime/src/main/java/org/joda/time/DurationFieldType.java,return WEEKS_TYPE;
7,org.joda.time.DurationFieldType,weekyears,169,/JodaTime/src/main/java/org/joda/time/DurationFieldType.java,return WEEKYEARS_TYPE;
7,org.joda.time.DurationFieldType,years,187,/JodaTime/src/main/java/org/joda/time/DurationFieldType.java,return YEARS_TYPE;
7,org.joda.time.DurationFieldType$StandardDurationFieldType,<init>,259,/JodaTime/src/main/java/org/joda/time/DurationFieldType.java,super(name);
7,org.joda.time.DurationFieldType$StandardDurationFieldType,<init>,260,/JodaTime/src/main/java/org/joda/time/DurationFieldType.java,iOrdinal = ordinal;
7,org.joda.time.DurationFieldType$StandardDurationFieldType,<init>,261,/JodaTime/src/main/java/org/joda/time/DurationFieldType.java,}
7,org.joda.time.Instant,<init>,103,/JodaTime/src/main/java/org/joda/time/Instant.java,super();
7,org.joda.time.Instant,<init>,104,/JodaTime/src/main/java/org/joda/time/Instant.java,iMillis = instant;
7,org.joda.time.Instant,<init>,105,/JodaTime/src/main/java/org/joda/time/Instant.java,}
7,org.joda.time.Instant,getMillis,241,/JodaTime/src/main/java/org/joda/time/Instant.java,return iMillis;
7,org.joda.time.Instant,toInstant,129,/JodaTime/src/main/java/org/joda/time/Instant.java,return this;
7,org.joda.time.base.AbstractDateTime,<init>,51,/JodaTime/src/main/java/org/joda/time/base/AbstractDateTime.java,super();
7,org.joda.time.base.AbstractDateTime,<init>,52,/JodaTime/src/main/java/org/joda/time/base/AbstractDateTime.java,}
7,org.joda.time.base.AbstractInstant,<init>,60,/JodaTime/src/main/java/org/joda/time/base/AbstractInstant.java,super();
7,org.joda.time.base.AbstractInstant,<init>,61,/JodaTime/src/main/java/org/joda/time/base/AbstractInstant.java,}
7,org.joda.time.base.AbstractInstant,equals,258,/JodaTime/src/main/java/org/joda/time/base/AbstractInstant.java,if (this == readableInstant) {
7,org.joda.time.base.AbstractInstant,equals,259,/JodaTime/src/main/java/org/joda/time/base/AbstractInstant.java,return true;
7,org.joda.time.base.BaseDateTime,<init>,252,/JodaTime/src/main/java/org/joda/time/base/BaseDateTime.java,super();
7,org.joda.time.base.BaseDateTime,<init>,253,/JodaTime/src/main/java/org/joda/time/base/BaseDateTime.java,iChronology = checkChronology(chronology);
7,org.joda.time.base.BaseDateTime,<init>,254,/JodaTime/src/main/java/org/joda/time/base/BaseDateTime.java,"long instant = iChronology.getDateTimeMillis(year, monthOfYear, dayOfMonth,"
7,org.joda.time.base.BaseDateTime,<init>,256,/JodaTime/src/main/java/org/joda/time/base/BaseDateTime.java,"iMillis = checkInstant(instant, iChronology);"
7,org.joda.time.base.BaseDateTime,<init>,257,/JodaTime/src/main/java/org/joda/time/base/BaseDateTime.java,}
7,org.joda.time.base.BaseDateTime,<init>,223,/JodaTime/src/main/java/org/joda/time/base/BaseDateTime.java,"this(year, monthOfYear, dayOfMonth, hourOfDay,"
7,org.joda.time.base.BaseDateTime,<init>,225,/JodaTime/src/main/java/org/joda/time/base/BaseDateTime.java,}
7,org.joda.time.base.BaseDateTime,<init>,124,/JodaTime/src/main/java/org/joda/time/base/BaseDateTime.java,super();
7,org.joda.time.base.BaseDateTime,<init>,125,/JodaTime/src/main/java/org/joda/time/base/BaseDateTime.java,iChronology = checkChronology(chronology);
7,org.joda.time.base.BaseDateTime,<init>,126,/JodaTime/src/main/java/org/joda/time/base/BaseDateTime.java,"iMillis = checkInstant(instant, iChronology);"
7,org.joda.time.base.BaseDateTime,<init>,127,/JodaTime/src/main/java/org/joda/time/base/BaseDateTime.java,}
7,org.joda.time.base.BaseDateTime,checkChronology,270,/JodaTime/src/main/java/org/joda/time/base/BaseDateTime.java,return DateTimeUtils.getChronology(chronology);
7,org.joda.time.base.BaseDateTime,checkInstant,284,/JodaTime/src/main/java/org/joda/time/base/BaseDateTime.java,return instant;
7,org.joda.time.base.BaseDateTime,getChronology,304,/JodaTime/src/main/java/org/joda/time/base/BaseDateTime.java,return iChronology;
7,org.joda.time.base.BaseDateTime,getMillis,295,/JodaTime/src/main/java/org/joda/time/base/BaseDateTime.java,return iMillis;
7,org.joda.time.chrono.AssembledChronology,<init>,99,/JodaTime/src/main/java/org/joda/time/chrono/AssembledChronology.java,"protected AssembledChronology(Chronology base, Object param) {"
7,org.joda.time.chrono.AssembledChronology,<init>,100,/JodaTime/src/main/java/org/joda/time/chrono/AssembledChronology.java,iBase = base;
7,org.joda.time.chrono.AssembledChronology,<init>,101,/JodaTime/src/main/java/org/joda/time/chrono/AssembledChronology.java,iParam = param;
7,org.joda.time.chrono.AssembledChronology,<init>,102,/JodaTime/src/main/java/org/joda/time/chrono/AssembledChronology.java,setFields();
7,org.joda.time.chrono.AssembledChronology,<init>,103,/JodaTime/src/main/java/org/joda/time/chrono/AssembledChronology.java,}
7,org.joda.time.chrono.AssembledChronology,centuries,280,/JodaTime/src/main/java/org/joda/time/chrono/AssembledChronology.java,return iCenturies;
7,org.joda.time.chrono.AssembledChronology,centuryOfEra,284,/JodaTime/src/main/java/org/joda/time/chrono/AssembledChronology.java,return iCenturyOfEra;
7,org.joda.time.chrono.AssembledChronology,clockhourOfDay,200,/JodaTime/src/main/java/org/joda/time/chrono/AssembledChronology.java,return iClockhourOfDay;
7,org.joda.time.chrono.AssembledChronology,clockhourOfHalfday,212,/JodaTime/src/main/java/org/joda/time/chrono/AssembledChronology.java,return iClockhourOfHalfday;
7,org.joda.time.chrono.AssembledChronology,dayOfMonth,228,/JodaTime/src/main/java/org/joda/time/chrono/AssembledChronology.java,return iDayOfMonth;
7,org.joda.time.chrono.AssembledChronology,dayOfWeek,224,/JodaTime/src/main/java/org/joda/time/chrono/AssembledChronology.java,return iDayOfWeek;
7,org.joda.time.chrono.AssembledChronology,dayOfYear,232,/JodaTime/src/main/java/org/joda/time/chrono/AssembledChronology.java,return iDayOfYear;
7,org.joda.time.chrono.AssembledChronology,days,220,/JodaTime/src/main/java/org/joda/time/chrono/AssembledChronology.java,return iDays;
7,org.joda.time.chrono.AssembledChronology,era,292,/JodaTime/src/main/java/org/joda/time/chrono/AssembledChronology.java,return iEra;
7,org.joda.time.chrono.AssembledChronology,eras,288,/JodaTime/src/main/java/org/joda/time/chrono/AssembledChronology.java,return iEras;
7,org.joda.time.chrono.AssembledChronology,getBase,308,/JodaTime/src/main/java/org/joda/time/chrono/AssembledChronology.java,return iBase;
7,org.joda.time.chrono.AssembledChronology,getDateTimeMillis,131,/JodaTime/src/main/java/org/joda/time/chrono/AssembledChronology.java,if ((base = iBase) != null && (iBaseFlags & 5) == 5) {
7,org.joda.time.chrono.AssembledChronology,getDateTimeMillis,133,/JodaTime/src/main/java/org/joda/time/chrono/AssembledChronology.java,"return base.getDateTimeMillis(year, monthOfYear, dayOfMonth,"
7,org.joda.time.chrono.AssembledChronology,getDateTimeMillis,136,/JodaTime/src/main/java/org/joda/time/chrono/AssembledChronology.java,"return super.getDateTimeMillis(year, monthOfYear, dayOfMonth,"
7,org.joda.time.chrono.AssembledChronology,getParam,315,/JodaTime/src/main/java/org/joda/time/chrono/AssembledChronology.java,return iParam;
7,org.joda.time.chrono.AssembledChronology,getZone,107,/JodaTime/src/main/java/org/joda/time/chrono/AssembledChronology.java,if ((base = iBase) != null) {
7,org.joda.time.chrono.AssembledChronology,getZone,108,/JodaTime/src/main/java/org/joda/time/chrono/AssembledChronology.java,return base.getZone();
7,org.joda.time.chrono.AssembledChronology,halfdayOfDay,216,/JodaTime/src/main/java/org/joda/time/chrono/AssembledChronology.java,return iHalfdayOfDay;
7,org.joda.time.chrono.AssembledChronology,halfdays,204,/JodaTime/src/main/java/org/joda/time/chrono/AssembledChronology.java,return iHalfdays;
7,org.joda.time.chrono.AssembledChronology,hourOfDay,196,/JodaTime/src/main/java/org/joda/time/chrono/AssembledChronology.java,return iHourOfDay;
7,org.joda.time.chrono.AssembledChronology,hourOfHalfday,208,/JodaTime/src/main/java/org/joda/time/chrono/AssembledChronology.java,return iHourOfHalfday;
7,org.joda.time.chrono.AssembledChronology,hours,192,/JodaTime/src/main/java/org/joda/time/chrono/AssembledChronology.java,return iHours;
7,org.joda.time.chrono.AssembledChronology,millis,156,/JodaTime/src/main/java/org/joda/time/chrono/AssembledChronology.java,return iMillis;
7,org.joda.time.chrono.AssembledChronology,millisOfDay,164,/JodaTime/src/main/java/org/joda/time/chrono/AssembledChronology.java,return iMillisOfDay;
7,org.joda.time.chrono.AssembledChronology,millisOfSecond,160,/JodaTime/src/main/java/org/joda/time/chrono/AssembledChronology.java,return iMillisOfSecond;
7,org.joda.time.chrono.AssembledChronology,minuteOfDay,188,/JodaTime/src/main/java/org/joda/time/chrono/AssembledChronology.java,return iMinuteOfDay;
7,org.joda.time.chrono.AssembledChronology,minuteOfHour,184,/JodaTime/src/main/java/org/joda/time/chrono/AssembledChronology.java,return iMinuteOfHour;
7,org.joda.time.chrono.AssembledChronology,minutes,180,/JodaTime/src/main/java/org/joda/time/chrono/AssembledChronology.java,return iMinutes;
7,org.joda.time.chrono.AssembledChronology,monthOfYear,260,/JodaTime/src/main/java/org/joda/time/chrono/AssembledChronology.java,return iMonthOfYear;
7,org.joda.time.chrono.AssembledChronology,months,256,/JodaTime/src/main/java/org/joda/time/chrono/AssembledChronology.java,return iMonths;
7,org.joda.time.chrono.AssembledChronology,secondOfDay,176,/JodaTime/src/main/java/org/joda/time/chrono/AssembledChronology.java,return iSecondOfDay;
7,org.joda.time.chrono.AssembledChronology,secondOfMinute,172,/JodaTime/src/main/java/org/joda/time/chrono/AssembledChronology.java,return iSecondOfMinute;
7,org.joda.time.chrono.AssembledChronology,seconds,168,/JodaTime/src/main/java/org/joda/time/chrono/AssembledChronology.java,return iSeconds;
7,org.joda.time.chrono.AssembledChronology,setFields,319,/JodaTime/src/main/java/org/joda/time/chrono/AssembledChronology.java,Fields fields = new Fields();
7,org.joda.time.chrono.AssembledChronology,setFields,320,/JodaTime/src/main/java/org/joda/time/chrono/AssembledChronology.java,if (iBase != null) {
7,org.joda.time.chrono.AssembledChronology,setFields,321,/JodaTime/src/main/java/org/joda/time/chrono/AssembledChronology.java,fields.copyFieldsFrom(iBase);
7,org.joda.time.chrono.AssembledChronology,setFields,323,/JodaTime/src/main/java/org/joda/time/chrono/AssembledChronology.java,assemble(fields);
7,org.joda.time.chrono.AssembledChronology,setFields,327,/JodaTime/src/main/java/org/joda/time/chrono/AssembledChronology.java,iMillis    = (f = fields.millis)    != null ? f : super.millis();
7,org.joda.time.chrono.AssembledChronology,setFields,328,/JodaTime/src/main/java/org/joda/time/chrono/AssembledChronology.java,iSeconds   = (f = fields.seconds)   != null ? f : super.seconds();
7,org.joda.time.chrono.AssembledChronology,setFields,329,/JodaTime/src/main/java/org/joda/time/chrono/AssembledChronology.java,iMinutes   = (f = fields.minutes)   != null ? f : super.minutes();
7,org.joda.time.chrono.AssembledChronology,setFields,330,/JodaTime/src/main/java/org/joda/time/chrono/AssembledChronology.java,iHours     = (f = fields.hours)     != null ? f : super.hours();
7,org.joda.time.chrono.AssembledChronology,setFields,331,/JodaTime/src/main/java/org/joda/time/chrono/AssembledChronology.java,iHalfdays  = (f = fields.halfdays)  != null ? f : super.halfdays();
7,org.joda.time.chrono.AssembledChronology,setFields,332,/JodaTime/src/main/java/org/joda/time/chrono/AssembledChronology.java,iDays      = (f = fields.days)      != null ? f : super.days();
7,org.joda.time.chrono.AssembledChronology,setFields,333,/JodaTime/src/main/java/org/joda/time/chrono/AssembledChronology.java,iWeeks     = (f = fields.weeks)     != null ? f : super.weeks();
7,org.joda.time.chrono.AssembledChronology,setFields,334,/JodaTime/src/main/java/org/joda/time/chrono/AssembledChronology.java,iWeekyears = (f = fields.weekyears) != null ? f : super.weekyears();
7,org.joda.time.chrono.AssembledChronology,setFields,335,/JodaTime/src/main/java/org/joda/time/chrono/AssembledChronology.java,iMonths    = (f = fields.months)    != null ? f : super.months();
7,org.joda.time.chrono.AssembledChronology,setFields,336,/JodaTime/src/main/java/org/joda/time/chrono/AssembledChronology.java,iYears     = (f = fields.years)     != null ? f : super.years();
7,org.joda.time.chrono.AssembledChronology,setFields,337,/JodaTime/src/main/java/org/joda/time/chrono/AssembledChronology.java,iCenturies = (f = fields.centuries) != null ? f : super.centuries();
7,org.joda.time.chrono.AssembledChronology,setFields,338,/JodaTime/src/main/java/org/joda/time/chrono/AssembledChronology.java,iEras      = (f = fields.eras)      != null ? f : super.eras();
7,org.joda.time.chrono.AssembledChronology,setFields,343,/JodaTime/src/main/java/org/joda/time/chrono/AssembledChronology.java,iMillisOfSecond     = (f = fields.millisOfSecond)     != null ? f : super.millisOfSecond();
7,org.joda.time.chrono.AssembledChronology,setFields,344,/JodaTime/src/main/java/org/joda/time/chrono/AssembledChronology.java,iMillisOfDay        = (f = fields.millisOfDay)        != null ? f : super.millisOfDay();
7,org.joda.time.chrono.AssembledChronology,setFields,345,/JodaTime/src/main/java/org/joda/time/chrono/AssembledChronology.java,iSecondOfMinute     = (f = fields.secondOfMinute)     != null ? f : super.secondOfMinute();
7,org.joda.time.chrono.AssembledChronology,setFields,346,/JodaTime/src/main/java/org/joda/time/chrono/AssembledChronology.java,iSecondOfDay        = (f = fields.secondOfDay)        != null ? f : super.secondOfDay();
7,org.joda.time.chrono.AssembledChronology,setFields,347,/JodaTime/src/main/java/org/joda/time/chrono/AssembledChronology.java,iMinuteOfHour       = (f = fields.minuteOfHour)       != null ? f : super.minuteOfHour();
7,org.joda.time.chrono.AssembledChronology,setFields,348,/JodaTime/src/main/java/org/joda/time/chrono/AssembledChronology.java,iMinuteOfDay        = (f = fields.minuteOfDay)        != null ? f : super.minuteOfDay();
7,org.joda.time.chrono.AssembledChronology,setFields,349,/JodaTime/src/main/java/org/joda/time/chrono/AssembledChronology.java,iHourOfDay          = (f = fields.hourOfDay)          != null ? f : super.hourOfDay();
7,org.joda.time.chrono.AssembledChronology,setFields,350,/JodaTime/src/main/java/org/joda/time/chrono/AssembledChronology.java,iClockhourOfDay     = (f = fields.clockhourOfDay)     != null ? f : super.clockhourOfDay();
7,org.joda.time.chrono.AssembledChronology,setFields,351,/JodaTime/src/main/java/org/joda/time/chrono/AssembledChronology.java,iHourOfHalfday      = (f = fields.hourOfHalfday)      != null ? f : super.hourOfHalfday();
7,org.joda.time.chrono.AssembledChronology,setFields,352,/JodaTime/src/main/java/org/joda/time/chrono/AssembledChronology.java,iClockhourOfHalfday = (f = fields.clockhourOfHalfday) != null ? f : super.clockhourOfHalfday();
7,org.joda.time.chrono.AssembledChronology,setFields,353,/JodaTime/src/main/java/org/joda/time/chrono/AssembledChronology.java,iHalfdayOfDay       = (f = fields.halfdayOfDay)       != null ? f : super.halfdayOfDay();
7,org.joda.time.chrono.AssembledChronology,setFields,354,/JodaTime/src/main/java/org/joda/time/chrono/AssembledChronology.java,iDayOfWeek          = (f = fields.dayOfWeek)          != null ? f : super.dayOfWeek();
7,org.joda.time.chrono.AssembledChronology,setFields,355,/JodaTime/src/main/java/org/joda/time/chrono/AssembledChronology.java,iDayOfMonth         = (f = fields.dayOfMonth)         != null ? f : super.dayOfMonth();
7,org.joda.time.chrono.AssembledChronology,setFields,356,/JodaTime/src/main/java/org/joda/time/chrono/AssembledChronology.java,iDayOfYear          = (f = fields.dayOfYear)          != null ? f : super.dayOfYear();
7,org.joda.time.chrono.AssembledChronology,setFields,357,/JodaTime/src/main/java/org/joda/time/chrono/AssembledChronology.java,iWeekOfWeekyear     = (f = fields.weekOfWeekyear)     != null ? f : super.weekOfWeekyear();
7,org.joda.time.chrono.AssembledChronology,setFields,358,/JodaTime/src/main/java/org/joda/time/chrono/AssembledChronology.java,iWeekyear           = (f = fields.weekyear)           != null ? f : super.weekyear();
7,org.joda.time.chrono.AssembledChronology,setFields,359,/JodaTime/src/main/java/org/joda/time/chrono/AssembledChronology.java,iWeekyearOfCentury  = (f = fields.weekyearOfCentury)  != null ? f : super.weekyearOfCentury();
7,org.joda.time.chrono.AssembledChronology,setFields,360,/JodaTime/src/main/java/org/joda/time/chrono/AssembledChronology.java,iMonthOfYear        = (f = fields.monthOfYear)        != null ? f : super.monthOfYear();
7,org.joda.time.chrono.AssembledChronology,setFields,361,/JodaTime/src/main/java/org/joda/time/chrono/AssembledChronology.java,iYear               = (f = fields.year)               != null ? f : super.year();
7,org.joda.time.chrono.AssembledChronology,setFields,362,/JodaTime/src/main/java/org/joda/time/chrono/AssembledChronology.java,iYearOfEra          = (f = fields.yearOfEra)          != null ? f : super.yearOfEra();
7,org.joda.time.chrono.AssembledChronology,setFields,363,/JodaTime/src/main/java/org/joda/time/chrono/AssembledChronology.java,iYearOfCentury      = (f = fields.yearOfCentury)      != null ? f : super.yearOfCentury();
7,org.joda.time.chrono.AssembledChronology,setFields,364,/JodaTime/src/main/java/org/joda/time/chrono/AssembledChronology.java,iCenturyOfEra       = (f = fields.centuryOfEra)       != null ? f : super.centuryOfEra();
7,org.joda.time.chrono.AssembledChronology,setFields,365,/JodaTime/src/main/java/org/joda/time/chrono/AssembledChronology.java,iEra                = (f = fields.era)                != null ? f : super.era();
7,org.joda.time.chrono.AssembledChronology,setFields,369,/JodaTime/src/main/java/org/joda/time/chrono/AssembledChronology.java,if (iBase == null) {
7,org.joda.time.chrono.AssembledChronology,setFields,370,/JodaTime/src/main/java/org/joda/time/chrono/AssembledChronology.java,flags = 0;
7,org.joda.time.chrono.AssembledChronology,setFields,372,/JodaTime/src/main/java/org/joda/time/chrono/AssembledChronology.java,flags =
7,org.joda.time.chrono.AssembledChronology,setFields,385,/JodaTime/src/main/java/org/joda/time/chrono/AssembledChronology.java,iBaseFlags = flags;
7,org.joda.time.chrono.AssembledChronology,setFields,386,/JodaTime/src/main/java/org/joda/time/chrono/AssembledChronology.java,}
7,org.joda.time.chrono.AssembledChronology,weekOfWeekyear,240,/JodaTime/src/main/java/org/joda/time/chrono/AssembledChronology.java,return iWeekOfWeekyear;
7,org.joda.time.chrono.AssembledChronology,weeks,236,/JodaTime/src/main/java/org/joda/time/chrono/AssembledChronology.java,return iWeeks;
7,org.joda.time.chrono.AssembledChronology,weekyear,248,/JodaTime/src/main/java/org/joda/time/chrono/AssembledChronology.java,return iWeekyear;
7,org.joda.time.chrono.AssembledChronology,weekyearOfCentury,252,/JodaTime/src/main/java/org/joda/time/chrono/AssembledChronology.java,return iWeekyearOfCentury;
7,org.joda.time.chrono.AssembledChronology,weekyears,244,/JodaTime/src/main/java/org/joda/time/chrono/AssembledChronology.java,return iWeekyears;
7,org.joda.time.chrono.AssembledChronology,year,268,/JodaTime/src/main/java/org/joda/time/chrono/AssembledChronology.java,return iYear;
7,org.joda.time.chrono.AssembledChronology,yearOfCentury,276,/JodaTime/src/main/java/org/joda/time/chrono/AssembledChronology.java,return iYearOfCentury;
7,org.joda.time.chrono.AssembledChronology,yearOfEra,272,/JodaTime/src/main/java/org/joda/time/chrono/AssembledChronology.java,return iYearOfEra;
7,org.joda.time.chrono.AssembledChronology,years,264,/JodaTime/src/main/java/org/joda/time/chrono/AssembledChronology.java,return iYears;
7,org.joda.time.chrono.AssembledChronology$Fields,<init>,436,/JodaTime/src/main/java/org/joda/time/chrono/AssembledChronology.java,Fields() {
7,org.joda.time.chrono.AssembledChronology$Fields,<init>,437,/JodaTime/src/main/java/org/joda/time/chrono/AssembledChronology.java,}
7,org.joda.time.chrono.AssembledChronology$Fields,copyFieldsFrom,445,/JodaTime/src/main/java/org/joda/time/chrono/AssembledChronology.java,if (isSupported(f = chrono.millis())) {
7,org.joda.time.chrono.AssembledChronology$Fields,copyFieldsFrom,446,/JodaTime/src/main/java/org/joda/time/chrono/AssembledChronology.java,millis = f;
7,org.joda.time.chrono.AssembledChronology$Fields,copyFieldsFrom,448,/JodaTime/src/main/java/org/joda/time/chrono/AssembledChronology.java,if (isSupported(f = chrono.seconds())) {
7,org.joda.time.chrono.AssembledChronology$Fields,copyFieldsFrom,449,/JodaTime/src/main/java/org/joda/time/chrono/AssembledChronology.java,seconds = f;
7,org.joda.time.chrono.AssembledChronology$Fields,copyFieldsFrom,451,/JodaTime/src/main/java/org/joda/time/chrono/AssembledChronology.java,if (isSupported(f = chrono.minutes())) {
7,org.joda.time.chrono.AssembledChronology$Fields,copyFieldsFrom,452,/JodaTime/src/main/java/org/joda/time/chrono/AssembledChronology.java,minutes = f;
7,org.joda.time.chrono.AssembledChronology$Fields,copyFieldsFrom,454,/JodaTime/src/main/java/org/joda/time/chrono/AssembledChronology.java,if (isSupported(f = chrono.hours())) {
7,org.joda.time.chrono.AssembledChronology$Fields,copyFieldsFrom,455,/JodaTime/src/main/java/org/joda/time/chrono/AssembledChronology.java,hours = f;
7,org.joda.time.chrono.AssembledChronology$Fields,copyFieldsFrom,457,/JodaTime/src/main/java/org/joda/time/chrono/AssembledChronology.java,if (isSupported(f = chrono.halfdays())) {
7,org.joda.time.chrono.AssembledChronology$Fields,copyFieldsFrom,458,/JodaTime/src/main/java/org/joda/time/chrono/AssembledChronology.java,halfdays = f;
7,org.joda.time.chrono.AssembledChronology$Fields,copyFieldsFrom,460,/JodaTime/src/main/java/org/joda/time/chrono/AssembledChronology.java,if (isSupported(f = chrono.days())) {
7,org.joda.time.chrono.AssembledChronology$Fields,copyFieldsFrom,461,/JodaTime/src/main/java/org/joda/time/chrono/AssembledChronology.java,days = f;
7,org.joda.time.chrono.AssembledChronology$Fields,copyFieldsFrom,463,/JodaTime/src/main/java/org/joda/time/chrono/AssembledChronology.java,if (isSupported(f = chrono.weeks())) {
7,org.joda.time.chrono.AssembledChronology$Fields,copyFieldsFrom,464,/JodaTime/src/main/java/org/joda/time/chrono/AssembledChronology.java,weeks = f;
7,org.joda.time.chrono.AssembledChronology$Fields,copyFieldsFrom,466,/JodaTime/src/main/java/org/joda/time/chrono/AssembledChronology.java,if (isSupported(f = chrono.weekyears())) {
7,org.joda.time.chrono.AssembledChronology$Fields,copyFieldsFrom,467,/JodaTime/src/main/java/org/joda/time/chrono/AssembledChronology.java,weekyears = f;
7,org.joda.time.chrono.AssembledChronology$Fields,copyFieldsFrom,469,/JodaTime/src/main/java/org/joda/time/chrono/AssembledChronology.java,if (isSupported(f = chrono.months())) {
7,org.joda.time.chrono.AssembledChronology$Fields,copyFieldsFrom,470,/JodaTime/src/main/java/org/joda/time/chrono/AssembledChronology.java,months = f;
7,org.joda.time.chrono.AssembledChronology$Fields,copyFieldsFrom,472,/JodaTime/src/main/java/org/joda/time/chrono/AssembledChronology.java,if (isSupported(f = chrono.years())) {
7,org.joda.time.chrono.AssembledChronology$Fields,copyFieldsFrom,473,/JodaTime/src/main/java/org/joda/time/chrono/AssembledChronology.java,years = f;
7,org.joda.time.chrono.AssembledChronology$Fields,copyFieldsFrom,475,/JodaTime/src/main/java/org/joda/time/chrono/AssembledChronology.java,if (isSupported(f = chrono.centuries())) {
7,org.joda.time.chrono.AssembledChronology$Fields,copyFieldsFrom,476,/JodaTime/src/main/java/org/joda/time/chrono/AssembledChronology.java,centuries = f;
7,org.joda.time.chrono.AssembledChronology$Fields,copyFieldsFrom,478,/JodaTime/src/main/java/org/joda/time/chrono/AssembledChronology.java,if (isSupported(f = chrono.eras())) {
7,org.joda.time.chrono.AssembledChronology$Fields,copyFieldsFrom,485,/JodaTime/src/main/java/org/joda/time/chrono/AssembledChronology.java,if (isSupported(f = chrono.millisOfSecond())) {
7,org.joda.time.chrono.AssembledChronology$Fields,copyFieldsFrom,486,/JodaTime/src/main/java/org/joda/time/chrono/AssembledChronology.java,millisOfSecond = f;
7,org.joda.time.chrono.AssembledChronology$Fields,copyFieldsFrom,488,/JodaTime/src/main/java/org/joda/time/chrono/AssembledChronology.java,if (isSupported(f = chrono.millisOfDay())) {
7,org.joda.time.chrono.AssembledChronology$Fields,copyFieldsFrom,489,/JodaTime/src/main/java/org/joda/time/chrono/AssembledChronology.java,millisOfDay = f;
7,org.joda.time.chrono.AssembledChronology$Fields,copyFieldsFrom,491,/JodaTime/src/main/java/org/joda/time/chrono/AssembledChronology.java,if (isSupported(f = chrono.secondOfMinute())) {
7,org.joda.time.chrono.AssembledChronology$Fields,copyFieldsFrom,492,/JodaTime/src/main/java/org/joda/time/chrono/AssembledChronology.java,secondOfMinute = f;
7,org.joda.time.chrono.AssembledChronology$Fields,copyFieldsFrom,494,/JodaTime/src/main/java/org/joda/time/chrono/AssembledChronology.java,if (isSupported(f = chrono.secondOfDay())) {
7,org.joda.time.chrono.AssembledChronology$Fields,copyFieldsFrom,495,/JodaTime/src/main/java/org/joda/time/chrono/AssembledChronology.java,secondOfDay = f;
7,org.joda.time.chrono.AssembledChronology$Fields,copyFieldsFrom,497,/JodaTime/src/main/java/org/joda/time/chrono/AssembledChronology.java,if (isSupported(f = chrono.minuteOfHour())) {
7,org.joda.time.chrono.AssembledChronology$Fields,copyFieldsFrom,498,/JodaTime/src/main/java/org/joda/time/chrono/AssembledChronology.java,minuteOfHour = f;
7,org.joda.time.chrono.AssembledChronology$Fields,copyFieldsFrom,500,/JodaTime/src/main/java/org/joda/time/chrono/AssembledChronology.java,if (isSupported(f = chrono.minuteOfDay())) {
7,org.joda.time.chrono.AssembledChronology$Fields,copyFieldsFrom,501,/JodaTime/src/main/java/org/joda/time/chrono/AssembledChronology.java,minuteOfDay = f;
7,org.joda.time.chrono.AssembledChronology$Fields,copyFieldsFrom,503,/JodaTime/src/main/java/org/joda/time/chrono/AssembledChronology.java,if (isSupported(f = chrono.hourOfDay())) {
7,org.joda.time.chrono.AssembledChronology$Fields,copyFieldsFrom,504,/JodaTime/src/main/java/org/joda/time/chrono/AssembledChronology.java,hourOfDay = f;
7,org.joda.time.chrono.AssembledChronology$Fields,copyFieldsFrom,506,/JodaTime/src/main/java/org/joda/time/chrono/AssembledChronology.java,if (isSupported(f = chrono.clockhourOfDay())) {
7,org.joda.time.chrono.AssembledChronology$Fields,copyFieldsFrom,507,/JodaTime/src/main/java/org/joda/time/chrono/AssembledChronology.java,clockhourOfDay = f;
7,org.joda.time.chrono.AssembledChronology$Fields,copyFieldsFrom,509,/JodaTime/src/main/java/org/joda/time/chrono/AssembledChronology.java,if (isSupported(f = chrono.hourOfHalfday())) {
7,org.joda.time.chrono.AssembledChronology$Fields,copyFieldsFrom,510,/JodaTime/src/main/java/org/joda/time/chrono/AssembledChronology.java,hourOfHalfday = f;
7,org.joda.time.chrono.AssembledChronology$Fields,copyFieldsFrom,512,/JodaTime/src/main/java/org/joda/time/chrono/AssembledChronology.java,if (isSupported(f = chrono.clockhourOfHalfday())) {
7,org.joda.time.chrono.AssembledChronology$Fields,copyFieldsFrom,513,/JodaTime/src/main/java/org/joda/time/chrono/AssembledChronology.java,clockhourOfHalfday = f;
7,org.joda.time.chrono.AssembledChronology$Fields,copyFieldsFrom,515,/JodaTime/src/main/java/org/joda/time/chrono/AssembledChronology.java,if (isSupported(f = chrono.halfdayOfDay())) {
7,org.joda.time.chrono.AssembledChronology$Fields,copyFieldsFrom,516,/JodaTime/src/main/java/org/joda/time/chrono/AssembledChronology.java,halfdayOfDay = f;
7,org.joda.time.chrono.AssembledChronology$Fields,copyFieldsFrom,518,/JodaTime/src/main/java/org/joda/time/chrono/AssembledChronology.java,if (isSupported(f = chrono.dayOfWeek())) {
7,org.joda.time.chrono.AssembledChronology$Fields,copyFieldsFrom,519,/JodaTime/src/main/java/org/joda/time/chrono/AssembledChronology.java,dayOfWeek = f;
7,org.joda.time.chrono.AssembledChronology$Fields,copyFieldsFrom,521,/JodaTime/src/main/java/org/joda/time/chrono/AssembledChronology.java,if (isSupported(f = chrono.dayOfMonth())) {
7,org.joda.time.chrono.AssembledChronology$Fields,copyFieldsFrom,522,/JodaTime/src/main/java/org/joda/time/chrono/AssembledChronology.java,dayOfMonth = f;
7,org.joda.time.chrono.AssembledChronology$Fields,copyFieldsFrom,524,/JodaTime/src/main/java/org/joda/time/chrono/AssembledChronology.java,if (isSupported(f = chrono.dayOfYear())) {
7,org.joda.time.chrono.AssembledChronology$Fields,copyFieldsFrom,525,/JodaTime/src/main/java/org/joda/time/chrono/AssembledChronology.java,dayOfYear = f;
7,org.joda.time.chrono.AssembledChronology$Fields,copyFieldsFrom,527,/JodaTime/src/main/java/org/joda/time/chrono/AssembledChronology.java,if (isSupported(f = chrono.weekOfWeekyear())) {
7,org.joda.time.chrono.AssembledChronology$Fields,copyFieldsFrom,528,/JodaTime/src/main/java/org/joda/time/chrono/AssembledChronology.java,weekOfWeekyear = f;
7,org.joda.time.chrono.AssembledChronology$Fields,copyFieldsFrom,530,/JodaTime/src/main/java/org/joda/time/chrono/AssembledChronology.java,if (isSupported(f = chrono.weekyear())) {
7,org.joda.time.chrono.AssembledChronology$Fields,copyFieldsFrom,531,/JodaTime/src/main/java/org/joda/time/chrono/AssembledChronology.java,weekyear = f;
7,org.joda.time.chrono.AssembledChronology$Fields,copyFieldsFrom,533,/JodaTime/src/main/java/org/joda/time/chrono/AssembledChronology.java,if (isSupported(f = chrono.weekyearOfCentury())) {
7,org.joda.time.chrono.AssembledChronology$Fields,copyFieldsFrom,534,/JodaTime/src/main/java/org/joda/time/chrono/AssembledChronology.java,weekyearOfCentury = f;
7,org.joda.time.chrono.AssembledChronology$Fields,copyFieldsFrom,536,/JodaTime/src/main/java/org/joda/time/chrono/AssembledChronology.java,if (isSupported(f = chrono.monthOfYear())) {
7,org.joda.time.chrono.AssembledChronology$Fields,copyFieldsFrom,537,/JodaTime/src/main/java/org/joda/time/chrono/AssembledChronology.java,monthOfYear = f;
7,org.joda.time.chrono.AssembledChronology$Fields,copyFieldsFrom,539,/JodaTime/src/main/java/org/joda/time/chrono/AssembledChronology.java,if (isSupported(f = chrono.year())) {
7,org.joda.time.chrono.AssembledChronology$Fields,copyFieldsFrom,540,/JodaTime/src/main/java/org/joda/time/chrono/AssembledChronology.java,year = f;
7,org.joda.time.chrono.AssembledChronology$Fields,copyFieldsFrom,542,/JodaTime/src/main/java/org/joda/time/chrono/AssembledChronology.java,if (isSupported(f = chrono.yearOfEra())) {
7,org.joda.time.chrono.AssembledChronology$Fields,copyFieldsFrom,543,/JodaTime/src/main/java/org/joda/time/chrono/AssembledChronology.java,yearOfEra = f;
7,org.joda.time.chrono.AssembledChronology$Fields,copyFieldsFrom,545,/JodaTime/src/main/java/org/joda/time/chrono/AssembledChronology.java,if (isSupported(f = chrono.yearOfCentury())) {
7,org.joda.time.chrono.AssembledChronology$Fields,copyFieldsFrom,546,/JodaTime/src/main/java/org/joda/time/chrono/AssembledChronology.java,yearOfCentury = f;
7,org.joda.time.chrono.AssembledChronology$Fields,copyFieldsFrom,548,/JodaTime/src/main/java/org/joda/time/chrono/AssembledChronology.java,if (isSupported(f = chrono.centuryOfEra())) {
7,org.joda.time.chrono.AssembledChronology$Fields,copyFieldsFrom,549,/JodaTime/src/main/java/org/joda/time/chrono/AssembledChronology.java,centuryOfEra = f;
7,org.joda.time.chrono.AssembledChronology$Fields,copyFieldsFrom,551,/JodaTime/src/main/java/org/joda/time/chrono/AssembledChronology.java,if (isSupported(f = chrono.era())) {
7,org.joda.time.chrono.AssembledChronology$Fields,copyFieldsFrom,552,/JodaTime/src/main/java/org/joda/time/chrono/AssembledChronology.java,era = f;
7,org.joda.time.chrono.AssembledChronology$Fields,copyFieldsFrom,555,/JodaTime/src/main/java/org/joda/time/chrono/AssembledChronology.java,}
7,org.joda.time.chrono.AssembledChronology$Fields,isSupported,562,/JodaTime/src/main/java/org/joda/time/chrono/AssembledChronology.java,return field == null ? false : field.isSupported();
7,org.joda.time.chrono.AssembledChronology$Fields,isSupported,558,/JodaTime/src/main/java/org/joda/time/chrono/AssembledChronology.java,return field == null ? false : field.isSupported();
7,org.joda.time.chrono.BaseChronology,<init>,54,/JodaTime/src/main/java/org/joda/time/chrono/BaseChronology.java,super();
7,org.joda.time.chrono.BaseChronology,<init>,55,/JodaTime/src/main/java/org/joda/time/chrono/BaseChronology.java,}
7,org.joda.time.chrono.BaseChronology,eras,660,/JodaTime/src/main/java/org/joda/time/chrono/BaseChronology.java,return UnsupportedDurationField.getInstance(DurationFieldType.eras());
7,org.joda.time.chrono.BaseChronology,getDateTimeMillis,132,/JodaTime/src/main/java/org/joda/time/chrono/BaseChronology.java,"long instant = year().set(0, year);"
7,org.joda.time.chrono.BaseChronology,getDateTimeMillis,133,/JodaTime/src/main/java/org/joda/time/chrono/BaseChronology.java,"instant = monthOfYear().set(instant, monthOfYear);"
7,org.joda.time.chrono.BaseChronology,getDateTimeMillis,134,/JodaTime/src/main/java/org/joda/time/chrono/BaseChronology.java,"instant = dayOfMonth().set(instant, dayOfMonth);"
7,org.joda.time.chrono.BaseChronology,getDateTimeMillis,135,/JodaTime/src/main/java/org/joda/time/chrono/BaseChronology.java,"instant = hourOfDay().set(instant, hourOfDay);"
7,org.joda.time.chrono.BaseChronology,getDateTimeMillis,136,/JodaTime/src/main/java/org/joda/time/chrono/BaseChronology.java,"instant = minuteOfHour().set(instant, minuteOfHour);"
7,org.joda.time.chrono.BaseChronology,getDateTimeMillis,137,/JodaTime/src/main/java/org/joda/time/chrono/BaseChronology.java,"instant = secondOfMinute().set(instant, secondOfMinute);"
7,org.joda.time.chrono.BaseChronology,getDateTimeMillis,138,/JodaTime/src/main/java/org/joda/time/chrono/BaseChronology.java,"return millisOfSecond().set(instant, millisOfSecond);"
7,org.joda.time.chrono.BasicChronology,<clinit>,76,/JodaTime/src/main/java/org/joda/time/chrono/BasicChronology.java,cMillisField = MillisDurationField.INSTANCE;
7,org.joda.time.chrono.BasicChronology,<clinit>,77,/JodaTime/src/main/java/org/joda/time/chrono/BasicChronology.java,cSecondsField = new PreciseDurationField
7,org.joda.time.chrono.BasicChronology,<clinit>,79,/JodaTime/src/main/java/org/joda/time/chrono/BasicChronology.java,cMinutesField = new PreciseDurationField
7,org.joda.time.chrono.BasicChronology,<clinit>,81,/JodaTime/src/main/java/org/joda/time/chrono/BasicChronology.java,cHoursField = new PreciseDurationField
7,org.joda.time.chrono.BasicChronology,<clinit>,83,/JodaTime/src/main/java/org/joda/time/chrono/BasicChronology.java,cHalfdaysField = new PreciseDurationField
7,org.joda.time.chrono.BasicChronology,<clinit>,85,/JodaTime/src/main/java/org/joda/time/chrono/BasicChronology.java,cDaysField = new PreciseDurationField
7,org.joda.time.chrono.BasicChronology,<clinit>,87,/JodaTime/src/main/java/org/joda/time/chrono/BasicChronology.java,cWeeksField = new PreciseDurationField
7,org.joda.time.chrono.BasicChronology,<clinit>,90,/JodaTime/src/main/java/org/joda/time/chrono/BasicChronology.java,cMillisOfSecondField = new PreciseDateTimeField
7,org.joda.time.chrono.BasicChronology,<clinit>,93,/JodaTime/src/main/java/org/joda/time/chrono/BasicChronology.java,cMillisOfDayField = new PreciseDateTimeField
7,org.joda.time.chrono.BasicChronology,<clinit>,96,/JodaTime/src/main/java/org/joda/time/chrono/BasicChronology.java,cSecondOfMinuteField = new PreciseDateTimeField
7,org.joda.time.chrono.BasicChronology,<clinit>,99,/JodaTime/src/main/java/org/joda/time/chrono/BasicChronology.java,cSecondOfDayField = new PreciseDateTimeField
7,org.joda.time.chrono.BasicChronology,<clinit>,102,/JodaTime/src/main/java/org/joda/time/chrono/BasicChronology.java,cMinuteOfHourField = new PreciseDateTimeField
7,org.joda.time.chrono.BasicChronology,<clinit>,105,/JodaTime/src/main/java/org/joda/time/chrono/BasicChronology.java,cMinuteOfDayField = new PreciseDateTimeField
7,org.joda.time.chrono.BasicChronology,<clinit>,108,/JodaTime/src/main/java/org/joda/time/chrono/BasicChronology.java,cHourOfDayField = new PreciseDateTimeField
7,org.joda.time.chrono.BasicChronology,<clinit>,111,/JodaTime/src/main/java/org/joda/time/chrono/BasicChronology.java,cHourOfHalfdayField = new PreciseDateTimeField
7,org.joda.time.chrono.BasicChronology,<clinit>,114,/JodaTime/src/main/java/org/joda/time/chrono/BasicChronology.java,cClockhourOfDayField = new ZeroIsMaxDateTimeField
7,org.joda.time.chrono.BasicChronology,<clinit>,117,/JodaTime/src/main/java/org/joda/time/chrono/BasicChronology.java,cClockhourOfHalfdayField = new ZeroIsMaxDateTimeField
7,org.joda.time.chrono.BasicChronology,<clinit>,120,/JodaTime/src/main/java/org/joda/time/chrono/BasicChronology.java,cHalfdayOfDayField = new HalfdayField();
7,org.joda.time.chrono.BasicChronology,<clinit>,121,/JodaTime/src/main/java/org/joda/time/chrono/BasicChronology.java,}
7,org.joda.time.chrono.BasicChronology,<init>,126,/JodaTime/src/main/java/org/joda/time/chrono/BasicChronology.java,private transient final YearInfo[] iYearInfoCache = new YearInfo[CACHE_SIZE];
7,org.joda.time.chrono.BasicChronology,<init>,131,/JodaTime/src/main/java/org/joda/time/chrono/BasicChronology.java,"super(base, param);"
7,org.joda.time.chrono.BasicChronology,<init>,133,/JodaTime/src/main/java/org/joda/time/chrono/BasicChronology.java,if (minDaysInFirstWeek < 1 || minDaysInFirstWeek > 7) {
7,org.joda.time.chrono.BasicChronology,<init>,138,/JodaTime/src/main/java/org/joda/time/chrono/BasicChronology.java,iMinDaysInFirstWeek = minDaysInFirstWeek;
7,org.joda.time.chrono.BasicChronology,<init>,139,/JodaTime/src/main/java/org/joda/time/chrono/BasicChronology.java,}
7,org.joda.time.chrono.BasicChronology,access$100,50,/JodaTime/src/main/java/org/joda/time/chrono/BasicChronology.java,abstract class BasicChronology extends AssembledChronology {
7,org.joda.time.chrono.BasicChronology,assemble,241,/JodaTime/src/main/java/org/joda/time/chrono/BasicChronology.java,fields.millis = cMillisField;
7,org.joda.time.chrono.BasicChronology,assemble,242,/JodaTime/src/main/java/org/joda/time/chrono/BasicChronology.java,fields.seconds = cSecondsField;
7,org.joda.time.chrono.BasicChronology,assemble,243,/JodaTime/src/main/java/org/joda/time/chrono/BasicChronology.java,fields.minutes = cMinutesField;
7,org.joda.time.chrono.BasicChronology,assemble,244,/JodaTime/src/main/java/org/joda/time/chrono/BasicChronology.java,fields.hours = cHoursField;
7,org.joda.time.chrono.BasicChronology,assemble,245,/JodaTime/src/main/java/org/joda/time/chrono/BasicChronology.java,fields.halfdays = cHalfdaysField;
7,org.joda.time.chrono.BasicChronology,assemble,246,/JodaTime/src/main/java/org/joda/time/chrono/BasicChronology.java,fields.days = cDaysField;
7,org.joda.time.chrono.BasicChronology,assemble,247,/JodaTime/src/main/java/org/joda/time/chrono/BasicChronology.java,fields.weeks = cWeeksField;
7,org.joda.time.chrono.BasicChronology,assemble,249,/JodaTime/src/main/java/org/joda/time/chrono/BasicChronology.java,fields.millisOfSecond = cMillisOfSecondField;
7,org.joda.time.chrono.BasicChronology,assemble,250,/JodaTime/src/main/java/org/joda/time/chrono/BasicChronology.java,fields.millisOfDay = cMillisOfDayField;
7,org.joda.time.chrono.BasicChronology,assemble,251,/JodaTime/src/main/java/org/joda/time/chrono/BasicChronology.java,fields.secondOfMinute = cSecondOfMinuteField;
7,org.joda.time.chrono.BasicChronology,assemble,252,/JodaTime/src/main/java/org/joda/time/chrono/BasicChronology.java,fields.secondOfDay = cSecondOfDayField;
7,org.joda.time.chrono.BasicChronology,assemble,253,/JodaTime/src/main/java/org/joda/time/chrono/BasicChronology.java,fields.minuteOfHour = cMinuteOfHourField;
7,org.joda.time.chrono.BasicChronology,assemble,254,/JodaTime/src/main/java/org/joda/time/chrono/BasicChronology.java,fields.minuteOfDay = cMinuteOfDayField;
7,org.joda.time.chrono.BasicChronology,assemble,255,/JodaTime/src/main/java/org/joda/time/chrono/BasicChronology.java,fields.hourOfDay = cHourOfDayField;
7,org.joda.time.chrono.BasicChronology,assemble,256,/JodaTime/src/main/java/org/joda/time/chrono/BasicChronology.java,fields.hourOfHalfday = cHourOfHalfdayField;
7,org.joda.time.chrono.BasicChronology,assemble,257,/JodaTime/src/main/java/org/joda/time/chrono/BasicChronology.java,fields.clockhourOfDay = cClockhourOfDayField;
7,org.joda.time.chrono.BasicChronology,assemble,258,/JodaTime/src/main/java/org/joda/time/chrono/BasicChronology.java,fields.clockhourOfHalfday = cClockhourOfHalfdayField;
7,org.joda.time.chrono.BasicChronology,assemble,259,/JodaTime/src/main/java/org/joda/time/chrono/BasicChronology.java,fields.halfdayOfDay = cHalfdayOfDayField;
7,org.joda.time.chrono.BasicChronology,assemble,264,/JodaTime/src/main/java/org/joda/time/chrono/BasicChronology.java,fields.year = new BasicYearDateTimeField(this);
7,org.joda.time.chrono.BasicChronology,assemble,265,/JodaTime/src/main/java/org/joda/time/chrono/BasicChronology.java,"fields.yearOfEra = new GJYearOfEraDateTimeField(fields.year, this);"
7,org.joda.time.chrono.BasicChronology,assemble,268,/JodaTime/src/main/java/org/joda/time/chrono/BasicChronology.java,DateTimeField field = new OffsetDateTimeField(
7,org.joda.time.chrono.BasicChronology,assemble,270,/JodaTime/src/main/java/org/joda/time/chrono/BasicChronology.java,fields.centuryOfEra = new DividedDateTimeField(
7,org.joda.time.chrono.BasicChronology,assemble,273,/JodaTime/src/main/java/org/joda/time/chrono/BasicChronology.java,field = new RemainderDateTimeField(
7,org.joda.time.chrono.BasicChronology,assemble,275,/JodaTime/src/main/java/org/joda/time/chrono/BasicChronology.java,fields.yearOfCentury = new OffsetDateTimeField(
7,org.joda.time.chrono.BasicChronology,assemble,278,/JodaTime/src/main/java/org/joda/time/chrono/BasicChronology.java,fields.era = new GJEraDateTimeField(this);
7,org.joda.time.chrono.BasicChronology,assemble,279,/JodaTime/src/main/java/org/joda/time/chrono/BasicChronology.java,"fields.dayOfWeek = new GJDayOfWeekDateTimeField(this, fields.days);"
7,org.joda.time.chrono.BasicChronology,assemble,280,/JodaTime/src/main/java/org/joda/time/chrono/BasicChronology.java,"fields.dayOfMonth = new BasicDayOfMonthDateTimeField(this, fields.days);"
7,org.joda.time.chrono.BasicChronology,assemble,281,/JodaTime/src/main/java/org/joda/time/chrono/BasicChronology.java,"fields.dayOfYear = new BasicDayOfYearDateTimeField(this, fields.days);"
7,org.joda.time.chrono.BasicChronology,assemble,282,/JodaTime/src/main/java/org/joda/time/chrono/BasicChronology.java,fields.monthOfYear = new GJMonthOfYearDateTimeField(this);
7,org.joda.time.chrono.BasicChronology,assemble,283,/JodaTime/src/main/java/org/joda/time/chrono/BasicChronology.java,fields.weekyear = new BasicWeekyearDateTimeField(this);
7,org.joda.time.chrono.BasicChronology,assemble,284,/JodaTime/src/main/java/org/joda/time/chrono/BasicChronology.java,"fields.weekOfWeekyear = new BasicWeekOfWeekyearDateTimeField(this, fields.weeks);"
7,org.joda.time.chrono.BasicChronology,assemble,286,/JodaTime/src/main/java/org/joda/time/chrono/BasicChronology.java,field = new RemainderDateTimeField(
7,org.joda.time.chrono.BasicChronology,assemble,288,/JodaTime/src/main/java/org/joda/time/chrono/BasicChronology.java,fields.weekyearOfCentury = new OffsetDateTimeField(
7,org.joda.time.chrono.BasicChronology,assemble,294,/JodaTime/src/main/java/org/joda/time/chrono/BasicChronology.java,fields.years = fields.year.getDurationField();
7,org.joda.time.chrono.BasicChronology,assemble,295,/JodaTime/src/main/java/org/joda/time/chrono/BasicChronology.java,fields.centuries = fields.centuryOfEra.getDurationField();
7,org.joda.time.chrono.BasicChronology,assemble,296,/JodaTime/src/main/java/org/joda/time/chrono/BasicChronology.java,fields.months = fields.monthOfYear.getDurationField();
7,org.joda.time.chrono.BasicChronology,assemble,297,/JodaTime/src/main/java/org/joda/time/chrono/BasicChronology.java,fields.weekyears = fields.weekyear.getDurationField();
7,org.joda.time.chrono.BasicChronology,assemble,298,/JodaTime/src/main/java/org/joda/time/chrono/BasicChronology.java,}
7,org.joda.time.chrono.BasicChronology,getDateMidnightMillis,603,/JodaTime/src/main/java/org/joda/time/chrono/BasicChronology.java,"FieldUtils.verifyValueBounds(DateTimeFieldType.year(), year, getMinYear(), getMaxYear());"
7,org.joda.time.chrono.BasicChronology,getDateMidnightMillis,604,/JodaTime/src/main/java/org/joda/time/chrono/BasicChronology.java,"FieldUtils.verifyValueBounds(DateTimeFieldType.monthOfYear(), monthOfYear, 1, getMaxMonth(year));"
7,org.joda.time.chrono.BasicChronology,getDateMidnightMillis,605,/JodaTime/src/main/java/org/joda/time/chrono/BasicChronology.java,"FieldUtils.verifyValueBounds(DateTimeFieldType.dayOfMonth(), dayOfMonth, 1, getDaysInYearMonth(year, monthOfYear));"
7,org.joda.time.chrono.BasicChronology,getDateMidnightMillis,606,/JodaTime/src/main/java/org/joda/time/chrono/BasicChronology.java,"return getYearMonthDayMillis(year, monthOfYear, dayOfMonth);"
7,org.joda.time.chrono.BasicChronology,getDateTimeMillis,153,/JodaTime/src/main/java/org/joda/time/chrono/BasicChronology.java,if ((base = getBase()) != null) {
7,org.joda.time.chrono.BasicChronology,getDateTimeMillis,157,/JodaTime/src/main/java/org/joda/time/chrono/BasicChronology.java,FieldUtils.verifyValueBounds
7,org.joda.time.chrono.BasicChronology,getDateTimeMillis,159,/JodaTime/src/main/java/org/joda/time/chrono/BasicChronology.java,"return getDateMidnightMillis(year, monthOfYear, dayOfMonth) + millisOfDay;"
7,org.joda.time.chrono.BasicChronology,getDateTimeMillis,167,/JodaTime/src/main/java/org/joda/time/chrono/BasicChronology.java,if ((base = getBase()) != null) {
7,org.joda.time.chrono.BasicChronology,getDateTimeMillis,172,/JodaTime/src/main/java/org/joda/time/chrono/BasicChronology.java,"FieldUtils.verifyValueBounds(DateTimeFieldType.hourOfDay(), hourOfDay, 0, 23);"
7,org.joda.time.chrono.BasicChronology,getDateTimeMillis,173,/JodaTime/src/main/java/org/joda/time/chrono/BasicChronology.java,"FieldUtils.verifyValueBounds(DateTimeFieldType.minuteOfHour(), minuteOfHour, 0, 59);"
7,org.joda.time.chrono.BasicChronology,getDateTimeMillis,174,/JodaTime/src/main/java/org/joda/time/chrono/BasicChronology.java,"FieldUtils.verifyValueBounds(DateTimeFieldType.secondOfMinute(), secondOfMinute, 0, 59);"
7,org.joda.time.chrono.BasicChronology,getDateTimeMillis,175,/JodaTime/src/main/java/org/joda/time/chrono/BasicChronology.java,"FieldUtils.verifyValueBounds(DateTimeFieldType.millisOfSecond(), millisOfSecond, 0, 999);"
7,org.joda.time.chrono.BasicChronology,getDateTimeMillis,177,/JodaTime/src/main/java/org/joda/time/chrono/BasicChronology.java,"return getDateMidnightMillis(year, monthOfYear, dayOfMonth)"
7,org.joda.time.chrono.BasicChronology,getDayOfMonth,448,/JodaTime/src/main/java/org/joda/time/chrono/BasicChronology.java,int year = getYear(millis);
7,org.joda.time.chrono.BasicChronology,getDayOfMonth,449,/JodaTime/src/main/java/org/joda/time/chrono/BasicChronology.java,"int month = getMonthOfYear(millis, year);"
7,org.joda.time.chrono.BasicChronology,getDayOfMonth,450,/JodaTime/src/main/java/org/joda/time/chrono/BasicChronology.java,"return getDayOfMonth(millis, year, month);"
7,org.joda.time.chrono.BasicChronology,getDayOfMonth,458,/JodaTime/src/main/java/org/joda/time/chrono/BasicChronology.java,"int month = getMonthOfYear(millis, year);"
7,org.joda.time.chrono.BasicChronology,getDayOfMonth,459,/JodaTime/src/main/java/org/joda/time/chrono/BasicChronology.java,"return getDayOfMonth(millis, year, month);"
7,org.joda.time.chrono.BasicChronology,getDayOfMonth,468,/JodaTime/src/main/java/org/joda/time/chrono/BasicChronology.java,long dateMillis = getYearMillis(year);
7,org.joda.time.chrono.BasicChronology,getDayOfMonth,469,/JodaTime/src/main/java/org/joda/time/chrono/BasicChronology.java,"dateMillis += getTotalMillisByYearMonth(year, month);"
7,org.joda.time.chrono.BasicChronology,getDayOfMonth,470,/JodaTime/src/main/java/org/joda/time/chrono/BasicChronology.java,return (int) ((millis - dateMillis) / DateTimeConstants.MILLIS_PER_DAY) + 1;
7,org.joda.time.chrono.BasicChronology,getDayOfWeek,534,/JodaTime/src/main/java/org/joda/time/chrono/BasicChronology.java,if (instant >= 0) {
7,org.joda.time.chrono.BasicChronology,getDayOfWeek,535,/JodaTime/src/main/java/org/joda/time/chrono/BasicChronology.java,daysSince19700101 = instant / DateTimeConstants.MILLIS_PER_DAY;
7,org.joda.time.chrono.BasicChronology,getDayOfWeek,537,/JodaTime/src/main/java/org/joda/time/chrono/BasicChronology.java,daysSince19700101 = (instant - (DateTimeConstants.MILLIS_PER_DAY - 1))
7,org.joda.time.chrono.BasicChronology,getDayOfWeek,539,/JodaTime/src/main/java/org/joda/time/chrono/BasicChronology.java,if (daysSince19700101 < -3) {
7,org.joda.time.chrono.BasicChronology,getDayOfWeek,540,/JodaTime/src/main/java/org/joda/time/chrono/BasicChronology.java,return 7 + (int) ((daysSince19700101 + 4) % 7);
7,org.joda.time.chrono.BasicChronology,getDayOfWeek,544,/JodaTime/src/main/java/org/joda/time/chrono/BasicChronology.java,return 1 + (int) ((daysSince19700101 + 3) % 7);
7,org.joda.time.chrono.BasicChronology,getDayOfYear,485,/JodaTime/src/main/java/org/joda/time/chrono/BasicChronology.java,long yearStart = getYearMillis(year);
7,org.joda.time.chrono.BasicChronology,getDayOfYear,486,/JodaTime/src/main/java/org/joda/time/chrono/BasicChronology.java,return (int) ((instant - yearStart) / DateTimeConstants.MILLIS_PER_DAY) + 1;
7,org.joda.time.chrono.BasicChronology,getFirstWeekOfYearMillis,339,/JodaTime/src/main/java/org/joda/time/chrono/BasicChronology.java,long jan1millis = getYearMillis(year);
7,org.joda.time.chrono.BasicChronology,getFirstWeekOfYearMillis,340,/JodaTime/src/main/java/org/joda/time/chrono/BasicChronology.java,int jan1dayOfWeek = getDayOfWeek(jan1millis);
7,org.joda.time.chrono.BasicChronology,getFirstWeekOfYearMillis,342,/JodaTime/src/main/java/org/joda/time/chrono/BasicChronology.java,if (jan1dayOfWeek > (8 - iMinDaysInFirstWeek)) {
7,org.joda.time.chrono.BasicChronology,getFirstWeekOfYearMillis,344,/JodaTime/src/main/java/org/joda/time/chrono/BasicChronology.java,return jan1millis + (8 - jan1dayOfWeek)
7,org.joda.time.chrono.BasicChronology,getMaxMonth,691,/JodaTime/src/main/java/org/joda/time/chrono/BasicChronology.java,return 12;
7,org.joda.time.chrono.BasicChronology,getMaxMonth,682,/JodaTime/src/main/java/org/joda/time/chrono/BasicChronology.java,return getMaxMonth();
7,org.joda.time.chrono.BasicChronology,getMillisOfDay,551,/JodaTime/src/main/java/org/joda/time/chrono/BasicChronology.java,if (instant >= 0) {
7,org.joda.time.chrono.BasicChronology,getMillisOfDay,552,/JodaTime/src/main/java/org/joda/time/chrono/BasicChronology.java,return (int) (instant % DateTimeConstants.MILLIS_PER_DAY);
7,org.joda.time.chrono.BasicChronology,getMillisOfDay,554,/JodaTime/src/main/java/org/joda/time/chrono/BasicChronology.java,return (DateTimeConstants.MILLIS_PER_DAY - 1)
7,org.joda.time.chrono.BasicChronology,getMinimumDaysInFirstWeek,185,/JodaTime/src/main/java/org/joda/time/chrono/BasicChronology.java,return iMinDaysInFirstWeek;
7,org.joda.time.chrono.BasicChronology,getMonthOfYear,435,/JodaTime/src/main/java/org/joda/time/chrono/BasicChronology.java,"return getMonthOfYear(millis, getYear(millis));"
7,org.joda.time.chrono.BasicChronology,getWeekOfWeekyear,508,/JodaTime/src/main/java/org/joda/time/chrono/BasicChronology.java,"return getWeekOfWeekyear(instant, getYear(instant));"
7,org.joda.time.chrono.BasicChronology,getWeekOfWeekyear,516,/JodaTime/src/main/java/org/joda/time/chrono/BasicChronology.java,long firstWeekMillis1 = getFirstWeekOfYearMillis(year);
7,org.joda.time.chrono.BasicChronology,getWeekOfWeekyear,517,/JodaTime/src/main/java/org/joda/time/chrono/BasicChronology.java,if (instant < firstWeekMillis1) {
7,org.joda.time.chrono.BasicChronology,getWeekOfWeekyear,520,/JodaTime/src/main/java/org/joda/time/chrono/BasicChronology.java,long firstWeekMillis2 = getFirstWeekOfYearMillis(year + 1);
7,org.joda.time.chrono.BasicChronology,getWeekOfWeekyear,521,/JodaTime/src/main/java/org/joda/time/chrono/BasicChronology.java,if (instant >= firstWeekMillis2) {
7,org.joda.time.chrono.BasicChronology,getWeekOfWeekyear,524,/JodaTime/src/main/java/org/joda/time/chrono/BasicChronology.java,return (int) ((instant - firstWeekMillis1) / DateTimeConstants.MILLIS_PER_WEEK) + 1;
7,org.joda.time.chrono.BasicChronology,getWeeksInYear,327,/JodaTime/src/main/java/org/joda/time/chrono/BasicChronology.java,long firstWeekMillis1 = getFirstWeekOfYearMillis(year);
7,org.joda.time.chrono.BasicChronology,getWeeksInYear,328,/JodaTime/src/main/java/org/joda/time/chrono/BasicChronology.java,long firstWeekMillis2 = getFirstWeekOfYearMillis(year + 1);
7,org.joda.time.chrono.BasicChronology,getWeeksInYear,329,/JodaTime/src/main/java/org/joda/time/chrono/BasicChronology.java,return (int) ((firstWeekMillis2 - firstWeekMillis1) / DateTimeConstants.MILLIS_PER_WEEK);
7,org.joda.time.chrono.BasicChronology,getWeekyear,493,/JodaTime/src/main/java/org/joda/time/chrono/BasicChronology.java,int year = getYear(instant);
7,org.joda.time.chrono.BasicChronology,getWeekyear,494,/JodaTime/src/main/java/org/joda/time/chrono/BasicChronology.java,"int week = getWeekOfWeekyear(instant, year);"
7,org.joda.time.chrono.BasicChronology,getWeekyear,495,/JodaTime/src/main/java/org/joda/time/chrono/BasicChronology.java,if (week == 1) {
7,org.joda.time.chrono.BasicChronology,getWeekyear,496,/JodaTime/src/main/java/org/joda/time/chrono/BasicChronology.java,return getYear(instant + DateTimeConstants.MILLIS_PER_WEEK);
7,org.joda.time.chrono.BasicChronology,getYear,399,/JodaTime/src/main/java/org/joda/time/chrono/BasicChronology.java,long unitMillis = getAverageMillisPerYearDividedByTwo();
7,org.joda.time.chrono.BasicChronology,getYear,400,/JodaTime/src/main/java/org/joda/time/chrono/BasicChronology.java,long i2 = (instant >> 1) + getApproxMillisAtEpochDividedByTwo();
7,org.joda.time.chrono.BasicChronology,getYear,401,/JodaTime/src/main/java/org/joda/time/chrono/BasicChronology.java,if (i2 < 0) {
7,org.joda.time.chrono.BasicChronology,getYear,402,/JodaTime/src/main/java/org/joda/time/chrono/BasicChronology.java,i2 = i2 - unitMillis + 1;
7,org.joda.time.chrono.BasicChronology,getYear,404,/JodaTime/src/main/java/org/joda/time/chrono/BasicChronology.java,int year = (int) (i2 / unitMillis);
7,org.joda.time.chrono.BasicChronology,getYear,406,/JodaTime/src/main/java/org/joda/time/chrono/BasicChronology.java,long yearStart = getYearMillis(year);
7,org.joda.time.chrono.BasicChronology,getYear,407,/JodaTime/src/main/java/org/joda/time/chrono/BasicChronology.java,long diff = instant - yearStart;
7,org.joda.time.chrono.BasicChronology,getYear,409,/JodaTime/src/main/java/org/joda/time/chrono/BasicChronology.java,if (diff < 0) {
7,org.joda.time.chrono.BasicChronology,getYear,411,/JodaTime/src/main/java/org/joda/time/chrono/BasicChronology.java,} else if (diff >= DateTimeConstants.MILLIS_PER_DAY * 365L) {
7,org.joda.time.chrono.BasicChronology,getYear,414,/JodaTime/src/main/java/org/joda/time/chrono/BasicChronology.java,if (isLeapYear(year)) {
7,org.joda.time.chrono.BasicChronology,getYear,417,/JodaTime/src/main/java/org/joda/time/chrono/BasicChronology.java,oneYear = DateTimeConstants.MILLIS_PER_DAY * 365L;
7,org.joda.time.chrono.BasicChronology,getYear,420,/JodaTime/src/main/java/org/joda/time/chrono/BasicChronology.java,yearStart += oneYear;
7,org.joda.time.chrono.BasicChronology,getYear,422,/JodaTime/src/main/java/org/joda/time/chrono/BasicChronology.java,if (yearStart <= instant) {
7,org.joda.time.chrono.BasicChronology,getYear,424,/JodaTime/src/main/java/org/joda/time/chrono/BasicChronology.java,year++;
7,org.joda.time.chrono.BasicChronology,getYear,428,/JodaTime/src/main/java/org/joda/time/chrono/BasicChronology.java,return year;
7,org.joda.time.chrono.BasicChronology,getYearInfo,738,/JodaTime/src/main/java/org/joda/time/chrono/BasicChronology.java,YearInfo info = iYearInfoCache[year & CACHE_MASK];
7,org.joda.time.chrono.BasicChronology,getYearInfo,739,/JodaTime/src/main/java/org/joda/time/chrono/BasicChronology.java,if (info == null || info.iYear != year) {
7,org.joda.time.chrono.BasicChronology,getYearInfo,740,/JodaTime/src/main/java/org/joda/time/chrono/BasicChronology.java,"info = new YearInfo(year, calculateFirstDayOfYearMillis(year));"
7,org.joda.time.chrono.BasicChronology,getYearInfo,741,/JodaTime/src/main/java/org/joda/time/chrono/BasicChronology.java,iYearInfoCache[year & CACHE_MASK] = info;
7,org.joda.time.chrono.BasicChronology,getYearInfo,743,/JodaTime/src/main/java/org/joda/time/chrono/BasicChronology.java,return info;
7,org.joda.time.chrono.BasicChronology,getYearMillis,360,/JodaTime/src/main/java/org/joda/time/chrono/BasicChronology.java,return getYearInfo(year).iFirstDayMillis;
7,org.joda.time.chrono.BasicChronology,getYearMonthDayMillis,385,/JodaTime/src/main/java/org/joda/time/chrono/BasicChronology.java,long millis = getYearMillis(year);
7,org.joda.time.chrono.BasicChronology,getYearMonthDayMillis,386,/JodaTime/src/main/java/org/joda/time/chrono/BasicChronology.java,"millis += getTotalMillisByYearMonth(year, month);"
7,org.joda.time.chrono.BasicChronology,getYearMonthDayMillis,387,/JodaTime/src/main/java/org/joda/time/chrono/BasicChronology.java,return millis + (dayOfMonth - 1) * (long)DateTimeConstants.MILLIS_PER_DAY;
7,org.joda.time.chrono.BasicChronology,getZone,143,/JodaTime/src/main/java/org/joda/time/chrono/BasicChronology.java,if ((base = getBase()) != null) {
7,org.joda.time.chrono.BasicChronology,getZone,146,/JodaTime/src/main/java/org/joda/time/chrono/BasicChronology.java,return DateTimeZone.UTC;
7,org.joda.time.chrono.BasicChronology$HalfdayField,<init>,750,/JodaTime/src/main/java/org/joda/time/chrono/BasicChronology.java,"super(DateTimeFieldType.halfdayOfDay(), cHalfdaysField, cDaysField);"
7,org.joda.time.chrono.BasicChronology$HalfdayField,<init>,751,/JodaTime/src/main/java/org/joda/time/chrono/BasicChronology.java,}
7,org.joda.time.chrono.BasicChronology$YearInfo,<init>,770,/JodaTime/src/main/java/org/joda/time/chrono/BasicChronology.java,"YearInfo(int year, long firstDayMillis) {"
7,org.joda.time.chrono.BasicChronology$YearInfo,<init>,771,/JodaTime/src/main/java/org/joda/time/chrono/BasicChronology.java,iYear = year;
7,org.joda.time.chrono.BasicChronology$YearInfo,<init>,772,/JodaTime/src/main/java/org/joda/time/chrono/BasicChronology.java,iFirstDayMillis = firstDayMillis;
7,org.joda.time.chrono.BasicChronology$YearInfo,<init>,773,/JodaTime/src/main/java/org/joda/time/chrono/BasicChronology.java,}
7,org.joda.time.chrono.BasicDayOfMonthDateTimeField,<init>,41,/JodaTime/src/main/java/org/joda/time/chrono/BasicDayOfMonthDateTimeField.java,"super(DateTimeFieldType.dayOfMonth(), days);"
7,org.joda.time.chrono.BasicDayOfMonthDateTimeField,<init>,42,/JodaTime/src/main/java/org/joda/time/chrono/BasicDayOfMonthDateTimeField.java,iChronology = chronology;
7,org.joda.time.chrono.BasicDayOfMonthDateTimeField,<init>,43,/JodaTime/src/main/java/org/joda/time/chrono/BasicDayOfMonthDateTimeField.java,}
7,org.joda.time.chrono.BasicDayOfMonthDateTimeField,get,47,/JodaTime/src/main/java/org/joda/time/chrono/BasicDayOfMonthDateTimeField.java,return iChronology.getDayOfMonth(instant);
7,org.joda.time.chrono.BasicDayOfMonthDateTimeField,getMaximumValueForSet,96,/JodaTime/src/main/java/org/joda/time/chrono/BasicDayOfMonthDateTimeField.java,"return iChronology.getDaysInMonthMaxForSet(instant, value);"
7,org.joda.time.chrono.BasicDayOfMonthDateTimeField,getMinimumValue,55,/JodaTime/src/main/java/org/joda/time/chrono/BasicDayOfMonthDateTimeField.java,return 1;
7,org.joda.time.chrono.BasicDayOfMonthDateTimeField,getRangeDurationField,51,/JodaTime/src/main/java/org/joda/time/chrono/BasicDayOfMonthDateTimeField.java,return iChronology.months();
7,org.joda.time.chrono.BasicDayOfYearDateTimeField,<init>,41,/JodaTime/src/main/java/org/joda/time/chrono/BasicDayOfYearDateTimeField.java,"super(DateTimeFieldType.dayOfYear(), days);"
7,org.joda.time.chrono.BasicDayOfYearDateTimeField,<init>,42,/JodaTime/src/main/java/org/joda/time/chrono/BasicDayOfYearDateTimeField.java,iChronology = chronology;
7,org.joda.time.chrono.BasicDayOfYearDateTimeField,<init>,43,/JodaTime/src/main/java/org/joda/time/chrono/BasicDayOfYearDateTimeField.java,}
7,org.joda.time.chrono.BasicDayOfYearDateTimeField,getRangeDurationField,56,/JodaTime/src/main/java/org/joda/time/chrono/BasicDayOfYearDateTimeField.java,return iChronology.years();
7,org.joda.time.chrono.BasicGJChronology,<clinit>,42,/JodaTime/src/main/java/org/joda/time/chrono/BasicGJChronology.java,private static final int[] MIN_DAYS_PER_MONTH_ARRAY = {
7,org.joda.time.chrono.BasicGJChronology,<clinit>,45,/JodaTime/src/main/java/org/joda/time/chrono/BasicGJChronology.java,private static final int[] MAX_DAYS_PER_MONTH_ARRAY = {
7,org.joda.time.chrono.BasicGJChronology,<clinit>,53,/JodaTime/src/main/java/org/joda/time/chrono/BasicGJChronology.java,MIN_TOTAL_MILLIS_BY_MONTH_ARRAY = new long[12];
7,org.joda.time.chrono.BasicGJChronology,<clinit>,54,/JodaTime/src/main/java/org/joda/time/chrono/BasicGJChronology.java,MAX_TOTAL_MILLIS_BY_MONTH_ARRAY = new long[12];
7,org.joda.time.chrono.BasicGJChronology,<clinit>,56,/JodaTime/src/main/java/org/joda/time/chrono/BasicGJChronology.java,long minSum = 0;
7,org.joda.time.chrono.BasicGJChronology,<clinit>,57,/JodaTime/src/main/java/org/joda/time/chrono/BasicGJChronology.java,long maxSum = 0;
7,org.joda.time.chrono.BasicGJChronology,<clinit>,58,/JodaTime/src/main/java/org/joda/time/chrono/BasicGJChronology.java,for (int i = 0; i < 11; i++) {
7,org.joda.time.chrono.BasicGJChronology,<clinit>,59,/JodaTime/src/main/java/org/joda/time/chrono/BasicGJChronology.java,long millis = MIN_DAYS_PER_MONTH_ARRAY[i]
7,org.joda.time.chrono.BasicGJChronology,<clinit>,61,/JodaTime/src/main/java/org/joda/time/chrono/BasicGJChronology.java,minSum += millis;
7,org.joda.time.chrono.BasicGJChronology,<clinit>,62,/JodaTime/src/main/java/org/joda/time/chrono/BasicGJChronology.java,MIN_TOTAL_MILLIS_BY_MONTH_ARRAY[i + 1] = minSum;
7,org.joda.time.chrono.BasicGJChronology,<clinit>,64,/JodaTime/src/main/java/org/joda/time/chrono/BasicGJChronology.java,millis = MAX_DAYS_PER_MONTH_ARRAY[i]
7,org.joda.time.chrono.BasicGJChronology,<clinit>,66,/JodaTime/src/main/java/org/joda/time/chrono/BasicGJChronology.java,maxSum += millis;
7,org.joda.time.chrono.BasicGJChronology,<clinit>,67,/JodaTime/src/main/java/org/joda/time/chrono/BasicGJChronology.java,MAX_TOTAL_MILLIS_BY_MONTH_ARRAY[i + 1] = maxSum;
7,org.joda.time.chrono.BasicGJChronology,<clinit>,69,/JodaTime/src/main/java/org/joda/time/chrono/BasicGJChronology.java,}
7,org.joda.time.chrono.BasicGJChronology,<init>,75,/JodaTime/src/main/java/org/joda/time/chrono/BasicGJChronology.java,"super(base, param, minDaysInFirstWeek);"
7,org.joda.time.chrono.BasicGJChronology,<init>,76,/JodaTime/src/main/java/org/joda/time/chrono/BasicGJChronology.java,}
7,org.joda.time.chrono.BasicGJChronology,getDaysInMonthMaxForSet,134,/JodaTime/src/main/java/org/joda/time/chrono/BasicGJChronology.java,return (value > 28 ? getDaysInMonthMax(instant) : 28);
7,org.joda.time.chrono.BasicGJChronology,getDaysInYearMonth,120,/JodaTime/src/main/java/org/joda/time/chrono/BasicGJChronology.java,if (isLeapYear(year)) {
7,org.joda.time.chrono.BasicGJChronology,getDaysInYearMonth,121,/JodaTime/src/main/java/org/joda/time/chrono/BasicGJChronology.java,return MAX_DAYS_PER_MONTH_ARRAY[month - 1];
7,org.joda.time.chrono.BasicGJChronology,getDaysInYearMonth,123,/JodaTime/src/main/java/org/joda/time/chrono/BasicGJChronology.java,return MIN_DAYS_PER_MONTH_ARRAY[month - 1];
7,org.joda.time.chrono.BasicGJChronology,getMonthOfYear,88,/JodaTime/src/main/java/org/joda/time/chrono/BasicGJChronology.java,int i = (int)((millis - getYearMillis(year)) >> 10);
7,org.joda.time.chrono.BasicGJChronology,getMonthOfYear,93,/JodaTime/src/main/java/org/joda/time/chrono/BasicGJChronology.java,return
7,org.joda.time.chrono.BasicGJChronology,getTotalMillisByYearMonth,139,/JodaTime/src/main/java/org/joda/time/chrono/BasicGJChronology.java,if (isLeapYear(year)) {
7,org.joda.time.chrono.BasicGJChronology,getTotalMillisByYearMonth,140,/JodaTime/src/main/java/org/joda/time/chrono/BasicGJChronology.java,return MAX_TOTAL_MILLIS_BY_MONTH_ARRAY[month - 1];
7,org.joda.time.chrono.BasicGJChronology,getTotalMillisByYearMonth,142,/JodaTime/src/main/java/org/joda/time/chrono/BasicGJChronology.java,return MIN_TOTAL_MILLIS_BY_MONTH_ARRAY[month - 1];
7,org.joda.time.chrono.BasicGJChronology,setYear,175,/JodaTime/src/main/java/org/joda/time/chrono/BasicGJChronology.java,int thisYear = getYear(instant);
7,org.joda.time.chrono.BasicGJChronology,setYear,176,/JodaTime/src/main/java/org/joda/time/chrono/BasicGJChronology.java,"int dayOfYear = getDayOfYear(instant, thisYear);"
7,org.joda.time.chrono.BasicGJChronology,setYear,177,/JodaTime/src/main/java/org/joda/time/chrono/BasicGJChronology.java,int millisOfDay = getMillisOfDay(instant);
7,org.joda.time.chrono.BasicGJChronology,setYear,179,/JodaTime/src/main/java/org/joda/time/chrono/BasicGJChronology.java,if (dayOfYear > (31 + 28)) { // after Feb 28
7,org.joda.time.chrono.BasicGJChronology,setYear,180,/JodaTime/src/main/java/org/joda/time/chrono/BasicGJChronology.java,if (isLeapYear(thisYear)) {
7,org.joda.time.chrono.BasicGJChronology,setYear,182,/JodaTime/src/main/java/org/joda/time/chrono/BasicGJChronology.java,if (!isLeapYear(year)) {
7,org.joda.time.chrono.BasicGJChronology,setYear,184,/JodaTime/src/main/java/org/joda/time/chrono/BasicGJChronology.java,dayOfYear--;
7,org.joda.time.chrono.BasicGJChronology,setYear,195,/JodaTime/src/main/java/org/joda/time/chrono/BasicGJChronology.java,"instant = getYearMonthDayMillis(year, 1, dayOfYear);"
7,org.joda.time.chrono.BasicGJChronology,setYear,196,/JodaTime/src/main/java/org/joda/time/chrono/BasicGJChronology.java,instant += millisOfDay;
7,org.joda.time.chrono.BasicGJChronology,setYear,198,/JodaTime/src/main/java/org/joda/time/chrono/BasicGJChronology.java,return instant;
7,org.joda.time.chrono.BasicMonthOfYearDateTimeField,<init>,51,/JodaTime/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java,"super(DateTimeFieldType.monthOfYear(), chronology.getAverageMillisPerMonth());"
7,org.joda.time.chrono.BasicMonthOfYearDateTimeField,<init>,52,/JodaTime/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java,iChronology = chronology;
7,org.joda.time.chrono.BasicMonthOfYearDateTimeField,<init>,53,/JodaTime/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java,iMax = iChronology.getMaxMonth();
7,org.joda.time.chrono.BasicMonthOfYearDateTimeField,<init>,54,/JodaTime/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java,iLeapMonth = leapMonth;
7,org.joda.time.chrono.BasicMonthOfYearDateTimeField,<init>,55,/JodaTime/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java,}
7,org.joda.time.chrono.BasicMonthOfYearDateTimeField,add,92,/JodaTime/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java,if (months == 0) {
7,org.joda.time.chrono.BasicMonthOfYearDateTimeField,add,98,/JodaTime/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java,long timePart = iChronology.getMillisOfDay(instant);
7,org.joda.time.chrono.BasicMonthOfYearDateTimeField,add,103,/JodaTime/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java,int thisYear = iChronology.getYear(instant);
7,org.joda.time.chrono.BasicMonthOfYearDateTimeField,add,104,/JodaTime/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java,"int thisMonth = iChronology.getMonthOfYear(instant, thisYear);"
7,org.joda.time.chrono.BasicMonthOfYearDateTimeField,add,112,/JodaTime/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java,int monthToUse = thisMonth - 1 + months;
7,org.joda.time.chrono.BasicMonthOfYearDateTimeField,add,113,/JodaTime/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java,if (monthToUse >= 0) {
7,org.joda.time.chrono.BasicMonthOfYearDateTimeField,add,114,/JodaTime/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java,yearToUse = thisYear + (monthToUse / iMax);
7,org.joda.time.chrono.BasicMonthOfYearDateTimeField,add,115,/JodaTime/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java,monthToUse = (monthToUse % iMax) + 1;
7,org.joda.time.chrono.BasicMonthOfYearDateTimeField,add,136,/JodaTime/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java,"int dayToUse = iChronology.getDayOfMonth(instant, thisYear, thisMonth);"
7,org.joda.time.chrono.BasicMonthOfYearDateTimeField,add,137,/JodaTime/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java,"int maxDay = iChronology.getDaysInYearMonth(yearToUse, monthToUse);"
7,org.joda.time.chrono.BasicMonthOfYearDateTimeField,add,138,/JodaTime/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java,if (dayToUse > maxDay) {
7,org.joda.time.chrono.BasicMonthOfYearDateTimeField,add,144,/JodaTime/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java,long datePart =
7,org.joda.time.chrono.BasicMonthOfYearDateTimeField,add,146,/JodaTime/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java,return datePart + timePart;
7,org.joda.time.chrono.BasicMonthOfYearDateTimeField,get,72,/JodaTime/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java,return iChronology.getMonthOfYear(instant);
7,org.joda.time.chrono.BasicMonthOfYearDateTimeField,getLeapDurationField,328,/JodaTime/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java,return iChronology.days();
7,org.joda.time.chrono.BasicMonthOfYearDateTimeField,getRangeDurationField,309,/JodaTime/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java,return iChronology.years();
7,org.joda.time.chrono.BasicMonthOfYearDateTimeField,set,292,/JodaTime/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java,"FieldUtils.verifyValueBounds(this, month, MIN, iMax);"
7,org.joda.time.chrono.BasicMonthOfYearDateTimeField,set,294,/JodaTime/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java,int thisYear = iChronology.getYear(instant);
7,org.joda.time.chrono.BasicMonthOfYearDateTimeField,set,296,/JodaTime/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java,"int thisDom = iChronology.getDayOfMonth(instant, thisYear);"
7,org.joda.time.chrono.BasicMonthOfYearDateTimeField,set,297,/JodaTime/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java,"int maxDom = iChronology.getDaysInYearMonth(thisYear, month);"
7,org.joda.time.chrono.BasicMonthOfYearDateTimeField,set,298,/JodaTime/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java,if (thisDom > maxDom) {
7,org.joda.time.chrono.BasicMonthOfYearDateTimeField,set,303,/JodaTime/src/main/java/org/joda/time/chrono/BasicMonthOfYearDateTimeField.java,"return iChronology.getYearMonthDayMillis(thisYear, month, thisDom) +"
7,org.joda.time.chrono.BasicSingleEraDateTimeField,<init>,51,/JodaTime/src/main/java/org/joda/time/chrono/BasicSingleEraDateTimeField.java,super(DateTimeFieldType.era());
7,org.joda.time.chrono.BasicSingleEraDateTimeField,<init>,52,/JodaTime/src/main/java/org/joda/time/chrono/BasicSingleEraDateTimeField.java,iEraText = text;
7,org.joda.time.chrono.BasicSingleEraDateTimeField,<init>,53,/JodaTime/src/main/java/org/joda/time/chrono/BasicSingleEraDateTimeField.java,}
7,org.joda.time.chrono.BasicSingleEraDateTimeField,getDurationField,106,/JodaTime/src/main/java/org/joda/time/chrono/BasicSingleEraDateTimeField.java,return UnsupportedDurationField.getInstance(DurationFieldType.eras());
7,org.joda.time.chrono.BasicSingleEraDateTimeField,getRangeDurationField,111,/JodaTime/src/main/java/org/joda/time/chrono/BasicSingleEraDateTimeField.java,return null;
7,org.joda.time.chrono.BasicWeekOfWeekyearDateTimeField,<init>,42,/JodaTime/src/main/java/org/joda/time/chrono/BasicWeekOfWeekyearDateTimeField.java,"super(DateTimeFieldType.weekOfWeekyear(), weeks);"
7,org.joda.time.chrono.BasicWeekOfWeekyearDateTimeField,<init>,43,/JodaTime/src/main/java/org/joda/time/chrono/BasicWeekOfWeekyearDateTimeField.java,iChronology = chronology;
7,org.joda.time.chrono.BasicWeekOfWeekyearDateTimeField,<init>,44,/JodaTime/src/main/java/org/joda/time/chrono/BasicWeekOfWeekyearDateTimeField.java,}
7,org.joda.time.chrono.BasicWeekOfWeekyearDateTimeField,getRangeDurationField,58,/JodaTime/src/main/java/org/joda/time/chrono/BasicWeekOfWeekyearDateTimeField.java,return iChronology.weekyears();
7,org.joda.time.chrono.BasicWeekOfWeekyearDateTimeField,roundFloor,65,/JodaTime/src/main/java/org/joda/time/chrono/BasicWeekOfWeekyearDateTimeField.java,return super.roundFloor(instant + 3 * DateTimeConstants.MILLIS_PER_DAY)
7,org.joda.time.chrono.BasicWeekyearDateTimeField,<init>,44,/JodaTime/src/main/java/org/joda/time/chrono/BasicWeekyearDateTimeField.java,"super(DateTimeFieldType.weekyear(), chronology.getAverageMillisPerYear());"
7,org.joda.time.chrono.BasicWeekyearDateTimeField,<init>,45,/JodaTime/src/main/java/org/joda/time/chrono/BasicWeekyearDateTimeField.java,iChronology = chronology;
7,org.joda.time.chrono.BasicWeekyearDateTimeField,<init>,46,/JodaTime/src/main/java/org/joda/time/chrono/BasicWeekyearDateTimeField.java,}
7,org.joda.time.chrono.BasicWeekyearDateTimeField,add,72,/JodaTime/src/main/java/org/joda/time/chrono/BasicWeekyearDateTimeField.java,if (years == 0) {
7,org.joda.time.chrono.BasicWeekyearDateTimeField,add,75,/JodaTime/src/main/java/org/joda/time/chrono/BasicWeekyearDateTimeField.java,"return set(instant, get(instant) + years);"
7,org.joda.time.chrono.BasicWeekyearDateTimeField,get,60,/JodaTime/src/main/java/org/joda/time/chrono/BasicWeekyearDateTimeField.java,return iChronology.getWeekyear(instant);
7,org.joda.time.chrono.BasicWeekyearDateTimeField,getLeapDurationField,220,/JodaTime/src/main/java/org/joda/time/chrono/BasicWeekyearDateTimeField.java,return iChronology.weeks();
7,org.joda.time.chrono.BasicWeekyearDateTimeField,getMaximumValue,228,/JodaTime/src/main/java/org/joda/time/chrono/BasicWeekyearDateTimeField.java,return iChronology.getMaxYear();
7,org.joda.time.chrono.BasicWeekyearDateTimeField,getMinimumValue,224,/JodaTime/src/main/java/org/joda/time/chrono/BasicWeekyearDateTimeField.java,return iChronology.getMinYear();
7,org.joda.time.chrono.BasicWeekyearDateTimeField,getRangeDurationField,208,/JodaTime/src/main/java/org/joda/time/chrono/BasicWeekyearDateTimeField.java,return null;
7,org.joda.time.chrono.BasicWeekyearDateTimeField,roundFloor,234,/JodaTime/src/main/java/org/joda/time/chrono/BasicWeekyearDateTimeField.java,instant = iChronology.weekOfWeekyear().roundFloor(instant);
7,org.joda.time.chrono.BasicWeekyearDateTimeField,roundFloor,235,/JodaTime/src/main/java/org/joda/time/chrono/BasicWeekyearDateTimeField.java,int wow = iChronology.getWeekOfWeekyear(instant);
7,org.joda.time.chrono.BasicWeekyearDateTimeField,roundFloor,236,/JodaTime/src/main/java/org/joda/time/chrono/BasicWeekyearDateTimeField.java,if (wow > 1) {
7,org.joda.time.chrono.BasicWeekyearDateTimeField,roundFloor,237,/JodaTime/src/main/java/org/joda/time/chrono/BasicWeekyearDateTimeField.java,instant -= ((long) DateTimeConstants.MILLIS_PER_WEEK) * (wow - 1);
7,org.joda.time.chrono.BasicWeekyearDateTimeField,roundFloor,239,/JodaTime/src/main/java/org/joda/time/chrono/BasicWeekyearDateTimeField.java,return instant;
7,org.joda.time.chrono.BasicWeekyearDateTimeField,set,128,/JodaTime/src/main/java/org/joda/time/chrono/BasicWeekyearDateTimeField.java,"FieldUtils.verifyValueBounds(this, Math.abs(year),"
7,org.joda.time.chrono.BasicWeekyearDateTimeField,set,133,/JodaTime/src/main/java/org/joda/time/chrono/BasicWeekyearDateTimeField.java,int thisWeekyear = get( instant );
7,org.joda.time.chrono.BasicWeekyearDateTimeField,set,134,/JodaTime/src/main/java/org/joda/time/chrono/BasicWeekyearDateTimeField.java,if ( thisWeekyear == year ) {
7,org.joda.time.chrono.BasicWeekyearDateTimeField,set,140,/JodaTime/src/main/java/org/joda/time/chrono/BasicWeekyearDateTimeField.java,int thisDow = iChronology.getDayOfWeek(instant);
7,org.joda.time.chrono.BasicWeekyearDateTimeField,set,144,/JodaTime/src/main/java/org/joda/time/chrono/BasicWeekyearDateTimeField.java,int weeksInFromYear = iChronology.getWeeksInYear( thisWeekyear );
7,org.joda.time.chrono.BasicWeekyearDateTimeField,set,145,/JodaTime/src/main/java/org/joda/time/chrono/BasicWeekyearDateTimeField.java,int weeksInToYear = iChronology.getWeeksInYear( year );
7,org.joda.time.chrono.BasicWeekyearDateTimeField,set,146,/JodaTime/src/main/java/org/joda/time/chrono/BasicWeekyearDateTimeField.java,int maxOutWeeks = (weeksInToYear < weeksInFromYear) ?
7,org.joda.time.chrono.BasicWeekyearDateTimeField,set,154,/JodaTime/src/main/java/org/joda/time/chrono/BasicWeekyearDateTimeField.java,int setToWeek = iChronology.getWeekOfWeekyear(instant);
7,org.joda.time.chrono.BasicWeekyearDateTimeField,set,155,/JodaTime/src/main/java/org/joda/time/chrono/BasicWeekyearDateTimeField.java,if ( setToWeek > maxOutWeeks ) {
7,org.joda.time.chrono.BasicWeekyearDateTimeField,set,162,/JodaTime/src/main/java/org/joda/time/chrono/BasicWeekyearDateTimeField.java,long workInstant = instant; // Get a copy
7,org.joda.time.chrono.BasicWeekyearDateTimeField,set,168,/JodaTime/src/main/java/org/joda/time/chrono/BasicWeekyearDateTimeField.java,"workInstant = iChronology.setYear( workInstant, year );"
7,org.joda.time.chrono.BasicWeekyearDateTimeField,set,173,/JodaTime/src/main/java/org/joda/time/chrono/BasicWeekyearDateTimeField.java,int workWoyYear = get( workInstant );
7,org.joda.time.chrono.BasicWeekyearDateTimeField,set,179,/JodaTime/src/main/java/org/joda/time/chrono/BasicWeekyearDateTimeField.java,if ( workWoyYear < year ) {
7,org.joda.time.chrono.BasicWeekyearDateTimeField,set,181,/JodaTime/src/main/java/org/joda/time/chrono/BasicWeekyearDateTimeField.java,} else if ( workWoyYear > year ) {
7,org.joda.time.chrono.BasicWeekyearDateTimeField,set,189,/JodaTime/src/main/java/org/joda/time/chrono/BasicWeekyearDateTimeField.java,int currentWoyWeek = iChronology.getWeekOfWeekyear(workInstant);
7,org.joda.time.chrono.BasicWeekyearDateTimeField,set,191,/JodaTime/src/main/java/org/joda/time/chrono/BasicWeekyearDateTimeField.java,workInstant = workInstant + (setToWeek - currentWoyWeek)
7,org.joda.time.chrono.BasicWeekyearDateTimeField,set,200,/JodaTime/src/main/java/org/joda/time/chrono/BasicWeekyearDateTimeField.java,"workInstant = iChronology.dayOfWeek().set( workInstant, thisDow );"
7,org.joda.time.chrono.BasicWeekyearDateTimeField,set,204,/JodaTime/src/main/java/org/joda/time/chrono/BasicWeekyearDateTimeField.java,return workInstant;
7,org.joda.time.chrono.BasicYearDateTimeField,<init>,45,/JodaTime/src/main/java/org/joda/time/chrono/BasicYearDateTimeField.java,"super(DateTimeFieldType.year(), chronology.getAverageMillisPerYear());"
7,org.joda.time.chrono.BasicYearDateTimeField,<init>,46,/JodaTime/src/main/java/org/joda/time/chrono/BasicYearDateTimeField.java,iChronology = chronology;
7,org.joda.time.chrono.BasicYearDateTimeField,<init>,47,/JodaTime/src/main/java/org/joda/time/chrono/BasicYearDateTimeField.java,}
7,org.joda.time.chrono.BasicYearDateTimeField,add,58,/JodaTime/src/main/java/org/joda/time/chrono/BasicYearDateTimeField.java,if (years == 0) {
7,org.joda.time.chrono.BasicYearDateTimeField,add,61,/JodaTime/src/main/java/org/joda/time/chrono/BasicYearDateTimeField.java,int thisYear = get(instant);
7,org.joda.time.chrono.BasicYearDateTimeField,add,62,/JodaTime/src/main/java/org/joda/time/chrono/BasicYearDateTimeField.java,"int newYear = FieldUtils.safeAdd(thisYear, years);"
7,org.joda.time.chrono.BasicYearDateTimeField,add,63,/JodaTime/src/main/java/org/joda/time/chrono/BasicYearDateTimeField.java,"return set(instant, newYear);"
7,org.joda.time.chrono.BasicYearDateTimeField,get,54,/JodaTime/src/main/java/org/joda/time/chrono/BasicYearDateTimeField.java,return iChronology.getYear(instant);
7,org.joda.time.chrono.BasicYearDateTimeField,getLeapDurationField,111,/JodaTime/src/main/java/org/joda/time/chrono/BasicYearDateTimeField.java,return iChronology.days();
7,org.joda.time.chrono.BasicYearDateTimeField,getMaximumValue,119,/JodaTime/src/main/java/org/joda/time/chrono/BasicYearDateTimeField.java,return iChronology.getMaxYear();
7,org.joda.time.chrono.BasicYearDateTimeField,getMinimumValue,115,/JodaTime/src/main/java/org/joda/time/chrono/BasicYearDateTimeField.java,return iChronology.getMinYear();
7,org.joda.time.chrono.BasicYearDateTimeField,getRangeDurationField,95,/JodaTime/src/main/java/org/joda/time/chrono/BasicYearDateTimeField.java,return null;
7,org.joda.time.chrono.BasicYearDateTimeField,roundCeiling,127,/JodaTime/src/main/java/org/joda/time/chrono/BasicYearDateTimeField.java,int year = get(instant);
7,org.joda.time.chrono.BasicYearDateTimeField,roundCeiling,128,/JodaTime/src/main/java/org/joda/time/chrono/BasicYearDateTimeField.java,long yearStartMillis = iChronology.getYearMillis(year);
7,org.joda.time.chrono.BasicYearDateTimeField,roundCeiling,129,/JodaTime/src/main/java/org/joda/time/chrono/BasicYearDateTimeField.java,if (instant != yearStartMillis) {
7,org.joda.time.chrono.BasicYearDateTimeField,roundCeiling,131,/JodaTime/src/main/java/org/joda/time/chrono/BasicYearDateTimeField.java,instant = iChronology.getYearMillis(year + 1);
7,org.joda.time.chrono.BasicYearDateTimeField,roundCeiling,133,/JodaTime/src/main/java/org/joda/time/chrono/BasicYearDateTimeField.java,return instant;
7,org.joda.time.chrono.BasicYearDateTimeField,set,82,/JodaTime/src/main/java/org/joda/time/chrono/BasicYearDateTimeField.java,FieldUtils.verifyValueBounds
7,org.joda.time.chrono.BasicYearDateTimeField,set,84,/JodaTime/src/main/java/org/joda/time/chrono/BasicYearDateTimeField.java,"return iChronology.setYear(instant, year);"
7,org.joda.time.chrono.BuddhistChronology,<clinit>,65,/JodaTime/src/main/java/org/joda/time/chrono/BuddhistChronology.java,"private static final DateTimeField ERA_FIELD = new BasicSingleEraDateTimeField(""BE"");"
7,org.joda.time.chrono.BuddhistChronology,<clinit>,71,/JodaTime/src/main/java/org/joda/time/chrono/BuddhistChronology.java,"private static final Map<DateTimeZone, BuddhistChronology> cCache = new HashMap<DateTimeZone, BuddhistChronology>();"
7,org.joda.time.chrono.BuddhistChronology,<clinit>,74,/JodaTime/src/main/java/org/joda/time/chrono/BuddhistChronology.java,private static final BuddhistChronology INSTANCE_UTC = getInstance(DateTimeZone.UTC);
7,org.joda.time.chrono.BuddhistChronology,<init>,128,/JodaTime/src/main/java/org/joda/time/chrono/BuddhistChronology.java,"super(base, param);"
7,org.joda.time.chrono.BuddhistChronology,<init>,129,/JodaTime/src/main/java/org/joda/time/chrono/BuddhistChronology.java,}
7,org.joda.time.chrono.BuddhistChronology,assemble,204,/JodaTime/src/main/java/org/joda/time/chrono/BuddhistChronology.java,if (getParam() == null) {
7,org.joda.time.chrono.BuddhistChronology,assemble,206,/JodaTime/src/main/java/org/joda/time/chrono/BuddhistChronology.java,DateTimeField field = fields.year;
7,org.joda.time.chrono.BuddhistChronology,assemble,207,/JodaTime/src/main/java/org/joda/time/chrono/BuddhistChronology.java,fields.year = new OffsetDateTimeField(
7,org.joda.time.chrono.BuddhistChronology,assemble,211,/JodaTime/src/main/java/org/joda/time/chrono/BuddhistChronology.java,field = fields.yearOfEra;
7,org.joda.time.chrono.BuddhistChronology,assemble,212,/JodaTime/src/main/java/org/joda/time/chrono/BuddhistChronology.java,fields.yearOfEra = new DelegatedDateTimeField(
7,org.joda.time.chrono.BuddhistChronology,assemble,216,/JodaTime/src/main/java/org/joda/time/chrono/BuddhistChronology.java,field = fields.weekyear;
7,org.joda.time.chrono.BuddhistChronology,assemble,217,/JodaTime/src/main/java/org/joda/time/chrono/BuddhistChronology.java,fields.weekyear = new OffsetDateTimeField(
7,org.joda.time.chrono.BuddhistChronology,assemble,220,/JodaTime/src/main/java/org/joda/time/chrono/BuddhistChronology.java,"field = new OffsetDateTimeField(fields.yearOfEra, 99);"
7,org.joda.time.chrono.BuddhistChronology,assemble,221,/JodaTime/src/main/java/org/joda/time/chrono/BuddhistChronology.java,fields.centuryOfEra = new DividedDateTimeField(
7,org.joda.time.chrono.BuddhistChronology,assemble,224,/JodaTime/src/main/java/org/joda/time/chrono/BuddhistChronology.java,field = new RemainderDateTimeField(
7,org.joda.time.chrono.BuddhistChronology,assemble,226,/JodaTime/src/main/java/org/joda/time/chrono/BuddhistChronology.java,fields.yearOfCentury = new OffsetDateTimeField(
7,org.joda.time.chrono.BuddhistChronology,assemble,229,/JodaTime/src/main/java/org/joda/time/chrono/BuddhistChronology.java,field = new RemainderDateTimeField(
7,org.joda.time.chrono.BuddhistChronology,assemble,231,/JodaTime/src/main/java/org/joda/time/chrono/BuddhistChronology.java,fields.weekyearOfCentury = new OffsetDateTimeField(
7,org.joda.time.chrono.BuddhistChronology,assemble,234,/JodaTime/src/main/java/org/joda/time/chrono/BuddhistChronology.java,fields.era = ERA_FIELD;
7,org.joda.time.chrono.BuddhistChronology,assemble,236,/JodaTime/src/main/java/org/joda/time/chrono/BuddhistChronology.java,}
7,org.joda.time.chrono.BuddhistChronology,getInstance,104,/JodaTime/src/main/java/org/joda/time/chrono/BuddhistChronology.java,if (zone == null) {
7,org.joda.time.chrono.BuddhistChronology,getInstance,107,/JodaTime/src/main/java/org/joda/time/chrono/BuddhistChronology.java,BuddhistChronology chrono = cCache.get(zone);
7,org.joda.time.chrono.BuddhistChronology,getInstance,108,/JodaTime/src/main/java/org/joda/time/chrono/BuddhistChronology.java,if (chrono == null) {
7,org.joda.time.chrono.BuddhistChronology,getInstance,110,/JodaTime/src/main/java/org/joda/time/chrono/BuddhistChronology.java,"chrono = new BuddhistChronology(GJChronology.getInstance(zone, null), null);"
7,org.joda.time.chrono.BuddhistChronology,getInstance,112,/JodaTime/src/main/java/org/joda/time/chrono/BuddhistChronology.java,"DateTime lowerLimit = new DateTime(1, 1, 1, 0, 0, 0, 0, chrono);"
7,org.joda.time.chrono.BuddhistChronology,getInstance,113,/JodaTime/src/main/java/org/joda/time/chrono/BuddhistChronology.java,"chrono = new BuddhistChronology(LimitChronology.getInstance(chrono, lowerLimit, null), """");"
7,org.joda.time.chrono.BuddhistChronology,getInstance,114,/JodaTime/src/main/java/org/joda/time/chrono/BuddhistChronology.java,"cCache.put(zone, chrono);"
7,org.joda.time.chrono.BuddhistChronology,getInstance,116,/JodaTime/src/main/java/org/joda/time/chrono/BuddhistChronology.java,return chrono;
7,org.joda.time.chrono.BuddhistChronology,withUTC,147,/JodaTime/src/main/java/org/joda/time/chrono/BuddhistChronology.java,return INSTANCE_UTC;
7,org.joda.time.chrono.GJChronology,<clinit>,105,/JodaTime/src/main/java/org/joda/time/chrono/GJChronology.java,static final Instant DEFAULT_CUTOVER = new Instant(-12219292800000L);
7,org.joda.time.chrono.GJChronology,<clinit>,108,/JodaTime/src/main/java/org/joda/time/chrono/GJChronology.java,"private static final Map<DateTimeZone, ArrayList<GJChronology>> cCache = new HashMap<DateTimeZone, ArrayList<GJChronology>>();"
7,org.joda.time.chrono.GJChronology,<init>,281,/JodaTime/src/main/java/org/joda/time/chrono/GJChronology.java,"super(base, new Object[] {julian, gregorian, cutoverInstant});"
7,org.joda.time.chrono.GJChronology,<init>,282,/JodaTime/src/main/java/org/joda/time/chrono/GJChronology.java,}
7,org.joda.time.chrono.GJChronology,<init>,271,/JodaTime/src/main/java/org/joda/time/chrono/GJChronology.java,"super(null, new Object[] {julian, gregorian, cutoverInstant});"
7,org.joda.time.chrono.GJChronology,<init>,272,/JodaTime/src/main/java/org/joda/time/chrono/GJChronology.java,}
7,org.joda.time.chrono.GJChronology,access$000,74,/JodaTime/src/main/java/org/joda/time/chrono/GJChronology.java,public final class GJChronology extends AssembledChronology {
7,org.joda.time.chrono.GJChronology,assemble,452,/JodaTime/src/main/java/org/joda/time/chrono/GJChronology.java,Object[] params = (Object[])getParam();
7,org.joda.time.chrono.GJChronology,assemble,454,/JodaTime/src/main/java/org/joda/time/chrono/GJChronology.java,JulianChronology julian = (JulianChronology)params[0];
7,org.joda.time.chrono.GJChronology,assemble,455,/JodaTime/src/main/java/org/joda/time/chrono/GJChronology.java,GregorianChronology gregorian = (GregorianChronology)params[1];
7,org.joda.time.chrono.GJChronology,assemble,456,/JodaTime/src/main/java/org/joda/time/chrono/GJChronology.java,Instant cutoverInstant = (Instant)params[2];
7,org.joda.time.chrono.GJChronology,assemble,457,/JodaTime/src/main/java/org/joda/time/chrono/GJChronology.java,iCutoverMillis = cutoverInstant.getMillis();
7,org.joda.time.chrono.GJChronology,assemble,459,/JodaTime/src/main/java/org/joda/time/chrono/GJChronology.java,iJulianChronology = julian;
7,org.joda.time.chrono.GJChronology,assemble,460,/JodaTime/src/main/java/org/joda/time/chrono/GJChronology.java,iGregorianChronology = gregorian;
7,org.joda.time.chrono.GJChronology,assemble,461,/JodaTime/src/main/java/org/joda/time/chrono/GJChronology.java,iCutoverInstant = cutoverInstant;
7,org.joda.time.chrono.GJChronology,assemble,463,/JodaTime/src/main/java/org/joda/time/chrono/GJChronology.java,if (getBase() != null) {
7,org.joda.time.chrono.GJChronology,assemble,464,/JodaTime/src/main/java/org/joda/time/chrono/GJChronology.java,return;
7,org.joda.time.chrono.GJChronology,assemble,467,/JodaTime/src/main/java/org/joda/time/chrono/GJChronology.java,if (julian.getMinimumDaysInFirstWeek() != gregorian.getMinimumDaysInFirstWeek()) {
7,org.joda.time.chrono.GJChronology,assemble,472,/JodaTime/src/main/java/org/joda/time/chrono/GJChronology.java,iGapDuration = iCutoverMillis - julianToGregorianByYear(iCutoverMillis);
7,org.joda.time.chrono.GJChronology,assemble,478,/JodaTime/src/main/java/org/joda/time/chrono/GJChronology.java,fields.copyFieldsFrom(gregorian);
7,org.joda.time.chrono.GJChronology,assemble,484,/JodaTime/src/main/java/org/joda/time/chrono/GJChronology.java,if (gregorian.millisOfDay().get(iCutoverMillis) == 0) {
7,org.joda.time.chrono.GJChronology,assemble,488,/JodaTime/src/main/java/org/joda/time/chrono/GJChronology.java,"fields.millisOfSecond = new CutoverField(julian.millisOfSecond(), fields.millisOfSecond, iCutoverMillis);"
7,org.joda.time.chrono.GJChronology,assemble,489,/JodaTime/src/main/java/org/joda/time/chrono/GJChronology.java,"fields.millisOfDay = new CutoverField(julian.millisOfDay(), fields.millisOfDay, iCutoverMillis);"
7,org.joda.time.chrono.GJChronology,assemble,490,/JodaTime/src/main/java/org/joda/time/chrono/GJChronology.java,"fields.secondOfMinute = new CutoverField(julian.secondOfMinute(), fields.secondOfMinute, iCutoverMillis);"
7,org.joda.time.chrono.GJChronology,assemble,491,/JodaTime/src/main/java/org/joda/time/chrono/GJChronology.java,"fields.secondOfDay = new CutoverField(julian.secondOfDay(), fields.secondOfDay, iCutoverMillis);"
7,org.joda.time.chrono.GJChronology,assemble,492,/JodaTime/src/main/java/org/joda/time/chrono/GJChronology.java,"fields.minuteOfHour = new CutoverField(julian.minuteOfHour(), fields.minuteOfHour, iCutoverMillis);"
7,org.joda.time.chrono.GJChronology,assemble,493,/JodaTime/src/main/java/org/joda/time/chrono/GJChronology.java,"fields.minuteOfDay = new CutoverField(julian.minuteOfDay(), fields.minuteOfDay, iCutoverMillis);"
7,org.joda.time.chrono.GJChronology,assemble,494,/JodaTime/src/main/java/org/joda/time/chrono/GJChronology.java,"fields.hourOfDay = new CutoverField(julian.hourOfDay(), fields.hourOfDay, iCutoverMillis);"
7,org.joda.time.chrono.GJChronology,assemble,495,/JodaTime/src/main/java/org/joda/time/chrono/GJChronology.java,"fields.hourOfHalfday = new CutoverField(julian.hourOfHalfday(), fields.hourOfHalfday, iCutoverMillis);"
7,org.joda.time.chrono.GJChronology,assemble,496,/JodaTime/src/main/java/org/joda/time/chrono/GJChronology.java,"fields.clockhourOfDay = new CutoverField(julian.clockhourOfDay(), fields.clockhourOfDay, iCutoverMillis);"
7,org.joda.time.chrono.GJChronology,assemble,497,/JodaTime/src/main/java/org/joda/time/chrono/GJChronology.java,"fields.clockhourOfHalfday = new CutoverField(julian.clockhourOfHalfday(),"
7,org.joda.time.chrono.GJChronology,assemble,499,/JodaTime/src/main/java/org/joda/time/chrono/GJChronology.java,"fields.halfdayOfDay = new CutoverField(julian.halfdayOfDay(), fields.halfdayOfDay, iCutoverMillis);"
7,org.joda.time.chrono.GJChronology,assemble,504,/JodaTime/src/main/java/org/joda/time/chrono/GJChronology.java,"fields.era = new CutoverField(julian.era(), fields.era, iCutoverMillis);"
7,org.joda.time.chrono.GJChronology,assemble,513,/JodaTime/src/main/java/org/joda/time/chrono/GJChronology.java,long cutover = gregorian.year().roundCeiling(iCutoverMillis);
7,org.joda.time.chrono.GJChronology,assemble,514,/JodaTime/src/main/java/org/joda/time/chrono/GJChronology.java,fields.dayOfYear = new CutoverField(
7,org.joda.time.chrono.GJChronology,assemble,519,/JodaTime/src/main/java/org/joda/time/chrono/GJChronology.java,long cutover = gregorian.weekyear().roundCeiling(iCutoverMillis);
7,org.joda.time.chrono.GJChronology,assemble,520,/JodaTime/src/main/java/org/joda/time/chrono/GJChronology.java,fields.weekOfWeekyear = new CutoverField(
7,org.joda.time.chrono.GJChronology,assemble,528,/JodaTime/src/main/java/org/joda/time/chrono/GJChronology.java,fields.year = new ImpreciseCutoverField(
7,org.joda.time.chrono.GJChronology,assemble,530,/JodaTime/src/main/java/org/joda/time/chrono/GJChronology.java,fields.years = fields.year.getDurationField();
7,org.joda.time.chrono.GJChronology,assemble,531,/JodaTime/src/main/java/org/joda/time/chrono/GJChronology.java,fields.yearOfEra = new ImpreciseCutoverField(
7,org.joda.time.chrono.GJChronology,assemble,533,/JodaTime/src/main/java/org/joda/time/chrono/GJChronology.java,fields.yearOfCentury = new ImpreciseCutoverField(
7,org.joda.time.chrono.GJChronology,assemble,536,/JodaTime/src/main/java/org/joda/time/chrono/GJChronology.java,fields.centuryOfEra = new ImpreciseCutoverField(
7,org.joda.time.chrono.GJChronology,assemble,538,/JodaTime/src/main/java/org/joda/time/chrono/GJChronology.java,fields.centuries = fields.centuryOfEra.getDurationField();
7,org.joda.time.chrono.GJChronology,assemble,540,/JodaTime/src/main/java/org/joda/time/chrono/GJChronology.java,fields.monthOfYear = new ImpreciseCutoverField(
7,org.joda.time.chrono.GJChronology,assemble,542,/JodaTime/src/main/java/org/joda/time/chrono/GJChronology.java,fields.months = fields.monthOfYear.getDurationField();
7,org.joda.time.chrono.GJChronology,assemble,544,/JodaTime/src/main/java/org/joda/time/chrono/GJChronology.java,fields.weekyear = new ImpreciseCutoverField(
7,org.joda.time.chrono.GJChronology,assemble,546,/JodaTime/src/main/java/org/joda/time/chrono/GJChronology.java,fields.weekyearOfCentury = new ImpreciseCutoverField(
7,org.joda.time.chrono.GJChronology,assemble,548,/JodaTime/src/main/java/org/joda/time/chrono/GJChronology.java,fields.weekyears = fields.weekyear.getDurationField();
7,org.joda.time.chrono.GJChronology,assemble,554,/JodaTime/src/main/java/org/joda/time/chrono/GJChronology.java,CutoverField cf = new CutoverField
7,org.joda.time.chrono.GJChronology,assemble,556,/JodaTime/src/main/java/org/joda/time/chrono/GJChronology.java,cf.iRangeDurationField = fields.months;
7,org.joda.time.chrono.GJChronology,assemble,557,/JodaTime/src/main/java/org/joda/time/chrono/GJChronology.java,fields.dayOfMonth = cf;
7,org.joda.time.chrono.GJChronology,assemble,559,/JodaTime/src/main/java/org/joda/time/chrono/GJChronology.java,}
7,org.joda.time.chrono.GJChronology,convertByYear,83,/JodaTime/src/main/java/org/joda/time/chrono/GJChronology.java,return to.getDateTimeMillis
7,org.joda.time.chrono.GJChronology,getGregorianCutover,384,/JodaTime/src/main/java/org/joda/time/chrono/GJChronology.java,return iCutoverInstant;
7,org.joda.time.chrono.GJChronology,getInstance,173,/JodaTime/src/main/java/org/joda/time/chrono/GJChronology.java,"return getInstance(zone, gregorianCutover, 4);"
7,org.joda.time.chrono.GJChronology,getInstance,189,/JodaTime/src/main/java/org/joda/time/chrono/GJChronology.java,zone = DateTimeUtils.getZone(zone);
7,org.joda.time.chrono.GJChronology,getInstance,191,/JodaTime/src/main/java/org/joda/time/chrono/GJChronology.java,if (gregorianCutover == null) {
7,org.joda.time.chrono.GJChronology,getInstance,192,/JodaTime/src/main/java/org/joda/time/chrono/GJChronology.java,cutoverInstant = DEFAULT_CUTOVER;
7,org.joda.time.chrono.GJChronology,getInstance,194,/JodaTime/src/main/java/org/joda/time/chrono/GJChronology.java,cutoverInstant = gregorianCutover.toInstant();
7,org.joda.time.chrono.GJChronology,getInstance,199,/JodaTime/src/main/java/org/joda/time/chrono/GJChronology.java,ArrayList<GJChronology> chronos = cCache.get(zone);
7,org.joda.time.chrono.GJChronology,getInstance,200,/JodaTime/src/main/java/org/joda/time/chrono/GJChronology.java,if (chronos == null) {
7,org.joda.time.chrono.GJChronology,getInstance,201,/JodaTime/src/main/java/org/joda/time/chrono/GJChronology.java,chronos = new ArrayList<GJChronology>(2);
7,org.joda.time.chrono.GJChronology,getInstance,202,/JodaTime/src/main/java/org/joda/time/chrono/GJChronology.java,"cCache.put(zone, chronos);"
7,org.joda.time.chrono.GJChronology,getInstance,204,/JodaTime/src/main/java/org/joda/time/chrono/GJChronology.java,for (int i=chronos.size(); --i>=0; ) {
7,org.joda.time.chrono.GJChronology,getInstance,205,/JodaTime/src/main/java/org/joda/time/chrono/GJChronology.java,chrono = chronos.get(i);
7,org.joda.time.chrono.GJChronology,getInstance,206,/JodaTime/src/main/java/org/joda/time/chrono/GJChronology.java,if (minDaysInFirstWeek == chrono.getMinimumDaysInFirstWeek() &&
7,org.joda.time.chrono.GJChronology,getInstance,209,/JodaTime/src/main/java/org/joda/time/chrono/GJChronology.java,return chrono;
7,org.joda.time.chrono.GJChronology,getInstance,214,/JodaTime/src/main/java/org/joda/time/chrono/GJChronology.java,if (zone == DateTimeZone.UTC) {
7,org.joda.time.chrono.GJChronology,getInstance,215,/JodaTime/src/main/java/org/joda/time/chrono/GJChronology.java,chrono = new GJChronology
7,org.joda.time.chrono.GJChronology,getInstance,220,/JodaTime/src/main/java/org/joda/time/chrono/GJChronology.java,"chrono = getInstance(DateTimeZone.UTC, cutoverInstant, minDaysInFirstWeek);"
7,org.joda.time.chrono.GJChronology,getInstance,221,/JodaTime/src/main/java/org/joda/time/chrono/GJChronology.java,chrono = new GJChronology
7,org.joda.time.chrono.GJChronology,getInstance,228,/JodaTime/src/main/java/org/joda/time/chrono/GJChronology.java,chronos.add(chrono);
7,org.joda.time.chrono.GJChronology,getInstance,230,/JodaTime/src/main/java/org/joda/time/chrono/GJChronology.java,return chrono;
7,org.joda.time.chrono.GJChronology,getMinimumDaysInFirstWeek,393,/JodaTime/src/main/java/org/joda/time/chrono/GJChronology.java,return iGregorianChronology.getMinimumDaysInFirstWeek();
7,org.joda.time.chrono.GJChronology,getZone,293,/JodaTime/src/main/java/org/joda/time/chrono/GJChronology.java,if ((base = getBase()) != null) {
7,org.joda.time.chrono.GJChronology,getZone,294,/JodaTime/src/main/java/org/joda/time/chrono/GJChronology.java,return base.getZone();
7,org.joda.time.chrono.GJChronology,getZone,296,/JodaTime/src/main/java/org/joda/time/chrono/GJChronology.java,return DateTimeZone.UTC;
7,org.joda.time.chrono.GJChronology,gregorianToJulianByYear,566,/JodaTime/src/main/java/org/joda/time/chrono/GJChronology.java,"return convertByYear(instant, iGregorianChronology, iJulianChronology);"
7,org.joda.time.chrono.GJChronology,julianToGregorianByYear,562,/JodaTime/src/main/java/org/joda/time/chrono/GJChronology.java,"return convertByYear(instant, iJulianChronology, iGregorianChronology);"
7,org.joda.time.chrono.GJChronology,withUTC,307,/JodaTime/src/main/java/org/joda/time/chrono/GJChronology.java,return withZone(DateTimeZone.UTC);
7,org.joda.time.chrono.GJChronology,withZone,317,/JodaTime/src/main/java/org/joda/time/chrono/GJChronology.java,if (zone == null) {
7,org.joda.time.chrono.GJChronology,withZone,320,/JodaTime/src/main/java/org/joda/time/chrono/GJChronology.java,if (zone == getZone()) {
7,org.joda.time.chrono.GJChronology,withZone,321,/JodaTime/src/main/java/org/joda/time/chrono/GJChronology.java,return this;
7,org.joda.time.chrono.GJChronology$CutoverField,<init>,599,/JodaTime/src/main/java/org/joda/time/chrono/GJChronology.java,"this(julianField, gregorianField, cutoverMillis, false);"
7,org.joda.time.chrono.GJChronology$CutoverField,<init>,600,/JodaTime/src/main/java/org/joda/time/chrono/GJChronology.java,}
7,org.joda.time.chrono.GJChronology$CutoverField,<init>,609,/JodaTime/src/main/java/org/joda/time/chrono/GJChronology.java,"long cutoverMillis, boolean convertByWeekyear) {"
7,org.joda.time.chrono.GJChronology$CutoverField,<init>,610,/JodaTime/src/main/java/org/joda/time/chrono/GJChronology.java,super(gregorianField.getType());
7,org.joda.time.chrono.GJChronology$CutoverField,<init>,611,/JodaTime/src/main/java/org/joda/time/chrono/GJChronology.java,iJulianField = julianField;
7,org.joda.time.chrono.GJChronology$CutoverField,<init>,612,/JodaTime/src/main/java/org/joda/time/chrono/GJChronology.java,iGregorianField = gregorianField;
7,org.joda.time.chrono.GJChronology$CutoverField,<init>,613,/JodaTime/src/main/java/org/joda/time/chrono/GJChronology.java,iCutover = cutoverMillis;
7,org.joda.time.chrono.GJChronology$CutoverField,<init>,614,/JodaTime/src/main/java/org/joda/time/chrono/GJChronology.java,iConvertByWeekyear = convertByWeekyear;
7,org.joda.time.chrono.GJChronology$CutoverField,<init>,617,/JodaTime/src/main/java/org/joda/time/chrono/GJChronology.java,iDurationField = gregorianField.getDurationField();
7,org.joda.time.chrono.GJChronology$CutoverField,<init>,619,/JodaTime/src/main/java/org/joda/time/chrono/GJChronology.java,DurationField rangeField = gregorianField.getRangeDurationField();
7,org.joda.time.chrono.GJChronology$CutoverField,<init>,620,/JodaTime/src/main/java/org/joda/time/chrono/GJChronology.java,if (rangeField == null) {
7,org.joda.time.chrono.GJChronology$CutoverField,<init>,621,/JodaTime/src/main/java/org/joda/time/chrono/GJChronology.java,rangeField = julianField.getRangeDurationField();
7,org.joda.time.chrono.GJChronology$CutoverField,<init>,623,/JodaTime/src/main/java/org/joda/time/chrono/GJChronology.java,iRangeDurationField = rangeField;
7,org.joda.time.chrono.GJChronology$CutoverField,<init>,624,/JodaTime/src/main/java/org/joda/time/chrono/GJChronology.java,}
7,org.joda.time.chrono.GJChronology$CutoverField,get,631,/JodaTime/src/main/java/org/joda/time/chrono/GJChronology.java,if (instant >= iCutover) {
7,org.joda.time.chrono.GJChronology$CutoverField,get,632,/JodaTime/src/main/java/org/joda/time/chrono/GJChronology.java,return iGregorianField.get(instant);
7,org.joda.time.chrono.GJChronology$CutoverField,get,634,/JodaTime/src/main/java/org/joda/time/chrono/GJChronology.java,return iJulianField.get(instant);
7,org.joda.time.chrono.GJChronology$CutoverField,getDurationField,751,/JodaTime/src/main/java/org/joda/time/chrono/GJChronology.java,return iDurationField;
7,org.joda.time.chrono.GJChronology$CutoverField,getLeapDurationField,775,/JodaTime/src/main/java/org/joda/time/chrono/GJChronology.java,return iGregorianField.getLeapDurationField();
7,org.joda.time.chrono.GJChronology$CutoverField,getMaximumValue,813,/JodaTime/src/main/java/org/joda/time/chrono/GJChronology.java,return iGregorianField.getMaximumValue();
7,org.joda.time.chrono.GJChronology$CutoverField,getMinimumValue,782,/JodaTime/src/main/java/org/joda/time/chrono/GJChronology.java,return iJulianField.getMinimumValue();
7,org.joda.time.chrono.GJChronology$CutoverField,getRangeDurationField,755,/JodaTime/src/main/java/org/joda/time/chrono/GJChronology.java,return iRangeDurationField;
7,org.joda.time.chrono.GJChronology$CutoverField,gregorianToJulian,899,/JodaTime/src/main/java/org/joda/time/chrono/GJChronology.java,if (iConvertByWeekyear) {
7,org.joda.time.chrono.GJChronology$CutoverField,gregorianToJulian,902,/JodaTime/src/main/java/org/joda/time/chrono/GJChronology.java,return gregorianToJulianByYear(instant);
7,org.joda.time.chrono.GJChronology$CutoverField,set,697,/JodaTime/src/main/java/org/joda/time/chrono/GJChronology.java,if (instant >= iCutover) {
7,org.joda.time.chrono.GJChronology$CutoverField,set,698,/JodaTime/src/main/java/org/joda/time/chrono/GJChronology.java,"instant = iGregorianField.set(instant, value);"
7,org.joda.time.chrono.GJChronology$CutoverField,set,699,/JodaTime/src/main/java/org/joda/time/chrono/GJChronology.java,if (instant < iCutover) {
7,org.joda.time.chrono.GJChronology$CutoverField,set,701,/JodaTime/src/main/java/org/joda/time/chrono/GJChronology.java,if (instant + iGapDuration < iCutover) {
7,org.joda.time.chrono.GJChronology$CutoverField,set,702,/JodaTime/src/main/java/org/joda/time/chrono/GJChronology.java,instant = gregorianToJulian(instant);
7,org.joda.time.chrono.GJChronology$CutoverField,set,705,/JodaTime/src/main/java/org/joda/time/chrono/GJChronology.java,if (get(instant) != value) {
7,org.joda.time.chrono.GJChronology$CutoverField,set,711,/JodaTime/src/main/java/org/joda/time/chrono/GJChronology.java,"instant = iJulianField.set(instant, value);"
7,org.joda.time.chrono.GJChronology$CutoverField,set,712,/JodaTime/src/main/java/org/joda/time/chrono/GJChronology.java,if (instant >= iCutover) {
7,org.joda.time.chrono.GJChronology$CutoverField,set,724,/JodaTime/src/main/java/org/joda/time/chrono/GJChronology.java,return instant;
7,org.joda.time.chrono.GJChronology$ImpreciseCutoverField,<init>,921,/JodaTime/src/main/java/org/joda/time/chrono/GJChronology.java,"this(julianField, gregorianField, null, cutoverMillis, false);"
7,org.joda.time.chrono.GJChronology$ImpreciseCutoverField,<init>,922,/JodaTime/src/main/java/org/joda/time/chrono/GJChronology.java,}
7,org.joda.time.chrono.GJChronology$ImpreciseCutoverField,<init>,932,/JodaTime/src/main/java/org/joda/time/chrono/GJChronology.java,"this(julianField, gregorianField, durationField, cutoverMillis, false);"
7,org.joda.time.chrono.GJChronology$ImpreciseCutoverField,<init>,933,/JodaTime/src/main/java/org/joda/time/chrono/GJChronology.java,}
7,org.joda.time.chrono.GJChronology$ImpreciseCutoverField,<init>,943,/JodaTime/src/main/java/org/joda/time/chrono/GJChronology.java,{
7,org.joda.time.chrono.GJChronology$ImpreciseCutoverField,<init>,944,/JodaTime/src/main/java/org/joda/time/chrono/GJChronology.java,"super(julianField, gregorianField, cutoverMillis, convertByWeekyear);"
7,org.joda.time.chrono.GJChronology$ImpreciseCutoverField,<init>,945,/JodaTime/src/main/java/org/joda/time/chrono/GJChronology.java,if (durationField == null) {
7,org.joda.time.chrono.GJChronology$ImpreciseCutoverField,<init>,946,/JodaTime/src/main/java/org/joda/time/chrono/GJChronology.java,"durationField = new LinkedDurationField(iDurationField, this);"
7,org.joda.time.chrono.GJChronology$ImpreciseCutoverField,<init>,948,/JodaTime/src/main/java/org/joda/time/chrono/GJChronology.java,iDurationField = durationField;
7,org.joda.time.chrono.GJChronology$ImpreciseCutoverField,<init>,949,/JodaTime/src/main/java/org/joda/time/chrono/GJChronology.java,}
7,org.joda.time.chrono.GJChronology$LinkedDurationField,<init>,1070,/JodaTime/src/main/java/org/joda/time/chrono/GJChronology.java,"super(durationField, durationField.getType());"
7,org.joda.time.chrono.GJChronology$LinkedDurationField,<init>,1071,/JodaTime/src/main/java/org/joda/time/chrono/GJChronology.java,iField = dateTimeField;
7,org.joda.time.chrono.GJChronology$LinkedDurationField,<init>,1072,/JodaTime/src/main/java/org/joda/time/chrono/GJChronology.java,}
7,org.joda.time.chrono.GJDayOfWeekDateTimeField,<init>,45,/JodaTime/src/main/java/org/joda/time/chrono/GJDayOfWeekDateTimeField.java,"super(DateTimeFieldType.dayOfWeek(), days);"
7,org.joda.time.chrono.GJDayOfWeekDateTimeField,<init>,46,/JodaTime/src/main/java/org/joda/time/chrono/GJDayOfWeekDateTimeField.java,iChronology = chronology;
7,org.joda.time.chrono.GJDayOfWeekDateTimeField,<init>,47,/JodaTime/src/main/java/org/joda/time/chrono/GJDayOfWeekDateTimeField.java,}
7,org.joda.time.chrono.GJDayOfWeekDateTimeField,get,56,/JodaTime/src/main/java/org/joda/time/chrono/GJDayOfWeekDateTimeField.java,return iChronology.getDayOfWeek(instant);
7,org.joda.time.chrono.GJDayOfWeekDateTimeField,getAsShortText,78,/JodaTime/src/main/java/org/joda/time/chrono/GJDayOfWeekDateTimeField.java,return GJLocaleSymbols.forLocale(locale).dayOfWeekValueToShortText(fieldValue);
7,org.joda.time.chrono.GJDayOfWeekDateTimeField,getMaximumValue,112,/JodaTime/src/main/java/org/joda/time/chrono/GJDayOfWeekDateTimeField.java,return DateTimeConstants.SUNDAY;
7,org.joda.time.chrono.GJDayOfWeekDateTimeField,getMinimumValue,103,/JodaTime/src/main/java/org/joda/time/chrono/GJDayOfWeekDateTimeField.java,return DateTimeConstants.MONDAY;
7,org.joda.time.chrono.GJDayOfWeekDateTimeField,getRangeDurationField,94,/JodaTime/src/main/java/org/joda/time/chrono/GJDayOfWeekDateTimeField.java,return iChronology.weeks();
7,org.joda.time.chrono.GJEraDateTimeField,<init>,46,/JodaTime/src/main/java/org/joda/time/chrono/GJEraDateTimeField.java,super(DateTimeFieldType.era());
7,org.joda.time.chrono.GJEraDateTimeField,<init>,47,/JodaTime/src/main/java/org/joda/time/chrono/GJEraDateTimeField.java,iChronology = chronology;
7,org.joda.time.chrono.GJEraDateTimeField,<init>,48,/JodaTime/src/main/java/org/joda/time/chrono/GJEraDateTimeField.java,}
7,org.joda.time.chrono.GJEraDateTimeField,getDurationField,127,/JodaTime/src/main/java/org/joda/time/chrono/GJEraDateTimeField.java,return UnsupportedDurationField.getInstance(DurationFieldType.eras());
7,org.joda.time.chrono.GJEraDateTimeField,getRangeDurationField,131,/JodaTime/src/main/java/org/joda/time/chrono/GJEraDateTimeField.java,return null;
7,org.joda.time.chrono.GJLocaleSymbols,<clinit>,37,/JodaTime/src/main/java/org/joda/time/chrono/GJLocaleSymbols.java,private static final GJLocaleSymbols[] cFastCache = new GJLocaleSymbols[FAST_CACHE_SIZE];
7,org.joda.time.chrono.GJLocaleSymbols,<clinit>,39,/JodaTime/src/main/java/org/joda/time/chrono/GJLocaleSymbols.java,"private static WeakHashMap<Locale, GJLocaleSymbols> cCache = new WeakHashMap<Locale, GJLocaleSymbols>();"
7,org.joda.time.chrono.GJLocaleSymbols,<init>,129,/JodaTime/src/main/java/org/joda/time/chrono/GJLocaleSymbols.java,private GJLocaleSymbols(Locale locale) {
7,org.joda.time.chrono.GJLocaleSymbols,<init>,130,/JodaTime/src/main/java/org/joda/time/chrono/GJLocaleSymbols.java,iLocale = new WeakReference<Locale>(locale);
7,org.joda.time.chrono.GJLocaleSymbols,<init>,132,/JodaTime/src/main/java/org/joda/time/chrono/GJLocaleSymbols.java,DateFormatSymbols dfs = DateTimeUtils.getDateFormatSymbols(locale);
7,org.joda.time.chrono.GJLocaleSymbols,<init>,134,/JodaTime/src/main/java/org/joda/time/chrono/GJLocaleSymbols.java,iEras = dfs.getEras();
7,org.joda.time.chrono.GJLocaleSymbols,<init>,135,/JodaTime/src/main/java/org/joda/time/chrono/GJLocaleSymbols.java,iDaysOfWeek = realignDaysOfWeek(dfs.getWeekdays());
7,org.joda.time.chrono.GJLocaleSymbols,<init>,136,/JodaTime/src/main/java/org/joda/time/chrono/GJLocaleSymbols.java,iShortDaysOfWeek = realignDaysOfWeek(dfs.getShortWeekdays());
7,org.joda.time.chrono.GJLocaleSymbols,<init>,137,/JodaTime/src/main/java/org/joda/time/chrono/GJLocaleSymbols.java,iMonths = realignMonths(dfs.getMonths());
7,org.joda.time.chrono.GJLocaleSymbols,<init>,138,/JodaTime/src/main/java/org/joda/time/chrono/GJLocaleSymbols.java,iShortMonths = realignMonths(dfs.getShortMonths());
7,org.joda.time.chrono.GJLocaleSymbols,<init>,139,/JodaTime/src/main/java/org/joda/time/chrono/GJLocaleSymbols.java,iHalfday = dfs.getAmPmStrings();
7,org.joda.time.chrono.GJLocaleSymbols,<init>,141,/JodaTime/src/main/java/org/joda/time/chrono/GJLocaleSymbols.java,Integer[] integers = new Integer[13];
7,org.joda.time.chrono.GJLocaleSymbols,<init>,142,/JodaTime/src/main/java/org/joda/time/chrono/GJLocaleSymbols.java,for (int i=0; i<13; i++) {
7,org.joda.time.chrono.GJLocaleSymbols,<init>,143,/JodaTime/src/main/java/org/joda/time/chrono/GJLocaleSymbols.java,integers[i] = new Integer(i);
7,org.joda.time.chrono.GJLocaleSymbols,<init>,146,/JodaTime/src/main/java/org/joda/time/chrono/GJLocaleSymbols.java,"iParseEras = new TreeMap<String, Integer>(String.CASE_INSENSITIVE_ORDER);"
7,org.joda.time.chrono.GJLocaleSymbols,<init>,147,/JodaTime/src/main/java/org/joda/time/chrono/GJLocaleSymbols.java,"addSymbols(iParseEras, iEras, integers);"
7,org.joda.time.chrono.GJLocaleSymbols,<init>,148,/JodaTime/src/main/java/org/joda/time/chrono/GJLocaleSymbols.java,"if (""en"".equals(locale.getLanguage())) {"
7,org.joda.time.chrono.GJLocaleSymbols,<init>,152,/JodaTime/src/main/java/org/joda/time/chrono/GJLocaleSymbols.java,"iParseEras.put(""BCE"", integers[0]);"
7,org.joda.time.chrono.GJLocaleSymbols,<init>,153,/JodaTime/src/main/java/org/joda/time/chrono/GJLocaleSymbols.java,"iParseEras.put(""CE"", integers[1]);"
7,org.joda.time.chrono.GJLocaleSymbols,<init>,156,/JodaTime/src/main/java/org/joda/time/chrono/GJLocaleSymbols.java,"iParseDaysOfWeek = new TreeMap<String, Integer>(String.CASE_INSENSITIVE_ORDER);"
7,org.joda.time.chrono.GJLocaleSymbols,<init>,157,/JodaTime/src/main/java/org/joda/time/chrono/GJLocaleSymbols.java,"addSymbols(iParseDaysOfWeek, iDaysOfWeek, integers);"
7,org.joda.time.chrono.GJLocaleSymbols,<init>,158,/JodaTime/src/main/java/org/joda/time/chrono/GJLocaleSymbols.java,"addSymbols(iParseDaysOfWeek, iShortDaysOfWeek, integers);"
7,org.joda.time.chrono.GJLocaleSymbols,<init>,159,/JodaTime/src/main/java/org/joda/time/chrono/GJLocaleSymbols.java,"addNumerals(iParseDaysOfWeek, 1, 7, integers);"
7,org.joda.time.chrono.GJLocaleSymbols,<init>,161,/JodaTime/src/main/java/org/joda/time/chrono/GJLocaleSymbols.java,"iParseMonths = new TreeMap<String, Integer>(String.CASE_INSENSITIVE_ORDER);"
7,org.joda.time.chrono.GJLocaleSymbols,<init>,162,/JodaTime/src/main/java/org/joda/time/chrono/GJLocaleSymbols.java,"addSymbols(iParseMonths, iMonths, integers);"
7,org.joda.time.chrono.GJLocaleSymbols,<init>,163,/JodaTime/src/main/java/org/joda/time/chrono/GJLocaleSymbols.java,"addSymbols(iParseMonths, iShortMonths, integers);"
7,org.joda.time.chrono.GJLocaleSymbols,<init>,164,/JodaTime/src/main/java/org/joda/time/chrono/GJLocaleSymbols.java,"addNumerals(iParseMonths, 1, 12, integers);"
7,org.joda.time.chrono.GJLocaleSymbols,<init>,166,/JodaTime/src/main/java/org/joda/time/chrono/GJLocaleSymbols.java,iMaxEraLength = maxLength(iEras);
7,org.joda.time.chrono.GJLocaleSymbols,<init>,167,/JodaTime/src/main/java/org/joda/time/chrono/GJLocaleSymbols.java,iMaxDayOfWeekLength = maxLength(iDaysOfWeek);
7,org.joda.time.chrono.GJLocaleSymbols,<init>,168,/JodaTime/src/main/java/org/joda/time/chrono/GJLocaleSymbols.java,iMaxShortDayOfWeekLength = maxLength(iShortDaysOfWeek);
7,org.joda.time.chrono.GJLocaleSymbols,<init>,169,/JodaTime/src/main/java/org/joda/time/chrono/GJLocaleSymbols.java,iMaxMonthLength = maxLength(iMonths);
7,org.joda.time.chrono.GJLocaleSymbols,<init>,170,/JodaTime/src/main/java/org/joda/time/chrono/GJLocaleSymbols.java,iMaxShortMonthLength = maxLength(iShortMonths);
7,org.joda.time.chrono.GJLocaleSymbols,<init>,171,/JodaTime/src/main/java/org/joda/time/chrono/GJLocaleSymbols.java,iMaxHalfdayLength = maxLength(iHalfday);
7,org.joda.time.chrono.GJLocaleSymbols,<init>,172,/JodaTime/src/main/java/org/joda/time/chrono/GJLocaleSymbols.java,}
7,org.joda.time.chrono.GJLocaleSymbols,addNumerals,87,/JodaTime/src/main/java/org/joda/time/chrono/GJLocaleSymbols.java,for (int i=start; i<=end; i++) {
7,org.joda.time.chrono.GJLocaleSymbols,addNumerals,88,/JodaTime/src/main/java/org/joda/time/chrono/GJLocaleSymbols.java,"map.put(String.valueOf(i).intern(), integers[i]);"
7,org.joda.time.chrono.GJLocaleSymbols,addNumerals,90,/JodaTime/src/main/java/org/joda/time/chrono/GJLocaleSymbols.java,}
7,org.joda.time.chrono.GJLocaleSymbols,addSymbols,78,/JodaTime/src/main/java/org/joda/time/chrono/GJLocaleSymbols.java,for (int i=symbols.length; --i>=0; ) {
7,org.joda.time.chrono.GJLocaleSymbols,addSymbols,79,/JodaTime/src/main/java/org/joda/time/chrono/GJLocaleSymbols.java,String symbol = symbols[i];
7,org.joda.time.chrono.GJLocaleSymbols,addSymbols,80,/JodaTime/src/main/java/org/joda/time/chrono/GJLocaleSymbols.java,if (symbol != null) {
7,org.joda.time.chrono.GJLocaleSymbols,addSymbols,81,/JodaTime/src/main/java/org/joda/time/chrono/GJLocaleSymbols.java,"map.put(symbol, integers[i]);"
7,org.joda.time.chrono.GJLocaleSymbols,addSymbols,83,/JodaTime/src/main/java/org/joda/time/chrono/GJLocaleSymbols.java,}
7,org.joda.time.chrono.GJLocaleSymbols,addSymbols,84,/JodaTime/src/main/java/org/joda/time/chrono/GJLocaleSymbols.java,}
7,org.joda.time.chrono.GJLocaleSymbols,dayOfWeekValueToShortText,219,/JodaTime/src/main/java/org/joda/time/chrono/GJLocaleSymbols.java,return iShortDaysOfWeek[value];
7,org.joda.time.chrono.GJLocaleSymbols,forLocale,42,/JodaTime/src/main/java/org/joda/time/chrono/GJLocaleSymbols.java,if (locale == null) {
7,org.joda.time.chrono.GJLocaleSymbols,forLocale,45,/JodaTime/src/main/java/org/joda/time/chrono/GJLocaleSymbols.java,int index = System.identityHashCode(locale) & (FAST_CACHE_SIZE - 1);
7,org.joda.time.chrono.GJLocaleSymbols,forLocale,46,/JodaTime/src/main/java/org/joda/time/chrono/GJLocaleSymbols.java,GJLocaleSymbols symbols = cFastCache[index];
7,org.joda.time.chrono.GJLocaleSymbols,forLocale,47,/JodaTime/src/main/java/org/joda/time/chrono/GJLocaleSymbols.java,if (symbols != null && symbols.iLocale.get() == locale) {
7,org.joda.time.chrono.GJLocaleSymbols,forLocale,48,/JodaTime/src/main/java/org/joda/time/chrono/GJLocaleSymbols.java,return symbols;
7,org.joda.time.chrono.GJLocaleSymbols,forLocale,50,/JodaTime/src/main/java/org/joda/time/chrono/GJLocaleSymbols.java,synchronized (cCache) {
7,org.joda.time.chrono.GJLocaleSymbols,forLocale,51,/JodaTime/src/main/java/org/joda/time/chrono/GJLocaleSymbols.java,symbols = cCache.get(locale);
7,org.joda.time.chrono.GJLocaleSymbols,forLocale,52,/JodaTime/src/main/java/org/joda/time/chrono/GJLocaleSymbols.java,if (symbols == null) {
7,org.joda.time.chrono.GJLocaleSymbols,forLocale,53,/JodaTime/src/main/java/org/joda/time/chrono/GJLocaleSymbols.java,symbols = new GJLocaleSymbols(locale);
7,org.joda.time.chrono.GJLocaleSymbols,forLocale,54,/JodaTime/src/main/java/org/joda/time/chrono/GJLocaleSymbols.java,"cCache.put(locale, symbols);"
7,org.joda.time.chrono.GJLocaleSymbols,forLocale,56,/JodaTime/src/main/java/org/joda/time/chrono/GJLocaleSymbols.java,}
7,org.joda.time.chrono.GJLocaleSymbols,forLocale,57,/JodaTime/src/main/java/org/joda/time/chrono/GJLocaleSymbols.java,cFastCache[index] = symbols;
7,org.joda.time.chrono.GJLocaleSymbols,forLocale,58,/JodaTime/src/main/java/org/joda/time/chrono/GJLocaleSymbols.java,return symbols;
7,org.joda.time.chrono.GJLocaleSymbols,maxLength,93,/JodaTime/src/main/java/org/joda/time/chrono/GJLocaleSymbols.java,int max = 0;
7,org.joda.time.chrono.GJLocaleSymbols,maxLength,94,/JodaTime/src/main/java/org/joda/time/chrono/GJLocaleSymbols.java,for (int i=a.length; --i>=0; ) {
7,org.joda.time.chrono.GJLocaleSymbols,maxLength,95,/JodaTime/src/main/java/org/joda/time/chrono/GJLocaleSymbols.java,String s = a[i];
7,org.joda.time.chrono.GJLocaleSymbols,maxLength,96,/JodaTime/src/main/java/org/joda/time/chrono/GJLocaleSymbols.java,if (s != null) {
7,org.joda.time.chrono.GJLocaleSymbols,maxLength,97,/JodaTime/src/main/java/org/joda/time/chrono/GJLocaleSymbols.java,int len = s.length();
7,org.joda.time.chrono.GJLocaleSymbols,maxLength,98,/JodaTime/src/main/java/org/joda/time/chrono/GJLocaleSymbols.java,if (len > max) {
7,org.joda.time.chrono.GJLocaleSymbols,maxLength,99,/JodaTime/src/main/java/org/joda/time/chrono/GJLocaleSymbols.java,max = len;
7,org.joda.time.chrono.GJLocaleSymbols,maxLength,102,/JodaTime/src/main/java/org/joda/time/chrono/GJLocaleSymbols.java,}
7,org.joda.time.chrono.GJLocaleSymbols,maxLength,103,/JodaTime/src/main/java/org/joda/time/chrono/GJLocaleSymbols.java,return max;
7,org.joda.time.chrono.GJLocaleSymbols,realignDaysOfWeek,70,/JodaTime/src/main/java/org/joda/time/chrono/GJLocaleSymbols.java,String[] a = new String[8];
7,org.joda.time.chrono.GJLocaleSymbols,realignDaysOfWeek,71,/JodaTime/src/main/java/org/joda/time/chrono/GJLocaleSymbols.java,for (int i=1; i<8; i++) {
7,org.joda.time.chrono.GJLocaleSymbols,realignDaysOfWeek,72,/JodaTime/src/main/java/org/joda/time/chrono/GJLocaleSymbols.java,a[i] = daysOfWeek[(i < 7) ? i + 1 : 1];
7,org.joda.time.chrono.GJLocaleSymbols,realignDaysOfWeek,74,/JodaTime/src/main/java/org/joda/time/chrono/GJLocaleSymbols.java,return a;
7,org.joda.time.chrono.GJLocaleSymbols,realignMonths,62,/JodaTime/src/main/java/org/joda/time/chrono/GJLocaleSymbols.java,String[] a = new String[13];
7,org.joda.time.chrono.GJLocaleSymbols,realignMonths,63,/JodaTime/src/main/java/org/joda/time/chrono/GJLocaleSymbols.java,for (int i=1; i<13; i++) {
7,org.joda.time.chrono.GJLocaleSymbols,realignMonths,64,/JodaTime/src/main/java/org/joda/time/chrono/GJLocaleSymbols.java,a[i] = months[i - 1];
7,org.joda.time.chrono.GJLocaleSymbols,realignMonths,66,/JodaTime/src/main/java/org/joda/time/chrono/GJLocaleSymbols.java,return a;
7,org.joda.time.chrono.GJMonthOfYearDateTimeField,<init>,37,/JodaTime/src/main/java/org/joda/time/chrono/GJMonthOfYearDateTimeField.java,"super(chronology, 2);"
7,org.joda.time.chrono.GJMonthOfYearDateTimeField,<init>,38,/JodaTime/src/main/java/org/joda/time/chrono/GJMonthOfYearDateTimeField.java,}
7,org.joda.time.chrono.GJYearOfEraDateTimeField,<init>,40,/JodaTime/src/main/java/org/joda/time/chrono/GJYearOfEraDateTimeField.java,"super(yearField, DateTimeFieldType.yearOfEra());"
7,org.joda.time.chrono.GJYearOfEraDateTimeField,<init>,41,/JodaTime/src/main/java/org/joda/time/chrono/GJYearOfEraDateTimeField.java,iChronology = chronology;
7,org.joda.time.chrono.GJYearOfEraDateTimeField,<init>,42,/JodaTime/src/main/java/org/joda/time/chrono/GJYearOfEraDateTimeField.java,}
7,org.joda.time.chrono.GJYearOfEraDateTimeField,getMaximumValue,97,/JodaTime/src/main/java/org/joda/time/chrono/GJYearOfEraDateTimeField.java,return getWrappedField().getMaximumValue();
7,org.joda.time.chrono.GJYearOfEraDateTimeField,getMinimumValue,93,/JodaTime/src/main/java/org/joda/time/chrono/GJYearOfEraDateTimeField.java,return 1;
7,org.joda.time.chrono.GregorianChronology,<clinit>,68,/JodaTime/src/main/java/org/joda/time/chrono/GregorianChronology.java,"private static final Map<DateTimeZone, GregorianChronology[]> cCache = new HashMap<DateTimeZone, GregorianChronology[]>();"
7,org.joda.time.chrono.GregorianChronology,<clinit>,71,/JodaTime/src/main/java/org/joda/time/chrono/GregorianChronology.java,INSTANCE_UTC = getInstance(DateTimeZone.UTC);
7,org.joda.time.chrono.GregorianChronology,<clinit>,72,/JodaTime/src/main/java/org/joda/time/chrono/GregorianChronology.java,}
7,org.joda.time.chrono.GregorianChronology,<init>,148,/JodaTime/src/main/java/org/joda/time/chrono/GregorianChronology.java,"super(base, param, minDaysInFirstWeek);"
7,org.joda.time.chrono.GregorianChronology,<init>,149,/JodaTime/src/main/java/org/joda/time/chrono/GregorianChronology.java,}
7,org.joda.time.chrono.GregorianChronology,assemble,191,/JodaTime/src/main/java/org/joda/time/chrono/GregorianChronology.java,if (getBase() == null) {
7,org.joda.time.chrono.GregorianChronology,assemble,192,/JodaTime/src/main/java/org/joda/time/chrono/GregorianChronology.java,super.assemble(fields);
7,org.joda.time.chrono.GregorianChronology,assemble,194,/JodaTime/src/main/java/org/joda/time/chrono/GregorianChronology.java,}
7,org.joda.time.chrono.GregorianChronology,calculateFirstDayOfYearMillis,202,/JodaTime/src/main/java/org/joda/time/chrono/GregorianChronology.java,int leapYears = year / 100;
7,org.joda.time.chrono.GregorianChronology,calculateFirstDayOfYearMillis,203,/JodaTime/src/main/java/org/joda/time/chrono/GregorianChronology.java,if (year < 0) {
7,org.joda.time.chrono.GregorianChronology,calculateFirstDayOfYearMillis,209,/JodaTime/src/main/java/org/joda/time/chrono/GregorianChronology.java,leapYears = ((year + 3) >> 2) - leapYears + ((leapYears + 3) >> 2) - 1;
7,org.joda.time.chrono.GregorianChronology,calculateFirstDayOfYearMillis,211,/JodaTime/src/main/java/org/joda/time/chrono/GregorianChronology.java,leapYears = (year >> 2) - leapYears + (leapYears >> 2);
7,org.joda.time.chrono.GregorianChronology,calculateFirstDayOfYearMillis,212,/JodaTime/src/main/java/org/joda/time/chrono/GregorianChronology.java,if (isLeapYear(year)) {
7,org.joda.time.chrono.GregorianChronology,calculateFirstDayOfYearMillis,213,/JodaTime/src/main/java/org/joda/time/chrono/GregorianChronology.java,leapYears--;
7,org.joda.time.chrono.GregorianChronology,calculateFirstDayOfYearMillis,217,/JodaTime/src/main/java/org/joda/time/chrono/GregorianChronology.java,return (year * 365L + (leapYears - DAYS_0000_TO_1970)) * DateTimeConstants.MILLIS_PER_DAY;
7,org.joda.time.chrono.GregorianChronology,getApproxMillisAtEpochDividedByTwo,241,/JodaTime/src/main/java/org/joda/time/chrono/GregorianChronology.java,return (1970L * MILLIS_PER_YEAR) / 2;
7,org.joda.time.chrono.GregorianChronology,getAverageMillisPerMonth,237,/JodaTime/src/main/java/org/joda/time/chrono/GregorianChronology.java,return MILLIS_PER_MONTH;
7,org.joda.time.chrono.GregorianChronology,getAverageMillisPerYear,229,/JodaTime/src/main/java/org/joda/time/chrono/GregorianChronology.java,return MILLIS_PER_YEAR;
7,org.joda.time.chrono.GregorianChronology,getAverageMillisPerYearDividedByTwo,233,/JodaTime/src/main/java/org/joda/time/chrono/GregorianChronology.java,return MILLIS_PER_YEAR / 2;
7,org.joda.time.chrono.GregorianChronology,getInstance,100,/JodaTime/src/main/java/org/joda/time/chrono/GregorianChronology.java,"return getInstance(zone, 4);"
7,org.joda.time.chrono.GregorianChronology,getInstance,111,/JodaTime/src/main/java/org/joda/time/chrono/GregorianChronology.java,if (zone == null) {
7,org.joda.time.chrono.GregorianChronology,getInstance,115,/JodaTime/src/main/java/org/joda/time/chrono/GregorianChronology.java,synchronized (cCache) {
7,org.joda.time.chrono.GregorianChronology,getInstance,116,/JodaTime/src/main/java/org/joda/time/chrono/GregorianChronology.java,GregorianChronology[] chronos = cCache.get(zone);
7,org.joda.time.chrono.GregorianChronology,getInstance,117,/JodaTime/src/main/java/org/joda/time/chrono/GregorianChronology.java,if (chronos == null) {
7,org.joda.time.chrono.GregorianChronology,getInstance,118,/JodaTime/src/main/java/org/joda/time/chrono/GregorianChronology.java,chronos = new GregorianChronology[7];
7,org.joda.time.chrono.GregorianChronology,getInstance,119,/JodaTime/src/main/java/org/joda/time/chrono/GregorianChronology.java,"cCache.put(zone, chronos);"
7,org.joda.time.chrono.GregorianChronology,getInstance,122,/JodaTime/src/main/java/org/joda/time/chrono/GregorianChronology.java,chrono = chronos[minDaysInFirstWeek - 1];
7,org.joda.time.chrono.GregorianChronology,getInstance,126,/JodaTime/src/main/java/org/joda/time/chrono/GregorianChronology.java,}
7,org.joda.time.chrono.GregorianChronology,getInstance,127,/JodaTime/src/main/java/org/joda/time/chrono/GregorianChronology.java,if (chrono == null) {
7,org.joda.time.chrono.GregorianChronology,getInstance,128,/JodaTime/src/main/java/org/joda/time/chrono/GregorianChronology.java,if (zone == DateTimeZone.UTC) {
7,org.joda.time.chrono.GregorianChronology,getInstance,129,/JodaTime/src/main/java/org/joda/time/chrono/GregorianChronology.java,"chrono = new GregorianChronology(null, null, minDaysInFirstWeek);"
7,org.joda.time.chrono.GregorianChronology,getInstance,135,/JodaTime/src/main/java/org/joda/time/chrono/GregorianChronology.java,chronos[minDaysInFirstWeek - 1] = chrono;
7,org.joda.time.chrono.GregorianChronology,getInstance,137,/JodaTime/src/main/java/org/joda/time/chrono/GregorianChronology.java,}
7,org.joda.time.chrono.GregorianChronology,getInstance,138,/JodaTime/src/main/java/org/joda/time/chrono/GregorianChronology.java,return chrono;
7,org.joda.time.chrono.GregorianChronology,getInstanceUTC,81,/JodaTime/src/main/java/org/joda/time/chrono/GregorianChronology.java,return INSTANCE_UTC;
7,org.joda.time.chrono.GregorianChronology,getMaxYear,225,/JodaTime/src/main/java/org/joda/time/chrono/GregorianChronology.java,return MAX_YEAR;
7,org.joda.time.chrono.GregorianChronology,getMinYear,221,/JodaTime/src/main/java/org/joda/time/chrono/GregorianChronology.java,return MIN_YEAR;
7,org.joda.time.chrono.GregorianChronology,getZone,45,/JodaTime/src/main/java/org/joda/time/chrono/GregorianChronology.java,public final class GregorianChronology extends BasicGJChronology {
7,org.joda.time.chrono.GregorianChronology,isLeapYear,197,/JodaTime/src/main/java/org/joda/time/chrono/GregorianChronology.java,return ((year & 3) == 0) && ((year % 100) != 0 || (year % 400) == 0);
7,org.joda.time.chrono.ISOChronology,<clinit>,63,/JodaTime/src/main/java/org/joda/time/chrono/ISOChronology.java,"private static final Map<DateTimeZone, ISOChronology> cCache = new HashMap<DateTimeZone, ISOChronology>();"
7,org.joda.time.chrono.ISOChronology,<clinit>,65,/JodaTime/src/main/java/org/joda/time/chrono/ISOChronology.java,cFastCache = new ISOChronology[FAST_CACHE_SIZE];
7,org.joda.time.chrono.ISOChronology,<clinit>,66,/JodaTime/src/main/java/org/joda/time/chrono/ISOChronology.java,INSTANCE_UTC = new ISOChronology(GregorianChronology.getInstanceUTC());
7,org.joda.time.chrono.ISOChronology,<clinit>,67,/JodaTime/src/main/java/org/joda/time/chrono/ISOChronology.java,"cCache.put(DateTimeZone.UTC, INSTANCE_UTC);"
7,org.joda.time.chrono.ISOChronology,<clinit>,68,/JodaTime/src/main/java/org/joda/time/chrono/ISOChronology.java,}
7,org.joda.time.chrono.ISOChronology,<init>,122,/JodaTime/src/main/java/org/joda/time/chrono/ISOChronology.java,"super(base, null);"
7,org.joda.time.chrono.ISOChronology,<init>,123,/JodaTime/src/main/java/org/joda/time/chrono/ISOChronology.java,}
7,org.joda.time.chrono.ISOChronology,assemble,169,/JodaTime/src/main/java/org/joda/time/chrono/ISOChronology.java,if (getBase().getZone() == DateTimeZone.UTC) {
7,org.joda.time.chrono.ISOChronology,assemble,171,/JodaTime/src/main/java/org/joda/time/chrono/ISOChronology.java,fields.centuryOfEra = new DividedDateTimeField(
7,org.joda.time.chrono.ISOChronology,assemble,173,/JodaTime/src/main/java/org/joda/time/chrono/ISOChronology.java,fields.yearOfCentury = new RemainderDateTimeField(
7,org.joda.time.chrono.ISOChronology,assemble,175,/JodaTime/src/main/java/org/joda/time/chrono/ISOChronology.java,fields.weekyearOfCentury = new RemainderDateTimeField(
7,org.joda.time.chrono.ISOChronology,assemble,178,/JodaTime/src/main/java/org/joda/time/chrono/ISOChronology.java,fields.centuries = fields.centuryOfEra.getDurationField();
7,org.joda.time.chrono.ISOChronology,assemble,180,/JodaTime/src/main/java/org/joda/time/chrono/ISOChronology.java,}
7,org.joda.time.chrono.ISOChronology,getInstance,96,/JodaTime/src/main/java/org/joda/time/chrono/ISOChronology.java,if (zone == null) {
7,org.joda.time.chrono.ISOChronology,getInstance,99,/JodaTime/src/main/java/org/joda/time/chrono/ISOChronology.java,int index = System.identityHashCode(zone) & (FAST_CACHE_SIZE - 1);
7,org.joda.time.chrono.ISOChronology,getInstance,100,/JodaTime/src/main/java/org/joda/time/chrono/ISOChronology.java,ISOChronology chrono = cFastCache[index];
7,org.joda.time.chrono.ISOChronology,getInstance,101,/JodaTime/src/main/java/org/joda/time/chrono/ISOChronology.java,if (chrono != null && chrono.getZone() == zone) {
7,org.joda.time.chrono.ISOChronology,getInstance,104,/JodaTime/src/main/java/org/joda/time/chrono/ISOChronology.java,synchronized (cCache) {
7,org.joda.time.chrono.ISOChronology,getInstance,105,/JodaTime/src/main/java/org/joda/time/chrono/ISOChronology.java,chrono = cCache.get(zone);
7,org.joda.time.chrono.ISOChronology,getInstance,106,/JodaTime/src/main/java/org/joda/time/chrono/ISOChronology.java,if (chrono == null) {
7,org.joda.time.chrono.ISOChronology,getInstance,107,/JodaTime/src/main/java/org/joda/time/chrono/ISOChronology.java,"chrono = new ISOChronology(ZonedChronology.getInstance(INSTANCE_UTC, zone));"
7,org.joda.time.chrono.ISOChronology,getInstance,108,/JodaTime/src/main/java/org/joda/time/chrono/ISOChronology.java,"cCache.put(zone, chrono);"
7,org.joda.time.chrono.ISOChronology,getInstance,110,/JodaTime/src/main/java/org/joda/time/chrono/ISOChronology.java,}
7,org.joda.time.chrono.ISOChronology,getInstance,111,/JodaTime/src/main/java/org/joda/time/chrono/ISOChronology.java,cFastCache[index] = chrono;
7,org.joda.time.chrono.ISOChronology,getInstance,112,/JodaTime/src/main/java/org/joda/time/chrono/ISOChronology.java,return chrono;
7,org.joda.time.chrono.ISOChronology,getInstanceUTC,77,/JodaTime/src/main/java/org/joda/time/chrono/ISOChronology.java,return INSTANCE_UTC;
7,org.joda.time.chrono.ISOChronology,withUTC,133,/JodaTime/src/main/java/org/joda/time/chrono/ISOChronology.java,return INSTANCE_UTC;
7,org.joda.time.chrono.ISOYearOfEraDateTimeField,<clinit>,40,/JodaTime/src/main/java/org/joda/time/chrono/ISOYearOfEraDateTimeField.java,static final DateTimeField INSTANCE = new ISOYearOfEraDateTimeField();
7,org.joda.time.chrono.ISOYearOfEraDateTimeField,<init>,46,/JodaTime/src/main/java/org/joda/time/chrono/ISOYearOfEraDateTimeField.java,"super(GregorianChronology.getInstanceUTC().year(), DateTimeFieldType.yearOfEra());"
7,org.joda.time.chrono.ISOYearOfEraDateTimeField,<init>,47,/JodaTime/src/main/java/org/joda/time/chrono/ISOYearOfEraDateTimeField.java,}
7,org.joda.time.chrono.ISOYearOfEraDateTimeField,getMaximumValue,91,/JodaTime/src/main/java/org/joda/time/chrono/ISOYearOfEraDateTimeField.java,return getWrappedField().getMaximumValue();
7,org.joda.time.chrono.ISOYearOfEraDateTimeField,getMinimumValue,87,/JodaTime/src/main/java/org/joda/time/chrono/ISOYearOfEraDateTimeField.java,return 0;
7,org.joda.time.chrono.JulianChronology,<clinit>,71,/JodaTime/src/main/java/org/joda/time/chrono/JulianChronology.java,"private static final Map<DateTimeZone, JulianChronology[]> cCache = new HashMap<DateTimeZone, JulianChronology[]>();"
7,org.joda.time.chrono.JulianChronology,<clinit>,74,/JodaTime/src/main/java/org/joda/time/chrono/JulianChronology.java,INSTANCE_UTC = getInstance(DateTimeZone.UTC);
7,org.joda.time.chrono.JulianChronology,<clinit>,75,/JodaTime/src/main/java/org/joda/time/chrono/JulianChronology.java,}
7,org.joda.time.chrono.JulianChronology,<init>,162,/JodaTime/src/main/java/org/joda/time/chrono/JulianChronology.java,"super(base, param, minDaysInFirstWeek);"
7,org.joda.time.chrono.JulianChronology,<init>,163,/JodaTime/src/main/java/org/joda/time/chrono/JulianChronology.java,}
7,org.joda.time.chrono.JulianChronology,adjustYearForSet,78,/JodaTime/src/main/java/org/joda/time/chrono/JulianChronology.java,if (year <= 0) {
7,org.joda.time.chrono.JulianChronology,adjustYearForSet,79,/JodaTime/src/main/java/org/joda/time/chrono/JulianChronology.java,if (year == 0) {
7,org.joda.time.chrono.JulianChronology,adjustYearForSet,83,/JodaTime/src/main/java/org/joda/time/chrono/JulianChronology.java,year++;
7,org.joda.time.chrono.JulianChronology,adjustYearForSet,85,/JodaTime/src/main/java/org/joda/time/chrono/JulianChronology.java,return year;
7,org.joda.time.chrono.JulianChronology,assemble,265,/JodaTime/src/main/java/org/joda/time/chrono/JulianChronology.java,if (getBase() == null) {
7,org.joda.time.chrono.JulianChronology,assemble,266,/JodaTime/src/main/java/org/joda/time/chrono/JulianChronology.java,super.assemble(fields);
7,org.joda.time.chrono.JulianChronology,assemble,268,/JodaTime/src/main/java/org/joda/time/chrono/JulianChronology.java,"fields.year = new SkipDateTimeField(this, fields.year);"
7,org.joda.time.chrono.JulianChronology,assemble,269,/JodaTime/src/main/java/org/joda/time/chrono/JulianChronology.java,"fields.weekyear = new SkipDateTimeField(this, fields.weekyear);"
7,org.joda.time.chrono.JulianChronology,assemble,271,/JodaTime/src/main/java/org/joda/time/chrono/JulianChronology.java,}
7,org.joda.time.chrono.JulianChronology,calculateFirstDayOfYearMillis,219,/JodaTime/src/main/java/org/joda/time/chrono/JulianChronology.java,int relativeYear = year - 1968;
7,org.joda.time.chrono.JulianChronology,calculateFirstDayOfYearMillis,221,/JodaTime/src/main/java/org/joda/time/chrono/JulianChronology.java,if (relativeYear <= 0) {
7,org.joda.time.chrono.JulianChronology,calculateFirstDayOfYearMillis,224,/JodaTime/src/main/java/org/joda/time/chrono/JulianChronology.java,leapYears = (relativeYear + 3) >> 2;
7,org.joda.time.chrono.JulianChronology,calculateFirstDayOfYearMillis,233,/JodaTime/src/main/java/org/joda/time/chrono/JulianChronology.java,long millis = (relativeYear * 365L + leapYears) * (long)DateTimeConstants.MILLIS_PER_DAY;
7,org.joda.time.chrono.JulianChronology,calculateFirstDayOfYearMillis,237,/JodaTime/src/main/java/org/joda/time/chrono/JulianChronology.java,return millis - (366L + 352) * DateTimeConstants.MILLIS_PER_DAY;
7,org.joda.time.chrono.JulianChronology,getApproxMillisAtEpochDividedByTwo,261,/JodaTime/src/main/java/org/joda/time/chrono/JulianChronology.java,return (1969L * MILLIS_PER_YEAR + 352L * DateTimeConstants.MILLIS_PER_DAY) / 2;
7,org.joda.time.chrono.JulianChronology,getAverageMillisPerMonth,257,/JodaTime/src/main/java/org/joda/time/chrono/JulianChronology.java,return MILLIS_PER_MONTH;
7,org.joda.time.chrono.JulianChronology,getAverageMillisPerYear,249,/JodaTime/src/main/java/org/joda/time/chrono/JulianChronology.java,return MILLIS_PER_YEAR;
7,org.joda.time.chrono.JulianChronology,getAverageMillisPerYearDividedByTwo,253,/JodaTime/src/main/java/org/joda/time/chrono/JulianChronology.java,return MILLIS_PER_YEAR / 2;
7,org.joda.time.chrono.JulianChronology,getDateMidnightMillis,207,/JodaTime/src/main/java/org/joda/time/chrono/JulianChronology.java,"return super.getDateMidnightMillis(adjustYearForSet(year), monthOfYear, dayOfMonth);"
7,org.joda.time.chrono.JulianChronology,getInstance,114,/JodaTime/src/main/java/org/joda/time/chrono/JulianChronology.java,"return getInstance(zone, 4);"
7,org.joda.time.chrono.JulianChronology,getInstance,125,/JodaTime/src/main/java/org/joda/time/chrono/JulianChronology.java,if (zone == null) {
7,org.joda.time.chrono.JulianChronology,getInstance,129,/JodaTime/src/main/java/org/joda/time/chrono/JulianChronology.java,synchronized (cCache) {
7,org.joda.time.chrono.JulianChronology,getInstance,130,/JodaTime/src/main/java/org/joda/time/chrono/JulianChronology.java,JulianChronology[] chronos = cCache.get(zone);
7,org.joda.time.chrono.JulianChronology,getInstance,131,/JodaTime/src/main/java/org/joda/time/chrono/JulianChronology.java,if (chronos == null) {
7,org.joda.time.chrono.JulianChronology,getInstance,132,/JodaTime/src/main/java/org/joda/time/chrono/JulianChronology.java,chronos = new JulianChronology[7];
7,org.joda.time.chrono.JulianChronology,getInstance,133,/JodaTime/src/main/java/org/joda/time/chrono/JulianChronology.java,"cCache.put(zone, chronos);"
7,org.joda.time.chrono.JulianChronology,getInstance,136,/JodaTime/src/main/java/org/joda/time/chrono/JulianChronology.java,chrono = chronos[minDaysInFirstWeek - 1];
7,org.joda.time.chrono.JulianChronology,getInstance,140,/JodaTime/src/main/java/org/joda/time/chrono/JulianChronology.java,}
7,org.joda.time.chrono.JulianChronology,getInstance,141,/JodaTime/src/main/java/org/joda/time/chrono/JulianChronology.java,if (chrono == null) {
7,org.joda.time.chrono.JulianChronology,getInstance,142,/JodaTime/src/main/java/org/joda/time/chrono/JulianChronology.java,if (zone == DateTimeZone.UTC) {
7,org.joda.time.chrono.JulianChronology,getInstance,143,/JodaTime/src/main/java/org/joda/time/chrono/JulianChronology.java,"chrono = new JulianChronology(null, null, minDaysInFirstWeek);"
7,org.joda.time.chrono.JulianChronology,getInstance,149,/JodaTime/src/main/java/org/joda/time/chrono/JulianChronology.java,chronos[minDaysInFirstWeek - 1] = chrono;
7,org.joda.time.chrono.JulianChronology,getInstance,151,/JodaTime/src/main/java/org/joda/time/chrono/JulianChronology.java,}
7,org.joda.time.chrono.JulianChronology,getInstance,152,/JodaTime/src/main/java/org/joda/time/chrono/JulianChronology.java,return chrono;
7,org.joda.time.chrono.JulianChronology,getMaxYear,245,/JodaTime/src/main/java/org/joda/time/chrono/JulianChronology.java,return MAX_YEAR;
7,org.joda.time.chrono.JulianChronology,getMinYear,241,/JodaTime/src/main/java/org/joda/time/chrono/JulianChronology.java,return MIN_YEAR;
7,org.joda.time.chrono.JulianChronology,getZone,50,/JodaTime/src/main/java/org/joda/time/chrono/JulianChronology.java,public final class JulianChronology extends BasicGJChronology {
7,org.joda.time.chrono.JulianChronology,isLeapYear,211,/JodaTime/src/main/java/org/joda/time/chrono/JulianChronology.java,return (year & 3) == 0;
7,org.joda.time.chrono.LimitChronology,<init>,99,/JodaTime/src/main/java/org/joda/time/chrono/LimitChronology.java,"super(base, null);"
7,org.joda.time.chrono.LimitChronology,<init>,101,/JodaTime/src/main/java/org/joda/time/chrono/LimitChronology.java,iLowerLimit = lowerLimit;
7,org.joda.time.chrono.LimitChronology,<init>,102,/JodaTime/src/main/java/org/joda/time/chrono/LimitChronology.java,iUpperLimit = upperLimit;
7,org.joda.time.chrono.LimitChronology,<init>,103,/JodaTime/src/main/java/org/joda/time/chrono/LimitChronology.java,}
7,org.joda.time.chrono.LimitChronology,assemble,209,/JodaTime/src/main/java/org/joda/time/chrono/LimitChronology.java,"HashMap<Object, Object> converted = new HashMap<Object, Object>();"
7,org.joda.time.chrono.LimitChronology,assemble,213,/JodaTime/src/main/java/org/joda/time/chrono/LimitChronology.java,"fields.eras = convertField(fields.eras, converted);"
7,org.joda.time.chrono.LimitChronology,assemble,214,/JodaTime/src/main/java/org/joda/time/chrono/LimitChronology.java,"fields.centuries = convertField(fields.centuries, converted);"
7,org.joda.time.chrono.LimitChronology,assemble,215,/JodaTime/src/main/java/org/joda/time/chrono/LimitChronology.java,"fields.years = convertField(fields.years, converted);"
7,org.joda.time.chrono.LimitChronology,assemble,216,/JodaTime/src/main/java/org/joda/time/chrono/LimitChronology.java,"fields.months = convertField(fields.months, converted);"
7,org.joda.time.chrono.LimitChronology,assemble,217,/JodaTime/src/main/java/org/joda/time/chrono/LimitChronology.java,"fields.weekyears = convertField(fields.weekyears, converted);"
7,org.joda.time.chrono.LimitChronology,assemble,218,/JodaTime/src/main/java/org/joda/time/chrono/LimitChronology.java,"fields.weeks = convertField(fields.weeks, converted);"
7,org.joda.time.chrono.LimitChronology,assemble,219,/JodaTime/src/main/java/org/joda/time/chrono/LimitChronology.java,"fields.days = convertField(fields.days, converted);"
7,org.joda.time.chrono.LimitChronology,assemble,221,/JodaTime/src/main/java/org/joda/time/chrono/LimitChronology.java,"fields.halfdays = convertField(fields.halfdays, converted);"
7,org.joda.time.chrono.LimitChronology,assemble,222,/JodaTime/src/main/java/org/joda/time/chrono/LimitChronology.java,"fields.hours = convertField(fields.hours, converted);"
7,org.joda.time.chrono.LimitChronology,assemble,223,/JodaTime/src/main/java/org/joda/time/chrono/LimitChronology.java,"fields.minutes = convertField(fields.minutes, converted);"
7,org.joda.time.chrono.LimitChronology,assemble,224,/JodaTime/src/main/java/org/joda/time/chrono/LimitChronology.java,"fields.seconds = convertField(fields.seconds, converted);"
7,org.joda.time.chrono.LimitChronology,assemble,225,/JodaTime/src/main/java/org/joda/time/chrono/LimitChronology.java,"fields.millis = convertField(fields.millis, converted);"
7,org.joda.time.chrono.LimitChronology,assemble,229,/JodaTime/src/main/java/org/joda/time/chrono/LimitChronology.java,"fields.year = convertField(fields.year, converted);"
7,org.joda.time.chrono.LimitChronology,assemble,230,/JodaTime/src/main/java/org/joda/time/chrono/LimitChronology.java,"fields.yearOfEra = convertField(fields.yearOfEra, converted);"
7,org.joda.time.chrono.LimitChronology,assemble,231,/JodaTime/src/main/java/org/joda/time/chrono/LimitChronology.java,"fields.yearOfCentury = convertField(fields.yearOfCentury, converted);"
7,org.joda.time.chrono.LimitChronology,assemble,232,/JodaTime/src/main/java/org/joda/time/chrono/LimitChronology.java,"fields.centuryOfEra = convertField(fields.centuryOfEra, converted);"
7,org.joda.time.chrono.LimitChronology,assemble,233,/JodaTime/src/main/java/org/joda/time/chrono/LimitChronology.java,"fields.era = convertField(fields.era, converted);"
7,org.joda.time.chrono.LimitChronology,assemble,234,/JodaTime/src/main/java/org/joda/time/chrono/LimitChronology.java,"fields.dayOfWeek = convertField(fields.dayOfWeek, converted);"
7,org.joda.time.chrono.LimitChronology,assemble,235,/JodaTime/src/main/java/org/joda/time/chrono/LimitChronology.java,"fields.dayOfMonth = convertField(fields.dayOfMonth, converted);"
7,org.joda.time.chrono.LimitChronology,assemble,236,/JodaTime/src/main/java/org/joda/time/chrono/LimitChronology.java,"fields.dayOfYear = convertField(fields.dayOfYear, converted);"
7,org.joda.time.chrono.LimitChronology,assemble,237,/JodaTime/src/main/java/org/joda/time/chrono/LimitChronology.java,"fields.monthOfYear = convertField(fields.monthOfYear, converted);"
7,org.joda.time.chrono.LimitChronology,assemble,238,/JodaTime/src/main/java/org/joda/time/chrono/LimitChronology.java,"fields.weekOfWeekyear = convertField(fields.weekOfWeekyear, converted);"
7,org.joda.time.chrono.LimitChronology,assemble,239,/JodaTime/src/main/java/org/joda/time/chrono/LimitChronology.java,"fields.weekyear = convertField(fields.weekyear, converted);"
7,org.joda.time.chrono.LimitChronology,assemble,240,/JodaTime/src/main/java/org/joda/time/chrono/LimitChronology.java,"fields.weekyearOfCentury = convertField(fields.weekyearOfCentury, converted);"
7,org.joda.time.chrono.LimitChronology,assemble,242,/JodaTime/src/main/java/org/joda/time/chrono/LimitChronology.java,"fields.millisOfSecond = convertField(fields.millisOfSecond, converted);"
7,org.joda.time.chrono.LimitChronology,assemble,243,/JodaTime/src/main/java/org/joda/time/chrono/LimitChronology.java,"fields.millisOfDay = convertField(fields.millisOfDay, converted);"
7,org.joda.time.chrono.LimitChronology,assemble,244,/JodaTime/src/main/java/org/joda/time/chrono/LimitChronology.java,"fields.secondOfMinute = convertField(fields.secondOfMinute, converted);"
7,org.joda.time.chrono.LimitChronology,assemble,245,/JodaTime/src/main/java/org/joda/time/chrono/LimitChronology.java,"fields.secondOfDay = convertField(fields.secondOfDay, converted);"
7,org.joda.time.chrono.LimitChronology,assemble,246,/JodaTime/src/main/java/org/joda/time/chrono/LimitChronology.java,"fields.minuteOfHour = convertField(fields.minuteOfHour, converted);"
7,org.joda.time.chrono.LimitChronology,assemble,247,/JodaTime/src/main/java/org/joda/time/chrono/LimitChronology.java,"fields.minuteOfDay = convertField(fields.minuteOfDay, converted);"
7,org.joda.time.chrono.LimitChronology,assemble,248,/JodaTime/src/main/java/org/joda/time/chrono/LimitChronology.java,"fields.hourOfDay = convertField(fields.hourOfDay, converted);"
7,org.joda.time.chrono.LimitChronology,assemble,249,/JodaTime/src/main/java/org/joda/time/chrono/LimitChronology.java,"fields.hourOfHalfday = convertField(fields.hourOfHalfday, converted);"
7,org.joda.time.chrono.LimitChronology,assemble,250,/JodaTime/src/main/java/org/joda/time/chrono/LimitChronology.java,"fields.clockhourOfDay = convertField(fields.clockhourOfDay, converted);"
7,org.joda.time.chrono.LimitChronology,assemble,251,/JodaTime/src/main/java/org/joda/time/chrono/LimitChronology.java,"fields.clockhourOfHalfday = convertField(fields.clockhourOfHalfday, converted);"
7,org.joda.time.chrono.LimitChronology,assemble,252,/JodaTime/src/main/java/org/joda/time/chrono/LimitChronology.java,"fields.halfdayOfDay = convertField(fields.halfdayOfDay, converted);"
7,org.joda.time.chrono.LimitChronology,assemble,253,/JodaTime/src/main/java/org/joda/time/chrono/LimitChronology.java,}
7,org.joda.time.chrono.LimitChronology,checkLimits,285,/JodaTime/src/main/java/org/joda/time/chrono/LimitChronology.java,if ((limit = iLowerLimit) != null && instant < limit.getMillis()) {
7,org.joda.time.chrono.LimitChronology,checkLimits,288,/JodaTime/src/main/java/org/joda/time/chrono/LimitChronology.java,if ((limit = iUpperLimit) != null && instant >= limit.getMillis()) {
7,org.joda.time.chrono.LimitChronology,checkLimits,291,/JodaTime/src/main/java/org/joda/time/chrono/LimitChronology.java,}
7,org.joda.time.chrono.LimitChronology,convertField,268,/JodaTime/src/main/java/org/joda/time/chrono/LimitChronology.java,if (field == null || !field.isSupported()) {
7,org.joda.time.chrono.LimitChronology,convertField,271,/JodaTime/src/main/java/org/joda/time/chrono/LimitChronology.java,if (converted.containsKey(field)) {
7,org.joda.time.chrono.LimitChronology,convertField,274,/JodaTime/src/main/java/org/joda/time/chrono/LimitChronology.java,LimitDateTimeField limitField =
7,org.joda.time.chrono.LimitChronology,convertField,279,/JodaTime/src/main/java/org/joda/time/chrono/LimitChronology.java,"converted.put(field, limitField);"
7,org.joda.time.chrono.LimitChronology,convertField,280,/JodaTime/src/main/java/org/joda/time/chrono/LimitChronology.java,return limitField;
7,org.joda.time.chrono.LimitChronology,convertField,256,/JodaTime/src/main/java/org/joda/time/chrono/LimitChronology.java,if (field == null || !field.isSupported()) {
7,org.joda.time.chrono.LimitChronology,convertField,257,/JodaTime/src/main/java/org/joda/time/chrono/LimitChronology.java,return field;
7,org.joda.time.chrono.LimitChronology,convertField,259,/JodaTime/src/main/java/org/joda/time/chrono/LimitChronology.java,if (converted.containsKey(field)) {
7,org.joda.time.chrono.LimitChronology,convertField,260,/JodaTime/src/main/java/org/joda/time/chrono/LimitChronology.java,return (DurationField)converted.get(field);
7,org.joda.time.chrono.LimitChronology,convertField,262,/JodaTime/src/main/java/org/joda/time/chrono/LimitChronology.java,LimitDurationField limitField = new LimitDurationField(field);
7,org.joda.time.chrono.LimitChronology,convertField,263,/JodaTime/src/main/java/org/joda/time/chrono/LimitChronology.java,"converted.put(field, limitField);"
7,org.joda.time.chrono.LimitChronology,convertField,264,/JodaTime/src/main/java/org/joda/time/chrono/LimitChronology.java,return limitField;
7,org.joda.time.chrono.LimitChronology,getInstance,67,/JodaTime/src/main/java/org/joda/time/chrono/LimitChronology.java,if (base == null) {
7,org.joda.time.chrono.LimitChronology,getInstance,71,/JodaTime/src/main/java/org/joda/time/chrono/LimitChronology.java,lowerLimit = lowerLimit == null ? null : lowerLimit.toDateTime();
7,org.joda.time.chrono.LimitChronology,getInstance,72,/JodaTime/src/main/java/org/joda/time/chrono/LimitChronology.java,upperLimit = upperLimit == null ? null : upperLimit.toDateTime();
7,org.joda.time.chrono.LimitChronology,getInstance,74,/JodaTime/src/main/java/org/joda/time/chrono/LimitChronology.java,if (lowerLimit != null && upperLimit != null) {
7,org.joda.time.chrono.LimitChronology,getInstance,81,/JodaTime/src/main/java/org/joda/time/chrono/LimitChronology.java,"return new LimitChronology(base, (DateTime)lowerLimit, (DateTime)upperLimit);"
7,org.joda.time.chrono.LimitChronology$LimitDateTimeField,<init>,453,/JodaTime/src/main/java/org/joda/time/chrono/LimitChronology.java,DurationField leapDurationField) {
7,org.joda.time.chrono.LimitChronology$LimitDateTimeField,<init>,454,/JodaTime/src/main/java/org/joda/time/chrono/LimitChronology.java,"super(field, field.getType());"
7,org.joda.time.chrono.LimitChronology$LimitDateTimeField,<init>,455,/JodaTime/src/main/java/org/joda/time/chrono/LimitChronology.java,iDurationField = durationField;
7,org.joda.time.chrono.LimitChronology$LimitDateTimeField,<init>,456,/JodaTime/src/main/java/org/joda/time/chrono/LimitChronology.java,iRangeDurationField = rangeDurationField;
7,org.joda.time.chrono.LimitChronology$LimitDateTimeField,<init>,457,/JodaTime/src/main/java/org/joda/time/chrono/LimitChronology.java,iLeapDurationField = leapDurationField;
7,org.joda.time.chrono.LimitChronology$LimitDateTimeField,<init>,458,/JodaTime/src/main/java/org/joda/time/chrono/LimitChronology.java,}
7,org.joda.time.chrono.LimitChronology$LimitDateTimeField,get,461,/JodaTime/src/main/java/org/joda/time/chrono/LimitChronology.java,"checkLimits(instant, null);"
7,org.joda.time.chrono.LimitChronology$LimitDateTimeField,get,462,/JodaTime/src/main/java/org/joda/time/chrono/LimitChronology.java,return getWrappedField().get(instant);
7,org.joda.time.chrono.LimitChronology$LimitDateTimeField,getAsShortText,471,/JodaTime/src/main/java/org/joda/time/chrono/LimitChronology.java,"checkLimits(instant, null);"
7,org.joda.time.chrono.LimitChronology$LimitDateTimeField,getAsShortText,472,/JodaTime/src/main/java/org/joda/time/chrono/LimitChronology.java,"return getWrappedField().getAsShortText(instant, locale);"
7,org.joda.time.chrono.LimitChronology$LimitDurationField,<init>,391,/JodaTime/src/main/java/org/joda/time/chrono/LimitChronology.java,LimitDurationField(DurationField field) {
7,org.joda.time.chrono.LimitChronology$LimitDurationField,<init>,392,/JodaTime/src/main/java/org/joda/time/chrono/LimitChronology.java,"super(field, field.getType());"
7,org.joda.time.chrono.LimitChronology$LimitDurationField,<init>,393,/JodaTime/src/main/java/org/joda/time/chrono/LimitChronology.java,}
7,org.joda.time.chrono.ZonedChronology,<init>,82,/JodaTime/src/main/java/org/joda/time/chrono/ZonedChronology.java,"super(base, zone);"
7,org.joda.time.chrono.ZonedChronology,<init>,83,/JodaTime/src/main/java/org/joda/time/chrono/ZonedChronology.java,}
7,org.joda.time.chrono.ZonedChronology,assemble,153,/JodaTime/src/main/java/org/joda/time/chrono/ZonedChronology.java,"HashMap<Object, Object> converted = new HashMap<Object, Object>();"
7,org.joda.time.chrono.ZonedChronology,assemble,157,/JodaTime/src/main/java/org/joda/time/chrono/ZonedChronology.java,"fields.eras = convertField(fields.eras, converted);"
7,org.joda.time.chrono.ZonedChronology,assemble,158,/JodaTime/src/main/java/org/joda/time/chrono/ZonedChronology.java,"fields.centuries = convertField(fields.centuries, converted);"
7,org.joda.time.chrono.ZonedChronology,assemble,159,/JodaTime/src/main/java/org/joda/time/chrono/ZonedChronology.java,"fields.years = convertField(fields.years, converted);"
7,org.joda.time.chrono.ZonedChronology,assemble,160,/JodaTime/src/main/java/org/joda/time/chrono/ZonedChronology.java,"fields.months = convertField(fields.months, converted);"
7,org.joda.time.chrono.ZonedChronology,assemble,161,/JodaTime/src/main/java/org/joda/time/chrono/ZonedChronology.java,"fields.weekyears = convertField(fields.weekyears, converted);"
7,org.joda.time.chrono.ZonedChronology,assemble,162,/JodaTime/src/main/java/org/joda/time/chrono/ZonedChronology.java,"fields.weeks = convertField(fields.weeks, converted);"
7,org.joda.time.chrono.ZonedChronology,assemble,163,/JodaTime/src/main/java/org/joda/time/chrono/ZonedChronology.java,"fields.days = convertField(fields.days, converted);"
7,org.joda.time.chrono.ZonedChronology,assemble,165,/JodaTime/src/main/java/org/joda/time/chrono/ZonedChronology.java,"fields.halfdays = convertField(fields.halfdays, converted);"
7,org.joda.time.chrono.ZonedChronology,assemble,166,/JodaTime/src/main/java/org/joda/time/chrono/ZonedChronology.java,"fields.hours = convertField(fields.hours, converted);"
7,org.joda.time.chrono.ZonedChronology,assemble,167,/JodaTime/src/main/java/org/joda/time/chrono/ZonedChronology.java,"fields.minutes = convertField(fields.minutes, converted);"
7,org.joda.time.chrono.ZonedChronology,assemble,168,/JodaTime/src/main/java/org/joda/time/chrono/ZonedChronology.java,"fields.seconds = convertField(fields.seconds, converted);"
7,org.joda.time.chrono.ZonedChronology,assemble,169,/JodaTime/src/main/java/org/joda/time/chrono/ZonedChronology.java,"fields.millis = convertField(fields.millis, converted);"
7,org.joda.time.chrono.ZonedChronology,assemble,173,/JodaTime/src/main/java/org/joda/time/chrono/ZonedChronology.java,"fields.year = convertField(fields.year, converted);"
7,org.joda.time.chrono.ZonedChronology,assemble,174,/JodaTime/src/main/java/org/joda/time/chrono/ZonedChronology.java,"fields.yearOfEra = convertField(fields.yearOfEra, converted);"
7,org.joda.time.chrono.ZonedChronology,assemble,175,/JodaTime/src/main/java/org/joda/time/chrono/ZonedChronology.java,"fields.yearOfCentury = convertField(fields.yearOfCentury, converted);"
7,org.joda.time.chrono.ZonedChronology,assemble,176,/JodaTime/src/main/java/org/joda/time/chrono/ZonedChronology.java,"fields.centuryOfEra = convertField(fields.centuryOfEra, converted);"
7,org.joda.time.chrono.ZonedChronology,assemble,177,/JodaTime/src/main/java/org/joda/time/chrono/ZonedChronology.java,"fields.era = convertField(fields.era, converted);"
7,org.joda.time.chrono.ZonedChronology,assemble,178,/JodaTime/src/main/java/org/joda/time/chrono/ZonedChronology.java,"fields.dayOfWeek = convertField(fields.dayOfWeek, converted);"
7,org.joda.time.chrono.ZonedChronology,assemble,179,/JodaTime/src/main/java/org/joda/time/chrono/ZonedChronology.java,"fields.dayOfMonth = convertField(fields.dayOfMonth, converted);"
7,org.joda.time.chrono.ZonedChronology,assemble,180,/JodaTime/src/main/java/org/joda/time/chrono/ZonedChronology.java,"fields.dayOfYear = convertField(fields.dayOfYear, converted);"
7,org.joda.time.chrono.ZonedChronology,assemble,181,/JodaTime/src/main/java/org/joda/time/chrono/ZonedChronology.java,"fields.monthOfYear = convertField(fields.monthOfYear, converted);"
7,org.joda.time.chrono.ZonedChronology,assemble,182,/JodaTime/src/main/java/org/joda/time/chrono/ZonedChronology.java,"fields.weekOfWeekyear = convertField(fields.weekOfWeekyear, converted);"
7,org.joda.time.chrono.ZonedChronology,assemble,183,/JodaTime/src/main/java/org/joda/time/chrono/ZonedChronology.java,"fields.weekyear = convertField(fields.weekyear, converted);"
7,org.joda.time.chrono.ZonedChronology,assemble,184,/JodaTime/src/main/java/org/joda/time/chrono/ZonedChronology.java,"fields.weekyearOfCentury = convertField(fields.weekyearOfCentury, converted);"
7,org.joda.time.chrono.ZonedChronology,assemble,186,/JodaTime/src/main/java/org/joda/time/chrono/ZonedChronology.java,"fields.millisOfSecond = convertField(fields.millisOfSecond, converted);"
7,org.joda.time.chrono.ZonedChronology,assemble,187,/JodaTime/src/main/java/org/joda/time/chrono/ZonedChronology.java,"fields.millisOfDay = convertField(fields.millisOfDay, converted);"
7,org.joda.time.chrono.ZonedChronology,assemble,188,/JodaTime/src/main/java/org/joda/time/chrono/ZonedChronology.java,"fields.secondOfMinute = convertField(fields.secondOfMinute, converted);"
7,org.joda.time.chrono.ZonedChronology,assemble,189,/JodaTime/src/main/java/org/joda/time/chrono/ZonedChronology.java,"fields.secondOfDay = convertField(fields.secondOfDay, converted);"
7,org.joda.time.chrono.ZonedChronology,assemble,190,/JodaTime/src/main/java/org/joda/time/chrono/ZonedChronology.java,"fields.minuteOfHour = convertField(fields.minuteOfHour, converted);"
7,org.joda.time.chrono.ZonedChronology,assemble,191,/JodaTime/src/main/java/org/joda/time/chrono/ZonedChronology.java,"fields.minuteOfDay = convertField(fields.minuteOfDay, converted);"
7,org.joda.time.chrono.ZonedChronology,assemble,192,/JodaTime/src/main/java/org/joda/time/chrono/ZonedChronology.java,"fields.hourOfDay = convertField(fields.hourOfDay, converted);"
7,org.joda.time.chrono.ZonedChronology,assemble,193,/JodaTime/src/main/java/org/joda/time/chrono/ZonedChronology.java,"fields.hourOfHalfday = convertField(fields.hourOfHalfday, converted);"
7,org.joda.time.chrono.ZonedChronology,assemble,194,/JodaTime/src/main/java/org/joda/time/chrono/ZonedChronology.java,"fields.clockhourOfDay = convertField(fields.clockhourOfDay, converted);"
7,org.joda.time.chrono.ZonedChronology,assemble,195,/JodaTime/src/main/java/org/joda/time/chrono/ZonedChronology.java,"fields.clockhourOfHalfday = convertField(fields.clockhourOfHalfday, converted);"
7,org.joda.time.chrono.ZonedChronology,assemble,196,/JodaTime/src/main/java/org/joda/time/chrono/ZonedChronology.java,"fields.halfdayOfDay = convertField(fields.halfdayOfDay, converted);"
7,org.joda.time.chrono.ZonedChronology,assemble,197,/JodaTime/src/main/java/org/joda/time/chrono/ZonedChronology.java,}
7,org.joda.time.chrono.ZonedChronology,convertField,212,/JodaTime/src/main/java/org/joda/time/chrono/ZonedChronology.java,if (field == null || !field.isSupported()) {
7,org.joda.time.chrono.ZonedChronology,convertField,215,/JodaTime/src/main/java/org/joda/time/chrono/ZonedChronology.java,if (converted.containsKey(field)) {
7,org.joda.time.chrono.ZonedChronology,convertField,218,/JodaTime/src/main/java/org/joda/time/chrono/ZonedChronology.java,ZonedDateTimeField zonedField =
7,org.joda.time.chrono.ZonedChronology,convertField,223,/JodaTime/src/main/java/org/joda/time/chrono/ZonedChronology.java,"converted.put(field, zonedField);"
7,org.joda.time.chrono.ZonedChronology,convertField,224,/JodaTime/src/main/java/org/joda/time/chrono/ZonedChronology.java,return zonedField;
7,org.joda.time.chrono.ZonedChronology,convertField,200,/JodaTime/src/main/java/org/joda/time/chrono/ZonedChronology.java,if (field == null || !field.isSupported()) {
7,org.joda.time.chrono.ZonedChronology,convertField,201,/JodaTime/src/main/java/org/joda/time/chrono/ZonedChronology.java,return field;
7,org.joda.time.chrono.ZonedChronology,convertField,203,/JodaTime/src/main/java/org/joda/time/chrono/ZonedChronology.java,if (converted.containsKey(field)) {
7,org.joda.time.chrono.ZonedChronology,convertField,204,/JodaTime/src/main/java/org/joda/time/chrono/ZonedChronology.java,return (DurationField)converted.get(field);
7,org.joda.time.chrono.ZonedChronology,convertField,206,/JodaTime/src/main/java/org/joda/time/chrono/ZonedChronology.java,"ZonedDurationField zonedField = new ZonedDurationField(field, getZone());"
7,org.joda.time.chrono.ZonedChronology,convertField,207,/JodaTime/src/main/java/org/joda/time/chrono/ZonedChronology.java,"converted.put(field, zonedField);"
7,org.joda.time.chrono.ZonedChronology,convertField,208,/JodaTime/src/main/java/org/joda/time/chrono/ZonedChronology.java,return zonedField;
7,org.joda.time.chrono.ZonedChronology,getInstance,56,/JodaTime/src/main/java/org/joda/time/chrono/ZonedChronology.java,if (base == null) {
7,org.joda.time.chrono.ZonedChronology,getInstance,59,/JodaTime/src/main/java/org/joda/time/chrono/ZonedChronology.java,base = base.withUTC();
7,org.joda.time.chrono.ZonedChronology,getInstance,60,/JodaTime/src/main/java/org/joda/time/chrono/ZonedChronology.java,if (base == null) {
7,org.joda.time.chrono.ZonedChronology,getInstance,63,/JodaTime/src/main/java/org/joda/time/chrono/ZonedChronology.java,if (zone == null) {
7,org.joda.time.chrono.ZonedChronology,getInstance,66,/JodaTime/src/main/java/org/joda/time/chrono/ZonedChronology.java,"return new ZonedChronology(base, zone);"
7,org.joda.time.chrono.ZonedChronology,getZone,86,/JodaTime/src/main/java/org/joda/time/chrono/ZonedChronology.java,return (DateTimeZone)getParam();
7,org.joda.time.chrono.ZonedChronology,useTimeArithmetic,72,/JodaTime/src/main/java/org/joda/time/chrono/ZonedChronology.java,return field != null && field.getUnitMillis() < DateTimeConstants.MILLIS_PER_HOUR * 12;
7,org.joda.time.chrono.ZonedChronology$ZonedDateTimeField,<init>,389,/JodaTime/src/main/java/org/joda/time/chrono/ZonedChronology.java,super(field.getType());
7,org.joda.time.chrono.ZonedChronology$ZonedDateTimeField,<init>,390,/JodaTime/src/main/java/org/joda/time/chrono/ZonedChronology.java,if (!field.isSupported()) {
7,org.joda.time.chrono.ZonedChronology$ZonedDateTimeField,<init>,393,/JodaTime/src/main/java/org/joda/time/chrono/ZonedChronology.java,iField = field;
7,org.joda.time.chrono.ZonedChronology$ZonedDateTimeField,<init>,394,/JodaTime/src/main/java/org/joda/time/chrono/ZonedChronology.java,iZone = zone;
7,org.joda.time.chrono.ZonedChronology$ZonedDateTimeField,<init>,395,/JodaTime/src/main/java/org/joda/time/chrono/ZonedChronology.java,iDurationField = durationField;
7,org.joda.time.chrono.ZonedChronology$ZonedDateTimeField,<init>,396,/JodaTime/src/main/java/org/joda/time/chrono/ZonedChronology.java,iTimeField = useTimeArithmetic(durationField);
7,org.joda.time.chrono.ZonedChronology$ZonedDateTimeField,<init>,397,/JodaTime/src/main/java/org/joda/time/chrono/ZonedChronology.java,iRangeDurationField = rangeDurationField;
7,org.joda.time.chrono.ZonedChronology$ZonedDateTimeField,<init>,398,/JodaTime/src/main/java/org/joda/time/chrono/ZonedChronology.java,iLeapDurationField = leapDurationField;
7,org.joda.time.chrono.ZonedChronology$ZonedDateTimeField,<init>,399,/JodaTime/src/main/java/org/joda/time/chrono/ZonedChronology.java,}
7,org.joda.time.chrono.ZonedChronology$ZonedDateTimeField,get,406,/JodaTime/src/main/java/org/joda/time/chrono/ZonedChronology.java,long localInstant = iZone.convertUTCToLocal(instant);
7,org.joda.time.chrono.ZonedChronology$ZonedDateTimeField,get,407,/JodaTime/src/main/java/org/joda/time/chrono/ZonedChronology.java,return iField.get(localInstant);
7,org.joda.time.chrono.ZonedChronology$ZonedDateTimeField,getDurationField,499,/JodaTime/src/main/java/org/joda/time/chrono/ZonedChronology.java,return iDurationField;
7,org.joda.time.chrono.ZonedChronology$ZonedDateTimeField,getLeapDurationField,517,/JodaTime/src/main/java/org/joda/time/chrono/ZonedChronology.java,return iLeapDurationField;
7,org.joda.time.chrono.ZonedChronology$ZonedDateTimeField,getMaximumValue,567,/JodaTime/src/main/java/org/joda/time/chrono/ZonedChronology.java,return iField.getMaximumValue();
7,org.joda.time.chrono.ZonedChronology$ZonedDateTimeField,getMinimumValue,550,/JodaTime/src/main/java/org/joda/time/chrono/ZonedChronology.java,return iField.getMinimumValue();
7,org.joda.time.chrono.ZonedChronology$ZonedDateTimeField,getRangeDurationField,503,/JodaTime/src/main/java/org/joda/time/chrono/ZonedChronology.java,return iRangeDurationField;
7,org.joda.time.chrono.ZonedChronology$ZonedDateTimeField,set,465,/JodaTime/src/main/java/org/joda/time/chrono/ZonedChronology.java,long localInstant = iZone.convertUTCToLocal(instant);
7,org.joda.time.chrono.ZonedChronology$ZonedDateTimeField,set,466,/JodaTime/src/main/java/org/joda/time/chrono/ZonedChronology.java,"localInstant = iField.set(localInstant, value);"
7,org.joda.time.chrono.ZonedChronology$ZonedDateTimeField,set,467,/JodaTime/src/main/java/org/joda/time/chrono/ZonedChronology.java,"long result = iZone.convertLocalToUTC(localInstant, false);"
7,org.joda.time.chrono.ZonedChronology$ZonedDateTimeField,set,468,/JodaTime/src/main/java/org/joda/time/chrono/ZonedChronology.java,if (get(result) != value) {
7,org.joda.time.chrono.ZonedChronology$ZonedDateTimeField,set,474,/JodaTime/src/main/java/org/joda/time/chrono/ZonedChronology.java,return result;
7,org.joda.time.chrono.ZonedChronology$ZonedDurationField,<init>,284,/JodaTime/src/main/java/org/joda/time/chrono/ZonedChronology.java,super(field.getType());
7,org.joda.time.chrono.ZonedChronology$ZonedDurationField,<init>,285,/JodaTime/src/main/java/org/joda/time/chrono/ZonedChronology.java,if (!field.isSupported()) {
7,org.joda.time.chrono.ZonedChronology$ZonedDurationField,<init>,288,/JodaTime/src/main/java/org/joda/time/chrono/ZonedChronology.java,iField = field;
7,org.joda.time.chrono.ZonedChronology$ZonedDurationField,<init>,289,/JodaTime/src/main/java/org/joda/time/chrono/ZonedChronology.java,iTimeField = useTimeArithmetic(field);
7,org.joda.time.chrono.ZonedChronology$ZonedDurationField,<init>,290,/JodaTime/src/main/java/org/joda/time/chrono/ZonedChronology.java,iZone = zone;
7,org.joda.time.chrono.ZonedChronology$ZonedDurationField,<init>,291,/JodaTime/src/main/java/org/joda/time/chrono/ZonedChronology.java,}
7,org.joda.time.chrono.ZonedChronology$ZonedDurationField,getUnitMillis,298,/JodaTime/src/main/java/org/joda/time/chrono/ZonedChronology.java,return iField.getUnitMillis();
7,org.joda.time.field.BaseDateTimeField,<init>,50,/JodaTime/src/main/java/org/joda/time/field/BaseDateTimeField.java,super();
7,org.joda.time.field.BaseDateTimeField,<init>,51,/JodaTime/src/main/java/org/joda/time/field/BaseDateTimeField.java,if (type == null) {
7,org.joda.time.field.BaseDateTimeField,<init>,54,/JodaTime/src/main/java/org/joda/time/field/BaseDateTimeField.java,iType = type;
7,org.joda.time.field.BaseDateTimeField,<init>,55,/JodaTime/src/main/java/org/joda/time/field/BaseDateTimeField.java,}
7,org.joda.time.field.BaseDateTimeField,add,253,/JodaTime/src/main/java/org/joda/time/field/BaseDateTimeField.java,"return getDurationField().add(instant, value);"
7,org.joda.time.field.BaseDateTimeField,getAsShortText,168,/JodaTime/src/main/java/org/joda/time/field/BaseDateTimeField.java,"return getAsShortText(get(instant), locale);"
7,org.joda.time.field.BaseDateTimeField,getLeapDurationField,726,/JodaTime/src/main/java/org/joda/time/field/BaseDateTimeField.java,return null;
7,org.joda.time.field.BaseDateTimeField,getMaximumValue,792,/JodaTime/src/main/java/org/joda/time/field/BaseDateTimeField.java,return getMaximumValue();
7,org.joda.time.field.BaseDateTimeField,getType,58,/JodaTime/src/main/java/org/joda/time/field/BaseDateTimeField.java,return iType;
7,org.joda.time.field.BaseDateTimeField,isSupported,69,/JodaTime/src/main/java/org/joda/time/field/BaseDateTimeField.java,return true;
7,org.joda.time.field.BaseDateTimeField,roundCeiling,886,/JodaTime/src/main/java/org/joda/time/field/BaseDateTimeField.java,long newInstant = roundFloor(instant);
7,org.joda.time.field.BaseDateTimeField,roundCeiling,887,/JodaTime/src/main/java/org/joda/time/field/BaseDateTimeField.java,if (newInstant != instant) {
7,org.joda.time.field.BaseDateTimeField,roundCeiling,888,/JodaTime/src/main/java/org/joda/time/field/BaseDateTimeField.java,"instant = add(newInstant, 1);"
7,org.joda.time.field.BaseDateTimeField,roundCeiling,890,/JodaTime/src/main/java/org/joda/time/field/BaseDateTimeField.java,return instant;
7,org.joda.time.field.BaseDurationField,<init>,47,/JodaTime/src/main/java/org/joda/time/field/BaseDurationField.java,super();
7,org.joda.time.field.BaseDurationField,<init>,48,/JodaTime/src/main/java/org/joda/time/field/BaseDurationField.java,if (type == null) {
7,org.joda.time.field.BaseDurationField,<init>,51,/JodaTime/src/main/java/org/joda/time/field/BaseDurationField.java,iType = type;
7,org.joda.time.field.BaseDurationField,<init>,52,/JodaTime/src/main/java/org/joda/time/field/BaseDurationField.java,}
7,org.joda.time.field.BaseDurationField,getType,55,/JodaTime/src/main/java/org/joda/time/field/BaseDurationField.java,return iType;
7,org.joda.time.field.BaseDurationField,isSupported,66,/JodaTime/src/main/java/org/joda/time/field/BaseDurationField.java,return true;
7,org.joda.time.field.DecoratedDateTimeField,<init>,54,/JodaTime/src/main/java/org/joda/time/field/DecoratedDateTimeField.java,super(type);
7,org.joda.time.field.DecoratedDateTimeField,<init>,55,/JodaTime/src/main/java/org/joda/time/field/DecoratedDateTimeField.java,if (field == null) {
7,org.joda.time.field.DecoratedDateTimeField,<init>,58,/JodaTime/src/main/java/org/joda/time/field/DecoratedDateTimeField.java,if (!field.isSupported()) {
7,org.joda.time.field.DecoratedDateTimeField,<init>,61,/JodaTime/src/main/java/org/joda/time/field/DecoratedDateTimeField.java,iField = field;
7,org.joda.time.field.DecoratedDateTimeField,<init>,62,/JodaTime/src/main/java/org/joda/time/field/DecoratedDateTimeField.java,}
7,org.joda.time.field.DecoratedDateTimeField,get,78,/JodaTime/src/main/java/org/joda/time/field/DecoratedDateTimeField.java,return iField.get(instant);
7,org.joda.time.field.DecoratedDateTimeField,getDurationField,86,/JodaTime/src/main/java/org/joda/time/field/DecoratedDateTimeField.java,return iField.getDurationField();
7,org.joda.time.field.DecoratedDateTimeField,getRangeDurationField,90,/JodaTime/src/main/java/org/joda/time/field/DecoratedDateTimeField.java,return iField.getRangeDurationField();
7,org.joda.time.field.DecoratedDateTimeField,getWrappedField,70,/JodaTime/src/main/java/org/joda/time/field/DecoratedDateTimeField.java,return iField;
7,org.joda.time.field.DecoratedDateTimeField,set,82,/JodaTime/src/main/java/org/joda/time/field/DecoratedDateTimeField.java,"return iField.set(instant, value);"
7,org.joda.time.field.DecoratedDurationField,<init>,52,/JodaTime/src/main/java/org/joda/time/field/DecoratedDurationField.java,super(type);
7,org.joda.time.field.DecoratedDurationField,<init>,53,/JodaTime/src/main/java/org/joda/time/field/DecoratedDurationField.java,if (field == null) {
7,org.joda.time.field.DecoratedDurationField,<init>,56,/JodaTime/src/main/java/org/joda/time/field/DecoratedDurationField.java,if (!field.isSupported()) {
7,org.joda.time.field.DecoratedDurationField,<init>,59,/JodaTime/src/main/java/org/joda/time/field/DecoratedDurationField.java,iField = field;
7,org.joda.time.field.DecoratedDurationField,<init>,60,/JodaTime/src/main/java/org/joda/time/field/DecoratedDurationField.java,}
7,org.joda.time.field.DecoratedDurationField,getUnitMillis,101,/JodaTime/src/main/java/org/joda/time/field/DecoratedDurationField.java,return iField.getUnitMillis();
7,org.joda.time.field.DecoratedDurationField,getWrappedField,69,/JodaTime/src/main/java/org/joda/time/field/DecoratedDurationField.java,return iField;
7,org.joda.time.field.DelegatedDateTimeField,<init>,52,/JodaTime/src/main/java/org/joda/time/field/DelegatedDateTimeField.java,"this(field, null);"
7,org.joda.time.field.DelegatedDateTimeField,<init>,53,/JodaTime/src/main/java/org/joda/time/field/DelegatedDateTimeField.java,}
7,org.joda.time.field.DelegatedDateTimeField,<init>,62,/JodaTime/src/main/java/org/joda/time/field/DelegatedDateTimeField.java,super();
7,org.joda.time.field.DelegatedDateTimeField,<init>,63,/JodaTime/src/main/java/org/joda/time/field/DelegatedDateTimeField.java,if (field == null) {
7,org.joda.time.field.DelegatedDateTimeField,<init>,66,/JodaTime/src/main/java/org/joda/time/field/DelegatedDateTimeField.java,iField = field;
7,org.joda.time.field.DelegatedDateTimeField,<init>,67,/JodaTime/src/main/java/org/joda/time/field/DelegatedDateTimeField.java,iType = (type == null ? field.getType() : type);
7,org.joda.time.field.DelegatedDateTimeField,<init>,68,/JodaTime/src/main/java/org/joda/time/field/DelegatedDateTimeField.java,}
7,org.joda.time.field.DelegatedDateTimeField,get,96,/JodaTime/src/main/java/org/joda/time/field/DelegatedDateTimeField.java,return iField.get(instant);
7,org.joda.time.field.DelegatedDateTimeField,getDurationField,192,/JodaTime/src/main/java/org/joda/time/field/DelegatedDateTimeField.java,return iField.getDurationField();
7,org.joda.time.field.DelegatedDateTimeField,getLeapDurationField,208,/JodaTime/src/main/java/org/joda/time/field/DelegatedDateTimeField.java,return iField.getLeapDurationField();
7,org.joda.time.field.DelegatedDateTimeField,getMaximumValue,228,/JodaTime/src/main/java/org/joda/time/field/DelegatedDateTimeField.java,return iField.getMaximumValue();
7,org.joda.time.field.DelegatedDateTimeField,getMinimumValue,212,/JodaTime/src/main/java/org/joda/time/field/DelegatedDateTimeField.java,return iField.getMinimumValue();
7,org.joda.time.field.DelegatedDateTimeField,getRangeDurationField,196,/JodaTime/src/main/java/org/joda/time/field/DelegatedDateTimeField.java,return iField.getRangeDurationField();
7,org.joda.time.field.DelegatedDateTimeField,getType,80,/JodaTime/src/main/java/org/joda/time/field/DelegatedDateTimeField.java,return iType;
7,org.joda.time.field.DelegatedDateTimeField,isSupported,88,/JodaTime/src/main/java/org/joda/time/field/DelegatedDateTimeField.java,return iField.isSupported();
7,org.joda.time.field.DelegatedDateTimeField,set,172,/JodaTime/src/main/java/org/joda/time/field/DelegatedDateTimeField.java,"return iField.set(instant, value);"
7,org.joda.time.field.DividedDateTimeField,<init>,56,/JodaTime/src/main/java/org/joda/time/field/DividedDateTimeField.java,"super(field, type);"
7,org.joda.time.field.DividedDateTimeField,<init>,58,/JodaTime/src/main/java/org/joda/time/field/DividedDateTimeField.java,if (divisor < 2) {
7,org.joda.time.field.DividedDateTimeField,<init>,62,/JodaTime/src/main/java/org/joda/time/field/DividedDateTimeField.java,DurationField unitField = field.getDurationField();
7,org.joda.time.field.DividedDateTimeField,<init>,63,/JodaTime/src/main/java/org/joda/time/field/DividedDateTimeField.java,if (unitField == null) {
7,org.joda.time.field.DividedDateTimeField,<init>,66,/JodaTime/src/main/java/org/joda/time/field/DividedDateTimeField.java,iDurationField = new ScaledDurationField(
7,org.joda.time.field.DividedDateTimeField,<init>,70,/JodaTime/src/main/java/org/joda/time/field/DividedDateTimeField.java,iDivisor = divisor;
7,org.joda.time.field.DividedDateTimeField,<init>,72,/JodaTime/src/main/java/org/joda/time/field/DividedDateTimeField.java,int i = field.getMinimumValue();
7,org.joda.time.field.DividedDateTimeField,<init>,73,/JodaTime/src/main/java/org/joda/time/field/DividedDateTimeField.java,int min = (i >= 0) ? i / divisor : ((i + 1) / divisor - 1);
7,org.joda.time.field.DividedDateTimeField,<init>,75,/JodaTime/src/main/java/org/joda/time/field/DividedDateTimeField.java,int j = field.getMaximumValue();
7,org.joda.time.field.DividedDateTimeField,<init>,76,/JodaTime/src/main/java/org/joda/time/field/DividedDateTimeField.java,int max = (j >= 0) ? j / divisor : ((j + 1) / divisor - 1);
7,org.joda.time.field.DividedDateTimeField,<init>,78,/JodaTime/src/main/java/org/joda/time/field/DividedDateTimeField.java,iMin = min;
7,org.joda.time.field.DividedDateTimeField,<init>,79,/JodaTime/src/main/java/org/joda/time/field/DividedDateTimeField.java,iMax = max;
7,org.joda.time.field.DividedDateTimeField,<init>,80,/JodaTime/src/main/java/org/joda/time/field/DividedDateTimeField.java,}
7,org.joda.time.field.DividedDateTimeField,getDurationField,182,/JodaTime/src/main/java/org/joda/time/field/DividedDateTimeField.java,return iDurationField;
7,org.joda.time.field.FieldUtils,safeAdd,64,/JodaTime/src/main/java/org/joda/time/field/FieldUtils.java,int sum = val1 + val2;
7,org.joda.time.field.FieldUtils,safeAdd,66,/JodaTime/src/main/java/org/joda/time/field/FieldUtils.java,if ((val1 ^ sum) < 0 && (val1 ^ val2) >= 0) {
7,org.joda.time.field.FieldUtils,safeAdd,70,/JodaTime/src/main/java/org/joda/time/field/FieldUtils.java,return sum;
7,org.joda.time.field.FieldUtils,safeAdd,82,/JodaTime/src/main/java/org/joda/time/field/FieldUtils.java,long sum = val1 + val2;
7,org.joda.time.field.FieldUtils,safeAdd,84,/JodaTime/src/main/java/org/joda/time/field/FieldUtils.java,if ((val1 ^ sum) < 0 && (val1 ^ val2) >= 0) {
7,org.joda.time.field.FieldUtils,safeAdd,88,/JodaTime/src/main/java/org/joda/time/field/FieldUtils.java,return sum;
7,org.joda.time.field.FieldUtils,verifyValueBounds,214,/JodaTime/src/main/java/org/joda/time/field/FieldUtils.java,if ((value < lowerBound) || (value > upperBound)) {
7,org.joda.time.field.FieldUtils,verifyValueBounds,219,/JodaTime/src/main/java/org/joda/time/field/FieldUtils.java,}
7,org.joda.time.field.FieldUtils,verifyValueBounds,232,/JodaTime/src/main/java/org/joda/time/field/FieldUtils.java,if ((value < lowerBound) || (value > upperBound)) {
7,org.joda.time.field.FieldUtils,verifyValueBounds,237,/JodaTime/src/main/java/org/joda/time/field/FieldUtils.java,}
7,org.joda.time.field.ImpreciseDateTimeField,<init>,55,/JodaTime/src/main/java/org/joda/time/field/ImpreciseDateTimeField.java,super(type);
7,org.joda.time.field.ImpreciseDateTimeField,<init>,56,/JodaTime/src/main/java/org/joda/time/field/ImpreciseDateTimeField.java,iUnitMillis = unitMillis;
7,org.joda.time.field.ImpreciseDateTimeField,<init>,57,/JodaTime/src/main/java/org/joda/time/field/ImpreciseDateTimeField.java,iDurationField = new LinkedDurationField(type.getDurationType());
7,org.joda.time.field.ImpreciseDateTimeField,<init>,58,/JodaTime/src/main/java/org/joda/time/field/ImpreciseDateTimeField.java,}
7,org.joda.time.field.ImpreciseDateTimeField,getDurationField,137,/JodaTime/src/main/java/org/joda/time/field/ImpreciseDateTimeField.java,return iDurationField;
7,org.joda.time.field.ImpreciseDateTimeField$LinkedDurationField,<init>,151,/JodaTime/src/main/java/org/joda/time/field/ImpreciseDateTimeField.java,LinkedDurationField(DurationFieldType type) {
7,org.joda.time.field.ImpreciseDateTimeField$LinkedDurationField,<init>,152,/JodaTime/src/main/java/org/joda/time/field/ImpreciseDateTimeField.java,super(type);
7,org.joda.time.field.ImpreciseDateTimeField$LinkedDurationField,<init>,153,/JodaTime/src/main/java/org/joda/time/field/ImpreciseDateTimeField.java,}
7,org.joda.time.field.ImpreciseDateTimeField$LinkedDurationField,getUnitMillis,160,/JodaTime/src/main/java/org/joda/time/field/ImpreciseDateTimeField.java,return iUnitMillis;
7,org.joda.time.field.MillisDurationField,<clinit>,38,/JodaTime/src/main/java/org/joda/time/field/MillisDurationField.java,public static final DurationField INSTANCE = new MillisDurationField();
7,org.joda.time.field.MillisDurationField,<init>,44,/JodaTime/src/main/java/org/joda/time/field/MillisDurationField.java,super();
7,org.joda.time.field.MillisDurationField,<init>,45,/JodaTime/src/main/java/org/joda/time/field/MillisDurationField.java,}
7,org.joda.time.field.MillisDurationField,add,117,/JodaTime/src/main/java/org/joda/time/field/MillisDurationField.java,"return FieldUtils.safeAdd(instant, value);"
7,org.joda.time.field.MillisDurationField,getType,49,/JodaTime/src/main/java/org/joda/time/field/MillisDurationField.java,return DurationFieldType.millis();
7,org.joda.time.field.MillisDurationField,getUnitMillis,80,/JodaTime/src/main/java/org/joda/time/field/MillisDurationField.java,return 1;
7,org.joda.time.field.MillisDurationField,isPrecise,71,/JodaTime/src/main/java/org/joda/time/field/MillisDurationField.java,return true;
7,org.joda.time.field.MillisDurationField,isSupported,62,/JodaTime/src/main/java/org/joda/time/field/MillisDurationField.java,return true;
7,org.joda.time.field.OffsetDateTimeField,<init>,46,/JodaTime/src/main/java/org/joda/time/field/OffsetDateTimeField.java,"this(field, (field == null ? null : field.getType()), offset, Integer.MIN_VALUE, Integer.MAX_VALUE);"
7,org.joda.time.field.OffsetDateTimeField,<init>,47,/JodaTime/src/main/java/org/joda/time/field/OffsetDateTimeField.java,}
7,org.joda.time.field.OffsetDateTimeField,<init>,58,/JodaTime/src/main/java/org/joda/time/field/OffsetDateTimeField.java,"this(field, type, offset, Integer.MIN_VALUE, Integer.MAX_VALUE);"
7,org.joda.time.field.OffsetDateTimeField,<init>,59,/JodaTime/src/main/java/org/joda/time/field/OffsetDateTimeField.java,}
7,org.joda.time.field.OffsetDateTimeField,<init>,73,/JodaTime/src/main/java/org/joda/time/field/OffsetDateTimeField.java,"super(field, type);"
7,org.joda.time.field.OffsetDateTimeField,<init>,75,/JodaTime/src/main/java/org/joda/time/field/OffsetDateTimeField.java,if (offset == 0) {
7,org.joda.time.field.OffsetDateTimeField,<init>,79,/JodaTime/src/main/java/org/joda/time/field/OffsetDateTimeField.java,iOffset = offset;
7,org.joda.time.field.OffsetDateTimeField,<init>,81,/JodaTime/src/main/java/org/joda/time/field/OffsetDateTimeField.java,if (minValue < (field.getMinimumValue() + offset)) {
7,org.joda.time.field.OffsetDateTimeField,<init>,82,/JodaTime/src/main/java/org/joda/time/field/OffsetDateTimeField.java,iMin = field.getMinimumValue() + offset;
7,org.joda.time.field.OffsetDateTimeField,<init>,86,/JodaTime/src/main/java/org/joda/time/field/OffsetDateTimeField.java,if (maxValue > (field.getMaximumValue() + offset)) {
7,org.joda.time.field.OffsetDateTimeField,<init>,87,/JodaTime/src/main/java/org/joda/time/field/OffsetDateTimeField.java,iMax = field.getMaximumValue() + offset;
7,org.joda.time.field.OffsetDateTimeField,<init>,91,/JodaTime/src/main/java/org/joda/time/field/OffsetDateTimeField.java,}
7,org.joda.time.field.OffsetDateTimeField,get,100,/JodaTime/src/main/java/org/joda/time/field/OffsetDateTimeField.java,return super.get(instant) + iOffset;
7,org.joda.time.field.OffsetDateTimeField,getLeapDurationField,165,/JodaTime/src/main/java/org/joda/time/field/OffsetDateTimeField.java,return getWrappedField().getLeapDurationField();
7,org.joda.time.field.OffsetDateTimeField,getMaximumValue,183,/JodaTime/src/main/java/org/joda/time/field/OffsetDateTimeField.java,return iMax;
7,org.joda.time.field.OffsetDateTimeField,getMinimumValue,174,/JodaTime/src/main/java/org/joda/time/field/OffsetDateTimeField.java,return iMin;
7,org.joda.time.field.OffsetDateTimeField,set,152,/JodaTime/src/main/java/org/joda/time/field/OffsetDateTimeField.java,"FieldUtils.verifyValueBounds(this, value, iMin, iMax);"
7,org.joda.time.field.OffsetDateTimeField,set,153,/JodaTime/src/main/java/org/joda/time/field/OffsetDateTimeField.java,"return super.set(instant, value - iOffset);"
7,org.joda.time.field.PreciseDateTimeField,<init>,57,/JodaTime/src/main/java/org/joda/time/field/PreciseDateTimeField.java,"super(type, unit);"
7,org.joda.time.field.PreciseDateTimeField,<init>,59,/JodaTime/src/main/java/org/joda/time/field/PreciseDateTimeField.java,if (!range.isPrecise()) {
7,org.joda.time.field.PreciseDateTimeField,<init>,63,/JodaTime/src/main/java/org/joda/time/field/PreciseDateTimeField.java,long rangeMillis = range.getUnitMillis();
7,org.joda.time.field.PreciseDateTimeField,<init>,64,/JodaTime/src/main/java/org/joda/time/field/PreciseDateTimeField.java,iRange = (int)(rangeMillis / getUnitMillis());
7,org.joda.time.field.PreciseDateTimeField,<init>,65,/JodaTime/src/main/java/org/joda/time/field/PreciseDateTimeField.java,if (iRange < 2) {
7,org.joda.time.field.PreciseDateTimeField,<init>,69,/JodaTime/src/main/java/org/joda/time/field/PreciseDateTimeField.java,iRangeField = range;
7,org.joda.time.field.PreciseDateTimeField,<init>,70,/JodaTime/src/main/java/org/joda/time/field/PreciseDateTimeField.java,}
7,org.joda.time.field.PreciseDateTimeField,get,79,/JodaTime/src/main/java/org/joda/time/field/PreciseDateTimeField.java,if (instant >= 0) {
7,org.joda.time.field.PreciseDateTimeField,get,80,/JodaTime/src/main/java/org/joda/time/field/PreciseDateTimeField.java,return (int) ((instant / getUnitMillis()) % iRange);
7,org.joda.time.field.PreciseDateTimeField,get,82,/JodaTime/src/main/java/org/joda/time/field/PreciseDateTimeField.java,return iRange - 1 + (int) (((instant + 1) / getUnitMillis()) % iRange);
7,org.joda.time.field.PreciseDateTimeField,getMaximumValue,131,/JodaTime/src/main/java/org/joda/time/field/PreciseDateTimeField.java,return iRange - 1;
7,org.joda.time.field.PreciseDateTimeField,getRangeDurationField,122,/JodaTime/src/main/java/org/joda/time/field/PreciseDateTimeField.java,return iRangeField;
7,org.joda.time.field.PreciseDateTimeField,set,111,/JodaTime/src/main/java/org/joda/time/field/PreciseDateTimeField.java,"FieldUtils.verifyValueBounds(this, value, getMinimumValue(), getMaximumValue());"
7,org.joda.time.field.PreciseDateTimeField,set,112,/JodaTime/src/main/java/org/joda/time/field/PreciseDateTimeField.java,return instant + (value - get(instant)) * iUnitMillis;
7,org.joda.time.field.PreciseDurationDateTimeField,<init>,48,/JodaTime/src/main/java/org/joda/time/field/PreciseDurationDateTimeField.java,super(type);
7,org.joda.time.field.PreciseDurationDateTimeField,<init>,50,/JodaTime/src/main/java/org/joda/time/field/PreciseDurationDateTimeField.java,if (!unit.isPrecise()) {
7,org.joda.time.field.PreciseDurationDateTimeField,<init>,54,/JodaTime/src/main/java/org/joda/time/field/PreciseDurationDateTimeField.java,iUnitMillis = unit.getUnitMillis();
7,org.joda.time.field.PreciseDurationDateTimeField,<init>,55,/JodaTime/src/main/java/org/joda/time/field/PreciseDurationDateTimeField.java,if (iUnitMillis < 1) {
7,org.joda.time.field.PreciseDurationDateTimeField,<init>,59,/JodaTime/src/main/java/org/joda/time/field/PreciseDurationDateTimeField.java,iUnitField = unit;
7,org.joda.time.field.PreciseDurationDateTimeField,<init>,60,/JodaTime/src/main/java/org/joda/time/field/PreciseDurationDateTimeField.java,}
7,org.joda.time.field.PreciseDurationDateTimeField,getDurationField,141,/JodaTime/src/main/java/org/joda/time/field/PreciseDurationDateTimeField.java,return iUnitField;
7,org.joda.time.field.PreciseDurationDateTimeField,getMaximumValueForSet,163,/JodaTime/src/main/java/org/joda/time/field/PreciseDurationDateTimeField.java,return getMaximumValue(instant);
7,org.joda.time.field.PreciseDurationDateTimeField,getMinimumValue,150,/JodaTime/src/main/java/org/joda/time/field/PreciseDurationDateTimeField.java,return 0;
7,org.joda.time.field.PreciseDurationDateTimeField,getUnitMillis,154,/JodaTime/src/main/java/org/joda/time/field/PreciseDurationDateTimeField.java,return iUnitMillis;
7,org.joda.time.field.PreciseDurationDateTimeField,roundFloor,92,/JodaTime/src/main/java/org/joda/time/field/PreciseDurationDateTimeField.java,if (instant >= 0) {
7,org.joda.time.field.PreciseDurationDateTimeField,roundFloor,95,/JodaTime/src/main/java/org/joda/time/field/PreciseDurationDateTimeField.java,instant += 1;
7,org.joda.time.field.PreciseDurationDateTimeField,roundFloor,96,/JodaTime/src/main/java/org/joda/time/field/PreciseDurationDateTimeField.java,return instant - instant % iUnitMillis - iUnitMillis;
7,org.joda.time.field.PreciseDurationDateTimeField,set,78,/JodaTime/src/main/java/org/joda/time/field/PreciseDurationDateTimeField.java,"FieldUtils.verifyValueBounds(this, value, getMinimumValue(),"
7,org.joda.time.field.PreciseDurationDateTimeField,set,80,/JodaTime/src/main/java/org/joda/time/field/PreciseDurationDateTimeField.java,return instant + (value - get(instant)) * iUnitMillis;
7,org.joda.time.field.PreciseDurationField,<init>,43,/JodaTime/src/main/java/org/joda/time/field/PreciseDurationField.java,super(type);
7,org.joda.time.field.PreciseDurationField,<init>,44,/JodaTime/src/main/java/org/joda/time/field/PreciseDurationField.java,iUnitMillis = unitMillis;
7,org.joda.time.field.PreciseDurationField,<init>,45,/JodaTime/src/main/java/org/joda/time/field/PreciseDurationField.java,}
7,org.joda.time.field.PreciseDurationField,add,104,/JodaTime/src/main/java/org/joda/time/field/PreciseDurationField.java,long addition = value * iUnitMillis;  // safe
7,org.joda.time.field.PreciseDurationField,add,105,/JodaTime/src/main/java/org/joda/time/field/PreciseDurationField.java,"return FieldUtils.safeAdd(instant, addition);"
7,org.joda.time.field.PreciseDurationField,getUnitMillis,63,/JodaTime/src/main/java/org/joda/time/field/PreciseDurationField.java,return iUnitMillis;
7,org.joda.time.field.PreciseDurationField,hashCode,142,/JodaTime/src/main/java/org/joda/time/field/PreciseDurationField.java,long millis = iUnitMillis;
7,org.joda.time.field.PreciseDurationField,hashCode,143,/JodaTime/src/main/java/org/joda/time/field/PreciseDurationField.java,int hash = (int) (millis ^ (millis >>> 32));
7,org.joda.time.field.PreciseDurationField,hashCode,144,/JodaTime/src/main/java/org/joda/time/field/PreciseDurationField.java,hash += getType().hashCode();
7,org.joda.time.field.PreciseDurationField,hashCode,145,/JodaTime/src/main/java/org/joda/time/field/PreciseDurationField.java,return hash;
7,org.joda.time.field.PreciseDurationField,isPrecise,54,/JodaTime/src/main/java/org/joda/time/field/PreciseDurationField.java,return true;
7,org.joda.time.field.RemainderDateTimeField,<init>,52,/JodaTime/src/main/java/org/joda/time/field/RemainderDateTimeField.java,"super(field, type);"
7,org.joda.time.field.RemainderDateTimeField,<init>,54,/JodaTime/src/main/java/org/joda/time/field/RemainderDateTimeField.java,if (divisor < 2) {
7,org.joda.time.field.RemainderDateTimeField,<init>,58,/JodaTime/src/main/java/org/joda/time/field/RemainderDateTimeField.java,DurationField rangeField = field.getDurationField();
7,org.joda.time.field.RemainderDateTimeField,<init>,59,/JodaTime/src/main/java/org/joda/time/field/RemainderDateTimeField.java,if (rangeField == null) {
7,org.joda.time.field.RemainderDateTimeField,<init>,62,/JodaTime/src/main/java/org/joda/time/field/RemainderDateTimeField.java,iRangeField = new ScaledDurationField(
7,org.joda.time.field.RemainderDateTimeField,<init>,66,/JodaTime/src/main/java/org/joda/time/field/RemainderDateTimeField.java,iDivisor = divisor;
7,org.joda.time.field.RemainderDateTimeField,<init>,67,/JodaTime/src/main/java/org/joda/time/field/RemainderDateTimeField.java,}
7,org.joda.time.field.RemainderDateTimeField,<init>,76,/JodaTime/src/main/java/org/joda/time/field/RemainderDateTimeField.java,"this(dividedField, dividedField.getType());"
7,org.joda.time.field.RemainderDateTimeField,<init>,77,/JodaTime/src/main/java/org/joda/time/field/RemainderDateTimeField.java,}
7,org.joda.time.field.RemainderDateTimeField,<init>,87,/JodaTime/src/main/java/org/joda/time/field/RemainderDateTimeField.java,"super(dividedField.getWrappedField(), type);"
7,org.joda.time.field.RemainderDateTimeField,<init>,88,/JodaTime/src/main/java/org/joda/time/field/RemainderDateTimeField.java,iDivisor = dividedField.iDivisor;
7,org.joda.time.field.RemainderDateTimeField,<init>,89,/JodaTime/src/main/java/org/joda/time/field/RemainderDateTimeField.java,iRangeField = dividedField.iDurationField;
7,org.joda.time.field.RemainderDateTimeField,<init>,90,/JodaTime/src/main/java/org/joda/time/field/RemainderDateTimeField.java,}
7,org.joda.time.field.RemainderDateTimeField,getMaximumValue,158,/JodaTime/src/main/java/org/joda/time/field/RemainderDateTimeField.java,return iDivisor - 1;
7,org.joda.time.field.RemainderDateTimeField,getMinimumValue,148,/JodaTime/src/main/java/org/joda/time/field/RemainderDateTimeField.java,return 0;
7,org.joda.time.field.RemainderDateTimeField,getRangeDurationField,139,/JodaTime/src/main/java/org/joda/time/field/RemainderDateTimeField.java,return iRangeField;
7,org.joda.time.field.ScaledDurationField,<init>,47,/JodaTime/src/main/java/org/joda/time/field/ScaledDurationField.java,"super(field, type);"
7,org.joda.time.field.ScaledDurationField,<init>,48,/JodaTime/src/main/java/org/joda/time/field/ScaledDurationField.java,if (scalar == 0 || scalar == 1) {
7,org.joda.time.field.ScaledDurationField,<init>,51,/JodaTime/src/main/java/org/joda/time/field/ScaledDurationField.java,iScalar = scalar;
7,org.joda.time.field.ScaledDurationField,<init>,52,/JodaTime/src/main/java/org/joda/time/field/ScaledDurationField.java,}
7,org.joda.time.field.ScaledDurationField,getUnitMillis,109,/JodaTime/src/main/java/org/joda/time/field/ScaledDurationField.java,return getWrappedField().getUnitMillis() * iScalar;
7,org.joda.time.field.ScaledDurationField,hashCode,147,/JodaTime/src/main/java/org/joda/time/field/ScaledDurationField.java,long scalar = iScalar;
7,org.joda.time.field.ScaledDurationField,hashCode,148,/JodaTime/src/main/java/org/joda/time/field/ScaledDurationField.java,int hash = (int) (scalar ^ (scalar >>> 32));
7,org.joda.time.field.ScaledDurationField,hashCode,149,/JodaTime/src/main/java/org/joda/time/field/ScaledDurationField.java,hash += getType().hashCode();
7,org.joda.time.field.ScaledDurationField,hashCode,150,/JodaTime/src/main/java/org/joda/time/field/ScaledDurationField.java,hash += getWrappedField().hashCode();
7,org.joda.time.field.ScaledDurationField,hashCode,151,/JodaTime/src/main/java/org/joda/time/field/ScaledDurationField.java,return hash;
7,org.joda.time.field.SkipDateTimeField,<init>,54,/JodaTime/src/main/java/org/joda/time/field/SkipDateTimeField.java,"this(chronology, field, 0);"
7,org.joda.time.field.SkipDateTimeField,<init>,55,/JodaTime/src/main/java/org/joda/time/field/SkipDateTimeField.java,}
7,org.joda.time.field.SkipDateTimeField,<init>,65,/JodaTime/src/main/java/org/joda/time/field/SkipDateTimeField.java,super(field);
7,org.joda.time.field.SkipDateTimeField,<init>,66,/JodaTime/src/main/java/org/joda/time/field/SkipDateTimeField.java,iChronology = chronology;
7,org.joda.time.field.SkipDateTimeField,<init>,67,/JodaTime/src/main/java/org/joda/time/field/SkipDateTimeField.java,int min = super.getMinimumValue();
7,org.joda.time.field.SkipDateTimeField,<init>,68,/JodaTime/src/main/java/org/joda/time/field/SkipDateTimeField.java,if (min < skip) {
7,org.joda.time.field.SkipDateTimeField,<init>,69,/JodaTime/src/main/java/org/joda/time/field/SkipDateTimeField.java,iMinValue = min - 1;
7,org.joda.time.field.SkipDateTimeField,<init>,75,/JodaTime/src/main/java/org/joda/time/field/SkipDateTimeField.java,iSkip = skip;
7,org.joda.time.field.SkipDateTimeField,<init>,76,/JodaTime/src/main/java/org/joda/time/field/SkipDateTimeField.java,}
7,org.joda.time.field.SkipDateTimeField,get,80,/JodaTime/src/main/java/org/joda/time/field/SkipDateTimeField.java,int value = super.get(millis);
7,org.joda.time.field.SkipDateTimeField,get,81,/JodaTime/src/main/java/org/joda/time/field/SkipDateTimeField.java,if (value <= iSkip) {
7,org.joda.time.field.SkipDateTimeField,get,82,/JodaTime/src/main/java/org/joda/time/field/SkipDateTimeField.java,value--;
7,org.joda.time.field.SkipDateTimeField,get,84,/JodaTime/src/main/java/org/joda/time/field/SkipDateTimeField.java,return value;
7,org.joda.time.field.SkipDateTimeField,getMinimumValue,100,/JodaTime/src/main/java/org/joda/time/field/SkipDateTimeField.java,return iMinValue;
7,org.joda.time.field.SkipUndoDateTimeField,<init>,53,/JodaTime/src/main/java/org/joda/time/field/SkipUndoDateTimeField.java,"this(chronology, field, 0);"
7,org.joda.time.field.SkipUndoDateTimeField,<init>,54,/JodaTime/src/main/java/org/joda/time/field/SkipUndoDateTimeField.java,}
7,org.joda.time.field.SkipUndoDateTimeField,<init>,64,/JodaTime/src/main/java/org/joda/time/field/SkipUndoDateTimeField.java,super(field);
7,org.joda.time.field.SkipUndoDateTimeField,<init>,65,/JodaTime/src/main/java/org/joda/time/field/SkipUndoDateTimeField.java,iChronology = chronology;
7,org.joda.time.field.SkipUndoDateTimeField,<init>,66,/JodaTime/src/main/java/org/joda/time/field/SkipUndoDateTimeField.java,int min = super.getMinimumValue();
7,org.joda.time.field.SkipUndoDateTimeField,<init>,67,/JodaTime/src/main/java/org/joda/time/field/SkipUndoDateTimeField.java,if (min < skip) {
7,org.joda.time.field.SkipUndoDateTimeField,<init>,68,/JodaTime/src/main/java/org/joda/time/field/SkipUndoDateTimeField.java,iMinValue = min + 1;
7,org.joda.time.field.SkipUndoDateTimeField,<init>,74,/JodaTime/src/main/java/org/joda/time/field/SkipUndoDateTimeField.java,iSkip = skip;
7,org.joda.time.field.SkipUndoDateTimeField,<init>,75,/JodaTime/src/main/java/org/joda/time/field/SkipUndoDateTimeField.java,}
7,org.joda.time.field.SkipUndoDateTimeField,get,79,/JodaTime/src/main/java/org/joda/time/field/SkipUndoDateTimeField.java,int value = super.get(millis);
7,org.joda.time.field.SkipUndoDateTimeField,get,80,/JodaTime/src/main/java/org/joda/time/field/SkipUndoDateTimeField.java,if (value < iSkip) {
7,org.joda.time.field.SkipUndoDateTimeField,get,83,/JodaTime/src/main/java/org/joda/time/field/SkipUndoDateTimeField.java,return value;
7,org.joda.time.field.SkipUndoDateTimeField,getMinimumValue,95,/JodaTime/src/main/java/org/joda/time/field/SkipUndoDateTimeField.java,return iMinValue;
7,org.joda.time.field.SkipUndoDateTimeField,set,87,/JodaTime/src/main/java/org/joda/time/field/SkipUndoDateTimeField.java,"FieldUtils.verifyValueBounds(this, value, iMinValue, getMaximumValue());"
7,org.joda.time.field.SkipUndoDateTimeField,set,88,/JodaTime/src/main/java/org/joda/time/field/SkipUndoDateTimeField.java,if (value <= iSkip) {
7,org.joda.time.field.SkipUndoDateTimeField,set,89,/JodaTime/src/main/java/org/joda/time/field/SkipUndoDateTimeField.java,value--;
7,org.joda.time.field.SkipUndoDateTimeField,set,91,/JodaTime/src/main/java/org/joda/time/field/SkipUndoDateTimeField.java,"return super.set(millis, value);"
7,org.joda.time.field.UnsupportedDurationField,<init>,70,/JodaTime/src/main/java/org/joda/time/field/UnsupportedDurationField.java,private UnsupportedDurationField(DurationFieldType type) {
7,org.joda.time.field.UnsupportedDurationField,<init>,71,/JodaTime/src/main/java/org/joda/time/field/UnsupportedDurationField.java,iType = type;
7,org.joda.time.field.UnsupportedDurationField,<init>,72,/JodaTime/src/main/java/org/joda/time/field/UnsupportedDurationField.java,}
7,org.joda.time.field.UnsupportedDurationField,getInstance,49,/JodaTime/src/main/java/org/joda/time/field/UnsupportedDurationField.java,if (cCache == null) {
7,org.joda.time.field.UnsupportedDurationField,getInstance,50,/JodaTime/src/main/java/org/joda/time/field/UnsupportedDurationField.java,"cCache = new HashMap<DurationFieldType, UnsupportedDurationField>(7);"
7,org.joda.time.field.UnsupportedDurationField,getInstance,51,/JodaTime/src/main/java/org/joda/time/field/UnsupportedDurationField.java,field = null;
7,org.joda.time.field.UnsupportedDurationField,getInstance,53,/JodaTime/src/main/java/org/joda/time/field/UnsupportedDurationField.java,field = cCache.get(type);
7,org.joda.time.field.UnsupportedDurationField,getInstance,55,/JodaTime/src/main/java/org/joda/time/field/UnsupportedDurationField.java,if (field == null) {
7,org.joda.time.field.UnsupportedDurationField,getInstance,56,/JodaTime/src/main/java/org/joda/time/field/UnsupportedDurationField.java,field = new UnsupportedDurationField(type);
7,org.joda.time.field.UnsupportedDurationField,getInstance,57,/JodaTime/src/main/java/org/joda/time/field/UnsupportedDurationField.java,"cCache.put(type, field);"
7,org.joda.time.field.UnsupportedDurationField,getInstance,59,/JodaTime/src/main/java/org/joda/time/field/UnsupportedDurationField.java,return field;
7,org.joda.time.field.UnsupportedDurationField,getUnitMillis,218,/JodaTime/src/main/java/org/joda/time/field/UnsupportedDurationField.java,return 0;
7,org.joda.time.field.UnsupportedDurationField,isSupported,92,/JodaTime/src/main/java/org/joda/time/field/UnsupportedDurationField.java,return false;
7,org.joda.time.field.ZeroIsMaxDateTimeField,<init>,45,/JodaTime/src/main/java/org/joda/time/field/ZeroIsMaxDateTimeField.java,"super(field, type);"
7,org.joda.time.field.ZeroIsMaxDateTimeField,<init>,46,/JodaTime/src/main/java/org/joda/time/field/ZeroIsMaxDateTimeField.java,if (field.getMinimumValue() != 0) {
7,org.joda.time.field.ZeroIsMaxDateTimeField,<init>,49,/JodaTime/src/main/java/org/joda/time/field/ZeroIsMaxDateTimeField.java,}
7,org.joda.time.field.ZeroIsMaxDateTimeField,getLeapDurationField,101,/JodaTime/src/main/java/org/joda/time/field/ZeroIsMaxDateTimeField.java,return getWrappedField().getLeapDurationField();
7,org.joda.time.format.DateTimeFormatter,<init>,107,/JodaTime/src/main/java/org/joda/time/format/DateTimeFormatter.java,super();
7,org.joda.time.format.DateTimeFormatter,<init>,108,/JodaTime/src/main/java/org/joda/time/format/DateTimeFormatter.java,iPrinter = printer;
7,org.joda.time.format.DateTimeFormatter,<init>,109,/JodaTime/src/main/java/org/joda/time/format/DateTimeFormatter.java,iParser = parser;
7,org.joda.time.format.DateTimeFormatter,<init>,110,/JodaTime/src/main/java/org/joda/time/format/DateTimeFormatter.java,iLocale = null;
7,org.joda.time.format.DateTimeFormatter,<init>,111,/JodaTime/src/main/java/org/joda/time/format/DateTimeFormatter.java,iOffsetParsed = false;
7,org.joda.time.format.DateTimeFormatter,<init>,112,/JodaTime/src/main/java/org/joda/time/format/DateTimeFormatter.java,iChrono = null;
7,org.joda.time.format.DateTimeFormatter,<init>,113,/JodaTime/src/main/java/org/joda/time/format/DateTimeFormatter.java,iZone = null;
7,org.joda.time.format.DateTimeFormatter,<init>,114,/JodaTime/src/main/java/org/joda/time/format/DateTimeFormatter.java,iPivotYear = null;
7,org.joda.time.format.DateTimeFormatter,<init>,115,/JodaTime/src/main/java/org/joda/time/format/DateTimeFormatter.java,iDefaultYear = 2000;
7,org.joda.time.format.DateTimeFormatter,<init>,116,/JodaTime/src/main/java/org/joda/time/format/DateTimeFormatter.java,}
7,org.joda.time.format.DateTimeFormatter,<init>,126,/JodaTime/src/main/java/org/joda/time/format/DateTimeFormatter.java,super();
7,org.joda.time.format.DateTimeFormatter,<init>,127,/JodaTime/src/main/java/org/joda/time/format/DateTimeFormatter.java,iPrinter = printer;
7,org.joda.time.format.DateTimeFormatter,<init>,128,/JodaTime/src/main/java/org/joda/time/format/DateTimeFormatter.java,iParser = parser;
7,org.joda.time.format.DateTimeFormatter,<init>,129,/JodaTime/src/main/java/org/joda/time/format/DateTimeFormatter.java,iLocale = locale;
7,org.joda.time.format.DateTimeFormatter,<init>,130,/JodaTime/src/main/java/org/joda/time/format/DateTimeFormatter.java,iOffsetParsed = offsetParsed;
7,org.joda.time.format.DateTimeFormatter,<init>,131,/JodaTime/src/main/java/org/joda/time/format/DateTimeFormatter.java,iChrono = chrono;
7,org.joda.time.format.DateTimeFormatter,<init>,132,/JodaTime/src/main/java/org/joda/time/format/DateTimeFormatter.java,iZone = zone;
7,org.joda.time.format.DateTimeFormatter,<init>,133,/JodaTime/src/main/java/org/joda/time/format/DateTimeFormatter.java,iPivotYear = pivotYear;
7,org.joda.time.format.DateTimeFormatter,<init>,134,/JodaTime/src/main/java/org/joda/time/format/DateTimeFormatter.java,iDefaultYear = defaultYear;
7,org.joda.time.format.DateTimeFormatter,<init>,135,/JodaTime/src/main/java/org/joda/time/format/DateTimeFormatter.java,}
7,org.joda.time.format.DateTimeFormatter,getParser,171,/JodaTime/src/main/java/org/joda/time/format/DateTimeFormatter.java,return iParser;
7,org.joda.time.format.DateTimeFormatter,getPrinter,153,/JodaTime/src/main/java/org/joda/time/format/DateTimeFormatter.java,return iPrinter;
7,org.joda.time.format.DateTimeFormatter,print,580,/JodaTime/src/main/java/org/joda/time/format/DateTimeFormatter.java,StringBuffer buf = new StringBuffer(requirePrinter().estimatePrintedLength());
7,org.joda.time.format.DateTimeFormatter,print,581,/JodaTime/src/main/java/org/joda/time/format/DateTimeFormatter.java,"printTo(buf, instant);"
7,org.joda.time.format.DateTimeFormatter,print,582,/JodaTime/src/main/java/org/joda/time/format/DateTimeFormatter.java,return buf.toString();
7,org.joda.time.format.DateTimeFormatter,printTo,616,/JodaTime/src/main/java/org/joda/time/format/DateTimeFormatter.java,DateTimePrinter printer = requirePrinter();
7,org.joda.time.format.DateTimeFormatter,printTo,617,/JodaTime/src/main/java/org/joda/time/format/DateTimeFormatter.java,chrono = selectChronology(chrono);
7,org.joda.time.format.DateTimeFormatter,printTo,620,/JodaTime/src/main/java/org/joda/time/format/DateTimeFormatter.java,DateTimeZone zone = chrono.getZone();
7,org.joda.time.format.DateTimeFormatter,printTo,621,/JodaTime/src/main/java/org/joda/time/format/DateTimeFormatter.java,int offset = zone.getOffset(instant);
7,org.joda.time.format.DateTimeFormatter,printTo,622,/JodaTime/src/main/java/org/joda/time/format/DateTimeFormatter.java,long adjustedInstant = instant + offset;
7,org.joda.time.format.DateTimeFormatter,printTo,623,/JodaTime/src/main/java/org/joda/time/format/DateTimeFormatter.java,if ((instant ^ adjustedInstant) < 0 && (instant ^ offset) >= 0) {
7,org.joda.time.format.DateTimeFormatter,printTo,629,/JodaTime/src/main/java/org/joda/time/format/DateTimeFormatter.java,"printer.printTo(buf, adjustedInstant, chrono.withUTC(), offset, zone, iLocale);"
7,org.joda.time.format.DateTimeFormatter,printTo,630,/JodaTime/src/main/java/org/joda/time/format/DateTimeFormatter.java,}
7,org.joda.time.format.DateTimeFormatter,printTo,457,/JodaTime/src/main/java/org/joda/time/format/DateTimeFormatter.java,long millis = DateTimeUtils.getInstantMillis(instant);
7,org.joda.time.format.DateTimeFormatter,printTo,458,/JodaTime/src/main/java/org/joda/time/format/DateTimeFormatter.java,Chronology chrono = DateTimeUtils.getInstantChronology(instant);
7,org.joda.time.format.DateTimeFormatter,printTo,459,/JodaTime/src/main/java/org/joda/time/format/DateTimeFormatter.java,"printTo(buf, millis, chrono);"
7,org.joda.time.format.DateTimeFormatter,printTo,460,/JodaTime/src/main/java/org/joda/time/format/DateTimeFormatter.java,}
7,org.joda.time.format.DateTimeFormatter,requirePrinter,655,/JodaTime/src/main/java/org/joda/time/format/DateTimeFormatter.java,DateTimePrinter printer = iPrinter;
7,org.joda.time.format.DateTimeFormatter,requirePrinter,656,/JodaTime/src/main/java/org/joda/time/format/DateTimeFormatter.java,if (printer == null) {
7,org.joda.time.format.DateTimeFormatter,requirePrinter,659,/JodaTime/src/main/java/org/joda/time/format/DateTimeFormatter.java,return printer;
7,org.joda.time.format.DateTimeFormatter,selectChronology,915,/JodaTime/src/main/java/org/joda/time/format/DateTimeFormatter.java,chrono = DateTimeUtils.getChronology(chrono);
7,org.joda.time.format.DateTimeFormatter,selectChronology,916,/JodaTime/src/main/java/org/joda/time/format/DateTimeFormatter.java,if (iChrono != null) {
7,org.joda.time.format.DateTimeFormatter,selectChronology,917,/JodaTime/src/main/java/org/joda/time/format/DateTimeFormatter.java,chrono = iChrono;
7,org.joda.time.format.DateTimeFormatter,selectChronology,919,/JodaTime/src/main/java/org/joda/time/format/DateTimeFormatter.java,if (iZone != null) {
7,org.joda.time.format.DateTimeFormatter,selectChronology,922,/JodaTime/src/main/java/org/joda/time/format/DateTimeFormatter.java,return chrono;
7,org.joda.time.format.DateTimeFormatter,withChronology,255,/JodaTime/src/main/java/org/joda/time/format/DateTimeFormatter.java,if (iChrono == chrono) {
7,org.joda.time.format.DateTimeFormatter,withChronology,256,/JodaTime/src/main/java/org/joda/time/format/DateTimeFormatter.java,return this;
7,org.joda.time.format.DateTimeFormatter,withChronology,258,/JodaTime/src/main/java/org/joda/time/format/DateTimeFormatter.java,"return new DateTimeFormatter(iPrinter, iParser, iLocale,"
7,org.joda.time.format.DateTimeFormatterBuilder,<init>,83,/JodaTime/src/main/java/org/joda/time/format/DateTimeFormatterBuilder.java,super();
7,org.joda.time.format.DateTimeFormatterBuilder,<init>,84,/JodaTime/src/main/java/org/joda/time/format/DateTimeFormatterBuilder.java,iElementPairs = new ArrayList<Object>();
7,org.joda.time.format.DateTimeFormatterBuilder,<init>,85,/JodaTime/src/main/java/org/joda/time/format/DateTimeFormatterBuilder.java,}
7,org.joda.time.format.DateTimeFormatterBuilder,append,209,/JodaTime/src/main/java/org/joda/time/format/DateTimeFormatterBuilder.java,if (formatter == null) {
7,org.joda.time.format.DateTimeFormatterBuilder,append,212,/JodaTime/src/main/java/org/joda/time/format/DateTimeFormatterBuilder.java,"return append0(formatter.getPrinter(), formatter.getParser());"
7,org.joda.time.format.DateTimeFormatterBuilder,append0,336,/JodaTime/src/main/java/org/joda/time/format/DateTimeFormatterBuilder.java,iFormatter = null;
7,org.joda.time.format.DateTimeFormatterBuilder,append0,338,/JodaTime/src/main/java/org/joda/time/format/DateTimeFormatterBuilder.java,iElementPairs.add(element);
7,org.joda.time.format.DateTimeFormatterBuilder,append0,339,/JodaTime/src/main/java/org/joda/time/format/DateTimeFormatterBuilder.java,iElementPairs.add(element);
7,org.joda.time.format.DateTimeFormatterBuilder,append0,340,/JodaTime/src/main/java/org/joda/time/format/DateTimeFormatterBuilder.java,return this;
7,org.joda.time.format.DateTimeFormatterBuilder,append0,345,/JodaTime/src/main/java/org/joda/time/format/DateTimeFormatterBuilder.java,iFormatter = null;
7,org.joda.time.format.DateTimeFormatterBuilder,append0,346,/JodaTime/src/main/java/org/joda/time/format/DateTimeFormatterBuilder.java,iElementPairs.add(printer);
7,org.joda.time.format.DateTimeFormatterBuilder,append0,347,/JodaTime/src/main/java/org/joda/time/format/DateTimeFormatterBuilder.java,iElementPairs.add(parser);
7,org.joda.time.format.DateTimeFormatterBuilder,append0,348,/JodaTime/src/main/java/org/joda/time/format/DateTimeFormatterBuilder.java,return this;
7,org.joda.time.format.DateTimeFormatterBuilder,appendDayOfMonth,737,/JodaTime/src/main/java/org/joda/time/format/DateTimeFormatterBuilder.java,"return appendDecimal(DateTimeFieldType.dayOfMonth(), minDigits, 2);"
7,org.joda.time.format.DateTimeFormatterBuilder,appendDayOfWeekShortText,938,/JodaTime/src/main/java/org/joda/time/format/DateTimeFormatterBuilder.java,return appendShortText(DateTimeFieldType.dayOfWeek());
7,org.joda.time.format.DateTimeFormatterBuilder,appendDecimal,396,/JodaTime/src/main/java/org/joda/time/format/DateTimeFormatterBuilder.java,if (fieldType == null) {
7,org.joda.time.format.DateTimeFormatterBuilder,appendDecimal,399,/JodaTime/src/main/java/org/joda/time/format/DateTimeFormatterBuilder.java,if (maxDigits < minDigits) {
7,org.joda.time.format.DateTimeFormatterBuilder,appendDecimal,402,/JodaTime/src/main/java/org/joda/time/format/DateTimeFormatterBuilder.java,if (minDigits < 0 || maxDigits <= 0) {
7,org.joda.time.format.DateTimeFormatterBuilder,appendDecimal,405,/JodaTime/src/main/java/org/joda/time/format/DateTimeFormatterBuilder.java,if (minDigits <= 1) {
7,org.joda.time.format.DateTimeFormatterBuilder,appendDecimal,408,/JodaTime/src/main/java/org/joda/time/format/DateTimeFormatterBuilder.java,"return append0(new PaddedNumber(fieldType, maxDigits, false, minDigits));"
7,org.joda.time.format.DateTimeFormatterBuilder,appendHourOfDay,687,/JodaTime/src/main/java/org/joda/time/format/DateTimeFormatterBuilder.java,"return appendDecimal(DateTimeFieldType.hourOfDay(), minDigits, 2);"
7,org.joda.time.format.DateTimeFormatterBuilder,appendLiteral,359,/JodaTime/src/main/java/org/joda/time/format/DateTimeFormatterBuilder.java,return append0(new CharacterLiteral(c));
7,org.joda.time.format.DateTimeFormatterBuilder,appendMinuteOfHour,667,/JodaTime/src/main/java/org/joda/time/format/DateTimeFormatterBuilder.java,"return appendDecimal(DateTimeFieldType.minuteOfHour(), minDigits, 2);"
7,org.joda.time.format.DateTimeFormatterBuilder,appendMonthOfYear,779,/JodaTime/src/main/java/org/joda/time/format/DateTimeFormatterBuilder.java,"return appendDecimal(DateTimeFieldType.monthOfYear(), minDigits, 2);"
7,org.joda.time.format.DateTimeFormatterBuilder,appendSecondOfMinute,647,/JodaTime/src/main/java/org/joda/time/format/DateTimeFormatterBuilder.java,"return appendDecimal(DateTimeFieldType.secondOfMinute(), minDigits, 2);"
7,org.joda.time.format.DateTimeFormatterBuilder,appendShortText,511,/JodaTime/src/main/java/org/joda/time/format/DateTimeFormatterBuilder.java,if (fieldType == null) {
7,org.joda.time.format.DateTimeFormatterBuilder,appendShortText,514,/JodaTime/src/main/java/org/joda/time/format/DateTimeFormatterBuilder.java,"return append0(new TextField(fieldType, true));"
7,org.joda.time.format.DateTimeFormatterBuilder,appendSignedDecimal,448,/JodaTime/src/main/java/org/joda/time/format/DateTimeFormatterBuilder.java,if (fieldType == null) {
7,org.joda.time.format.DateTimeFormatterBuilder,appendSignedDecimal,451,/JodaTime/src/main/java/org/joda/time/format/DateTimeFormatterBuilder.java,if (maxDigits < minDigits) {
7,org.joda.time.format.DateTimeFormatterBuilder,appendSignedDecimal,454,/JodaTime/src/main/java/org/joda/time/format/DateTimeFormatterBuilder.java,if (minDigits < 0 || maxDigits <= 0) {
7,org.joda.time.format.DateTimeFormatterBuilder,appendSignedDecimal,457,/JodaTime/src/main/java/org/joda/time/format/DateTimeFormatterBuilder.java,if (minDigits <= 1) {
7,org.joda.time.format.DateTimeFormatterBuilder,appendSignedDecimal,460,/JodaTime/src/main/java/org/joda/time/format/DateTimeFormatterBuilder.java,"return append0(new PaddedNumber(fieldType, maxDigits, true, minDigits));"
7,org.joda.time.format.DateTimeFormatterBuilder,appendTimeZoneOffset,1024,/JodaTime/src/main/java/org/joda/time/format/DateTimeFormatterBuilder.java,return append0(new TimeZoneOffset
7,org.joda.time.format.DateTimeFormatterBuilder,appendYear,791,/JodaTime/src/main/java/org/joda/time/format/DateTimeFormatterBuilder.java,"return appendSignedDecimal(DateTimeFieldType.year(), minDigits, maxDigits);"
7,org.joda.time.format.DateTimeFormatterBuilder,getFormatter,1071,/JodaTime/src/main/java/org/joda/time/format/DateTimeFormatterBuilder.java,Object f = iFormatter;
7,org.joda.time.format.DateTimeFormatterBuilder,getFormatter,1073,/JodaTime/src/main/java/org/joda/time/format/DateTimeFormatterBuilder.java,if (f == null) {
7,org.joda.time.format.DateTimeFormatterBuilder,getFormatter,1074,/JodaTime/src/main/java/org/joda/time/format/DateTimeFormatterBuilder.java,if (iElementPairs.size() == 2) {
7,org.joda.time.format.DateTimeFormatterBuilder,getFormatter,1075,/JodaTime/src/main/java/org/joda/time/format/DateTimeFormatterBuilder.java,Object printer = iElementPairs.get(0);
7,org.joda.time.format.DateTimeFormatterBuilder,getFormatter,1076,/JodaTime/src/main/java/org/joda/time/format/DateTimeFormatterBuilder.java,Object parser = iElementPairs.get(1);
7,org.joda.time.format.DateTimeFormatterBuilder,getFormatter,1078,/JodaTime/src/main/java/org/joda/time/format/DateTimeFormatterBuilder.java,if (printer != null) {
7,org.joda.time.format.DateTimeFormatterBuilder,getFormatter,1079,/JodaTime/src/main/java/org/joda/time/format/DateTimeFormatterBuilder.java,if (printer == parser || parser == null) {
7,org.joda.time.format.DateTimeFormatterBuilder,getFormatter,1080,/JodaTime/src/main/java/org/joda/time/format/DateTimeFormatterBuilder.java,f = printer;
7,org.joda.time.format.DateTimeFormatterBuilder,getFormatter,1087,/JodaTime/src/main/java/org/joda/time/format/DateTimeFormatterBuilder.java,if (f == null) {
7,org.joda.time.format.DateTimeFormatterBuilder,getFormatter,1088,/JodaTime/src/main/java/org/joda/time/format/DateTimeFormatterBuilder.java,f = new Composite(iElementPairs);
7,org.joda.time.format.DateTimeFormatterBuilder,getFormatter,1091,/JodaTime/src/main/java/org/joda/time/format/DateTimeFormatterBuilder.java,iFormatter = f;
7,org.joda.time.format.DateTimeFormatterBuilder,getFormatter,1094,/JodaTime/src/main/java/org/joda/time/format/DateTimeFormatterBuilder.java,return f;
7,org.joda.time.format.DateTimeFormatterBuilder,isParser,1108,/JodaTime/src/main/java/org/joda/time/format/DateTimeFormatterBuilder.java,if (f instanceof DateTimeParser) {
7,org.joda.time.format.DateTimeFormatterBuilder,isParser,1109,/JodaTime/src/main/java/org/joda/time/format/DateTimeFormatterBuilder.java,if (f instanceof Composite) {
7,org.joda.time.format.DateTimeFormatterBuilder,isParser,1110,/JodaTime/src/main/java/org/joda/time/format/DateTimeFormatterBuilder.java,return ((Composite)f).isParser();
7,org.joda.time.format.DateTimeFormatterBuilder,isParser,1112,/JodaTime/src/main/java/org/joda/time/format/DateTimeFormatterBuilder.java,return true;
7,org.joda.time.format.DateTimeFormatterBuilder,isPrinter,1098,/JodaTime/src/main/java/org/joda/time/format/DateTimeFormatterBuilder.java,if (f instanceof DateTimePrinter) {
7,org.joda.time.format.DateTimeFormatterBuilder,isPrinter,1099,/JodaTime/src/main/java/org/joda/time/format/DateTimeFormatterBuilder.java,if (f instanceof Composite) {
7,org.joda.time.format.DateTimeFormatterBuilder,isPrinter,1100,/JodaTime/src/main/java/org/joda/time/format/DateTimeFormatterBuilder.java,return ((Composite)f).isPrinter();
7,org.joda.time.format.DateTimeFormatterBuilder,isPrinter,1102,/JodaTime/src/main/java/org/joda/time/format/DateTimeFormatterBuilder.java,return true;
7,org.joda.time.format.DateTimeFormatterBuilder,toFormatter,104,/JodaTime/src/main/java/org/joda/time/format/DateTimeFormatterBuilder.java,Object f = getFormatter();
7,org.joda.time.format.DateTimeFormatterBuilder,toFormatter,105,/JodaTime/src/main/java/org/joda/time/format/DateTimeFormatterBuilder.java,DateTimePrinter printer = null;
7,org.joda.time.format.DateTimeFormatterBuilder,toFormatter,106,/JodaTime/src/main/java/org/joda/time/format/DateTimeFormatterBuilder.java,if (isPrinter(f)) {
7,org.joda.time.format.DateTimeFormatterBuilder,toFormatter,107,/JodaTime/src/main/java/org/joda/time/format/DateTimeFormatterBuilder.java,printer = (DateTimePrinter) f;
7,org.joda.time.format.DateTimeFormatterBuilder,toFormatter,109,/JodaTime/src/main/java/org/joda/time/format/DateTimeFormatterBuilder.java,DateTimeParser parser = null;
7,org.joda.time.format.DateTimeFormatterBuilder,toFormatter,110,/JodaTime/src/main/java/org/joda/time/format/DateTimeFormatterBuilder.java,if (isParser(f)) {
7,org.joda.time.format.DateTimeFormatterBuilder,toFormatter,111,/JodaTime/src/main/java/org/joda/time/format/DateTimeFormatterBuilder.java,parser = (DateTimeParser) f;
7,org.joda.time.format.DateTimeFormatterBuilder,toFormatter,113,/JodaTime/src/main/java/org/joda/time/format/DateTimeFormatterBuilder.java,if (printer != null || parser != null) {
7,org.joda.time.format.DateTimeFormatterBuilder,toFormatter,114,/JodaTime/src/main/java/org/joda/time/format/DateTimeFormatterBuilder.java,"return new DateTimeFormatter(printer, parser);"
7,org.joda.time.format.DateTimeFormatterBuilder$CharacterLiteral,<init>,1140,/JodaTime/src/main/java/org/joda/time/format/DateTimeFormatterBuilder.java,super();
7,org.joda.time.format.DateTimeFormatterBuilder$CharacterLiteral,<init>,1141,/JodaTime/src/main/java/org/joda/time/format/DateTimeFormatterBuilder.java,iValue = value;
7,org.joda.time.format.DateTimeFormatterBuilder$CharacterLiteral,<init>,1142,/JodaTime/src/main/java/org/joda/time/format/DateTimeFormatterBuilder.java,}
7,org.joda.time.format.DateTimeFormatterBuilder$CharacterLiteral,estimateParsedLength,1169,/JodaTime/src/main/java/org/joda/time/format/DateTimeFormatterBuilder.java,return 1;
7,org.joda.time.format.DateTimeFormatterBuilder$CharacterLiteral,estimatePrintedLength,1145,/JodaTime/src/main/java/org/joda/time/format/DateTimeFormatterBuilder.java,return 1;
7,org.joda.time.format.DateTimeFormatterBuilder$CharacterLiteral,printTo,1151,/JodaTime/src/main/java/org/joda/time/format/DateTimeFormatterBuilder.java,buf.append(iValue);
7,org.joda.time.format.DateTimeFormatterBuilder$CharacterLiteral,printTo,1152,/JodaTime/src/main/java/org/joda/time/format/DateTimeFormatterBuilder.java,}
7,org.joda.time.format.DateTimeFormatterBuilder$Composite,<init>,2465,/JodaTime/src/main/java/org/joda/time/format/DateTimeFormatterBuilder.java,super();
7,org.joda.time.format.DateTimeFormatterBuilder$Composite,<init>,2467,/JodaTime/src/main/java/org/joda/time/format/DateTimeFormatterBuilder.java,List<Object> printerList = new ArrayList<Object>();
7,org.joda.time.format.DateTimeFormatterBuilder$Composite,<init>,2468,/JodaTime/src/main/java/org/joda/time/format/DateTimeFormatterBuilder.java,List<Object> parserList = new ArrayList<Object>();
7,org.joda.time.format.DateTimeFormatterBuilder$Composite,<init>,2470,/JodaTime/src/main/java/org/joda/time/format/DateTimeFormatterBuilder.java,"decompose(elementPairs, printerList, parserList);"
7,org.joda.time.format.DateTimeFormatterBuilder$Composite,<init>,2472,/JodaTime/src/main/java/org/joda/time/format/DateTimeFormatterBuilder.java,if (printerList.size() <= 0) {
7,org.joda.time.format.DateTimeFormatterBuilder$Composite,<init>,2476,/JodaTime/src/main/java/org/joda/time/format/DateTimeFormatterBuilder.java,int size = printerList.size();
7,org.joda.time.format.DateTimeFormatterBuilder$Composite,<init>,2477,/JodaTime/src/main/java/org/joda/time/format/DateTimeFormatterBuilder.java,iPrinters = new DateTimePrinter[size];
7,org.joda.time.format.DateTimeFormatterBuilder$Composite,<init>,2478,/JodaTime/src/main/java/org/joda/time/format/DateTimeFormatterBuilder.java,int printEst = 0;
7,org.joda.time.format.DateTimeFormatterBuilder$Composite,<init>,2479,/JodaTime/src/main/java/org/joda/time/format/DateTimeFormatterBuilder.java,for (int i=0; i<size; i++) {
7,org.joda.time.format.DateTimeFormatterBuilder$Composite,<init>,2480,/JodaTime/src/main/java/org/joda/time/format/DateTimeFormatterBuilder.java,DateTimePrinter printer = (DateTimePrinter) printerList.get(i);
7,org.joda.time.format.DateTimeFormatterBuilder$Composite,<init>,2481,/JodaTime/src/main/java/org/joda/time/format/DateTimeFormatterBuilder.java,printEst += printer.estimatePrintedLength();
7,org.joda.time.format.DateTimeFormatterBuilder$Composite,<init>,2482,/JodaTime/src/main/java/org/joda/time/format/DateTimeFormatterBuilder.java,iPrinters[i] = printer;
7,org.joda.time.format.DateTimeFormatterBuilder$Composite,<init>,2484,/JodaTime/src/main/java/org/joda/time/format/DateTimeFormatterBuilder.java,iPrintedLengthEstimate = printEst;
7,org.joda.time.format.DateTimeFormatterBuilder$Composite,<init>,2487,/JodaTime/src/main/java/org/joda/time/format/DateTimeFormatterBuilder.java,if (parserList.size() <= 0) {
7,org.joda.time.format.DateTimeFormatterBuilder$Composite,<init>,2491,/JodaTime/src/main/java/org/joda/time/format/DateTimeFormatterBuilder.java,int size = parserList.size();
7,org.joda.time.format.DateTimeFormatterBuilder$Composite,<init>,2492,/JodaTime/src/main/java/org/joda/time/format/DateTimeFormatterBuilder.java,iParsers = new DateTimeParser[size];
7,org.joda.time.format.DateTimeFormatterBuilder$Composite,<init>,2493,/JodaTime/src/main/java/org/joda/time/format/DateTimeFormatterBuilder.java,int parseEst = 0;
7,org.joda.time.format.DateTimeFormatterBuilder$Composite,<init>,2494,/JodaTime/src/main/java/org/joda/time/format/DateTimeFormatterBuilder.java,for (int i=0; i<size; i++) {
7,org.joda.time.format.DateTimeFormatterBuilder$Composite,<init>,2495,/JodaTime/src/main/java/org/joda/time/format/DateTimeFormatterBuilder.java,DateTimeParser parser = (DateTimeParser) parserList.get(i);
7,org.joda.time.format.DateTimeFormatterBuilder$Composite,<init>,2496,/JodaTime/src/main/java/org/joda/time/format/DateTimeFormatterBuilder.java,parseEst += parser.estimateParsedLength();
7,org.joda.time.format.DateTimeFormatterBuilder$Composite,<init>,2497,/JodaTime/src/main/java/org/joda/time/format/DateTimeFormatterBuilder.java,iParsers[i] = parser;
7,org.joda.time.format.DateTimeFormatterBuilder$Composite,<init>,2499,/JodaTime/src/main/java/org/joda/time/format/DateTimeFormatterBuilder.java,iParsedLengthEstimate = parseEst;
7,org.joda.time.format.DateTimeFormatterBuilder$Composite,<init>,2501,/JodaTime/src/main/java/org/joda/time/format/DateTimeFormatterBuilder.java,}
7,org.joda.time.format.DateTimeFormatterBuilder$Composite,addArrayToList,2632,/JodaTime/src/main/java/org/joda/time/format/DateTimeFormatterBuilder.java,if (array != null) {
7,org.joda.time.format.DateTimeFormatterBuilder$Composite,addArrayToList,2633,/JodaTime/src/main/java/org/joda/time/format/DateTimeFormatterBuilder.java,for (int i=0; i<array.length; i++) {
7,org.joda.time.format.DateTimeFormatterBuilder$Composite,addArrayToList,2634,/JodaTime/src/main/java/org/joda/time/format/DateTimeFormatterBuilder.java,list.add(array[i]);
7,org.joda.time.format.DateTimeFormatterBuilder$Composite,addArrayToList,2637,/JodaTime/src/main/java/org/joda/time/format/DateTimeFormatterBuilder.java,}
7,org.joda.time.format.DateTimeFormatterBuilder$Composite,decompose,2609,/JodaTime/src/main/java/org/joda/time/format/DateTimeFormatterBuilder.java,int size = elementPairs.size();
7,org.joda.time.format.DateTimeFormatterBuilder$Composite,decompose,2610,/JodaTime/src/main/java/org/joda/time/format/DateTimeFormatterBuilder.java,for (int i=0; i<size; i+=2) {
7,org.joda.time.format.DateTimeFormatterBuilder$Composite,decompose,2611,/JodaTime/src/main/java/org/joda/time/format/DateTimeFormatterBuilder.java,Object element = elementPairs.get(i);
7,org.joda.time.format.DateTimeFormatterBuilder$Composite,decompose,2612,/JodaTime/src/main/java/org/joda/time/format/DateTimeFormatterBuilder.java,if (element instanceof DateTimePrinter) {
7,org.joda.time.format.DateTimeFormatterBuilder$Composite,decompose,2613,/JodaTime/src/main/java/org/joda/time/format/DateTimeFormatterBuilder.java,if (element instanceof Composite) {
7,org.joda.time.format.DateTimeFormatterBuilder$Composite,decompose,2614,/JodaTime/src/main/java/org/joda/time/format/DateTimeFormatterBuilder.java,"addArrayToList(printerList, ((Composite)element).iPrinters);"
7,org.joda.time.format.DateTimeFormatterBuilder$Composite,decompose,2616,/JodaTime/src/main/java/org/joda/time/format/DateTimeFormatterBuilder.java,printerList.add(element);
7,org.joda.time.format.DateTimeFormatterBuilder$Composite,decompose,2620,/JodaTime/src/main/java/org/joda/time/format/DateTimeFormatterBuilder.java,element = elementPairs.get(i + 1);
7,org.joda.time.format.DateTimeFormatterBuilder$Composite,decompose,2621,/JodaTime/src/main/java/org/joda/time/format/DateTimeFormatterBuilder.java,if (element instanceof DateTimeParser) {
7,org.joda.time.format.DateTimeFormatterBuilder$Composite,decompose,2622,/JodaTime/src/main/java/org/joda/time/format/DateTimeFormatterBuilder.java,if (element instanceof Composite) {
7,org.joda.time.format.DateTimeFormatterBuilder$Composite,decompose,2623,/JodaTime/src/main/java/org/joda/time/format/DateTimeFormatterBuilder.java,"addArrayToList(parserList, ((Composite)element).iParsers);"
7,org.joda.time.format.DateTimeFormatterBuilder$Composite,decompose,2625,/JodaTime/src/main/java/org/joda/time/format/DateTimeFormatterBuilder.java,parserList.add(element);
7,org.joda.time.format.DateTimeFormatterBuilder$Composite,decompose,2629,/JodaTime/src/main/java/org/joda/time/format/DateTimeFormatterBuilder.java,}
7,org.joda.time.format.DateTimeFormatterBuilder$Composite,estimatePrintedLength,2504,/JodaTime/src/main/java/org/joda/time/format/DateTimeFormatterBuilder.java,return iPrintedLengthEstimate;
7,org.joda.time.format.DateTimeFormatterBuilder$Composite,isParser,2601,/JodaTime/src/main/java/org/joda/time/format/DateTimeFormatterBuilder.java,return iParsers != null;
7,org.joda.time.format.DateTimeFormatterBuilder$Composite,isPrinter,2597,/JodaTime/src/main/java/org/joda/time/format/DateTimeFormatterBuilder.java,return iPrinters != null;
7,org.joda.time.format.DateTimeFormatterBuilder$Composite,printTo,2510,/JodaTime/src/main/java/org/joda/time/format/DateTimeFormatterBuilder.java,DateTimePrinter[] elements = iPrinters;
7,org.joda.time.format.DateTimeFormatterBuilder$Composite,printTo,2511,/JodaTime/src/main/java/org/joda/time/format/DateTimeFormatterBuilder.java,if (elements == null) {
7,org.joda.time.format.DateTimeFormatterBuilder$Composite,printTo,2515,/JodaTime/src/main/java/org/joda/time/format/DateTimeFormatterBuilder.java,if (locale == null) {
7,org.joda.time.format.DateTimeFormatterBuilder$Composite,printTo,2517,/JodaTime/src/main/java/org/joda/time/format/DateTimeFormatterBuilder.java,locale = Locale.getDefault();
7,org.joda.time.format.DateTimeFormatterBuilder$Composite,printTo,2520,/JodaTime/src/main/java/org/joda/time/format/DateTimeFormatterBuilder.java,int len = elements.length;
7,org.joda.time.format.DateTimeFormatterBuilder$Composite,printTo,2521,/JodaTime/src/main/java/org/joda/time/format/DateTimeFormatterBuilder.java,for (int i = 0; i < len; i++) {
7,org.joda.time.format.DateTimeFormatterBuilder$Composite,printTo,2522,/JodaTime/src/main/java/org/joda/time/format/DateTimeFormatterBuilder.java,"elements[i].printTo(buf, instant, chrono, displayOffset, displayZone, locale);"
7,org.joda.time.format.DateTimeFormatterBuilder$Composite,printTo,2524,/JodaTime/src/main/java/org/joda/time/format/DateTimeFormatterBuilder.java,}
7,org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter,<init>,1252,/JodaTime/src/main/java/org/joda/time/format/DateTimeFormatterBuilder.java,super();
7,org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter,<init>,1253,/JodaTime/src/main/java/org/joda/time/format/DateTimeFormatterBuilder.java,iFieldType = fieldType;
7,org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter,<init>,1254,/JodaTime/src/main/java/org/joda/time/format/DateTimeFormatterBuilder.java,iMaxParsedDigits = maxParsedDigits;
7,org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter,<init>,1255,/JodaTime/src/main/java/org/joda/time/format/DateTimeFormatterBuilder.java,iSigned = signed;
7,org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter,<init>,1256,/JodaTime/src/main/java/org/joda/time/format/DateTimeFormatterBuilder.java,}
7,org.joda.time.format.DateTimeFormatterBuilder$NumberFormatter,estimateParsedLength,1259,/JodaTime/src/main/java/org/joda/time/format/DateTimeFormatterBuilder.java,return iMaxParsedDigits;
7,org.joda.time.format.DateTimeFormatterBuilder$PaddedNumber,<init>,1396,/JodaTime/src/main/java/org/joda/time/format/DateTimeFormatterBuilder.java,"super(fieldType, maxParsedDigits, signed);"
7,org.joda.time.format.DateTimeFormatterBuilder$PaddedNumber,<init>,1397,/JodaTime/src/main/java/org/joda/time/format/DateTimeFormatterBuilder.java,iMinPrintedDigits = minPrintedDigits;
7,org.joda.time.format.DateTimeFormatterBuilder$PaddedNumber,<init>,1398,/JodaTime/src/main/java/org/joda/time/format/DateTimeFormatterBuilder.java,}
7,org.joda.time.format.DateTimeFormatterBuilder$PaddedNumber,estimatePrintedLength,1401,/JodaTime/src/main/java/org/joda/time/format/DateTimeFormatterBuilder.java,return iMaxParsedDigits;
7,org.joda.time.format.DateTimeFormatterBuilder$PaddedNumber,printTo,1408,/JodaTime/src/main/java/org/joda/time/format/DateTimeFormatterBuilder.java,DateTimeField field = iFieldType.getField(chrono);
7,org.joda.time.format.DateTimeFormatterBuilder$PaddedNumber,printTo,1409,/JodaTime/src/main/java/org/joda/time/format/DateTimeFormatterBuilder.java,"FormatUtils.appendPaddedInteger(buf, field.get(instant), iMinPrintedDigits);"
7,org.joda.time.format.DateTimeFormatterBuilder$PaddedNumber,printTo,1412,/JodaTime/src/main/java/org/joda/time/format/DateTimeFormatterBuilder.java,}
7,org.joda.time.format.DateTimeFormatterBuilder$PaddedNumber,printTo,1413,/JodaTime/src/main/java/org/joda/time/format/DateTimeFormatterBuilder.java,}
7,org.joda.time.format.DateTimeFormatterBuilder$TextField,<clinit>,1681,/JodaTime/src/main/java/org/joda/time/format/DateTimeFormatterBuilder.java,"private static Map<Locale, Map<DateTimeFieldType, Object[]>> cParseCache ="
7,org.joda.time.format.DateTimeFormatterBuilder$TextField,<init>,1687,/JodaTime/src/main/java/org/joda/time/format/DateTimeFormatterBuilder.java,super();
7,org.joda.time.format.DateTimeFormatterBuilder$TextField,<init>,1688,/JodaTime/src/main/java/org/joda/time/format/DateTimeFormatterBuilder.java,iFieldType = fieldType;
7,org.joda.time.format.DateTimeFormatterBuilder$TextField,<init>,1689,/JodaTime/src/main/java/org/joda/time/format/DateTimeFormatterBuilder.java,iShort = isShort;
7,org.joda.time.format.DateTimeFormatterBuilder$TextField,<init>,1690,/JodaTime/src/main/java/org/joda/time/format/DateTimeFormatterBuilder.java,}
7,org.joda.time.format.DateTimeFormatterBuilder$TextField,estimateParsedLength,1755,/JodaTime/src/main/java/org/joda/time/format/DateTimeFormatterBuilder.java,return estimatePrintedLength();
7,org.joda.time.format.DateTimeFormatterBuilder$TextField,estimatePrintedLength,1693,/JodaTime/src/main/java/org/joda/time/format/DateTimeFormatterBuilder.java,return iShort ? 6 : 20;
7,org.joda.time.format.DateTimeFormatterBuilder$TextField,print,1733,/JodaTime/src/main/java/org/joda/time/format/DateTimeFormatterBuilder.java,DateTimeField field = iFieldType.getField(chrono);
7,org.joda.time.format.DateTimeFormatterBuilder$TextField,print,1734,/JodaTime/src/main/java/org/joda/time/format/DateTimeFormatterBuilder.java,if (iShort) {
7,org.joda.time.format.DateTimeFormatterBuilder$TextField,print,1735,/JodaTime/src/main/java/org/joda/time/format/DateTimeFormatterBuilder.java,"return field.getAsShortText(instant, locale);"
7,org.joda.time.format.DateTimeFormatterBuilder$TextField,printTo,1700,/JodaTime/src/main/java/org/joda/time/format/DateTimeFormatterBuilder.java,"buf.append(print(instant, chrono, locale));"
7,org.joda.time.format.DateTimeFormatterBuilder$TextField,printTo,1703,/JodaTime/src/main/java/org/joda/time/format/DateTimeFormatterBuilder.java,}
7,org.joda.time.format.DateTimeFormatterBuilder$TextField,printTo,1704,/JodaTime/src/main/java/org/joda/time/format/DateTimeFormatterBuilder.java,}
7,org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset,<init>,2054,/JodaTime/src/main/java/org/joda/time/format/DateTimeFormatterBuilder.java,super();
7,org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset,<init>,2055,/JodaTime/src/main/java/org/joda/time/format/DateTimeFormatterBuilder.java,iZeroOffsetPrintText = zeroOffsetPrintText;
7,org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset,<init>,2056,/JodaTime/src/main/java/org/joda/time/format/DateTimeFormatterBuilder.java,iZeroOffsetParseText = zeroOffsetParseText;
7,org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset,<init>,2057,/JodaTime/src/main/java/org/joda/time/format/DateTimeFormatterBuilder.java,iShowSeparators = showSeparators;
7,org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset,<init>,2058,/JodaTime/src/main/java/org/joda/time/format/DateTimeFormatterBuilder.java,if (minFields <= 0 || maxFields < minFields) {
7,org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset,<init>,2061,/JodaTime/src/main/java/org/joda/time/format/DateTimeFormatterBuilder.java,if (minFields > 4) {
7,org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset,<init>,2065,/JodaTime/src/main/java/org/joda/time/format/DateTimeFormatterBuilder.java,iMinFields = minFields;
7,org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset,<init>,2066,/JodaTime/src/main/java/org/joda/time/format/DateTimeFormatterBuilder.java,iMaxFields = maxFields;
7,org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset,<init>,2067,/JodaTime/src/main/java/org/joda/time/format/DateTimeFormatterBuilder.java,}
7,org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset,estimateParsedLength,2207,/JodaTime/src/main/java/org/joda/time/format/DateTimeFormatterBuilder.java,return estimatePrintedLength();
7,org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset,estimatePrintedLength,2070,/JodaTime/src/main/java/org/joda/time/format/DateTimeFormatterBuilder.java,int est = 1 + iMinFields << 1;
7,org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset,estimatePrintedLength,2071,/JodaTime/src/main/java/org/joda/time/format/DateTimeFormatterBuilder.java,if (iShowSeparators) {
7,org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset,estimatePrintedLength,2072,/JodaTime/src/main/java/org/joda/time/format/DateTimeFormatterBuilder.java,est += iMinFields - 1;
7,org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset,estimatePrintedLength,2074,/JodaTime/src/main/java/org/joda/time/format/DateTimeFormatterBuilder.java,if (iZeroOffsetPrintText != null && iZeroOffsetPrintText.length() > est) {
7,org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset,estimatePrintedLength,2077,/JodaTime/src/main/java/org/joda/time/format/DateTimeFormatterBuilder.java,return est;
7,org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset,printTo,2083,/JodaTime/src/main/java/org/joda/time/format/DateTimeFormatterBuilder.java,if (displayZone == null) {
7,org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset,printTo,2086,/JodaTime/src/main/java/org/joda/time/format/DateTimeFormatterBuilder.java,if (displayOffset == 0 && iZeroOffsetPrintText != null) {
7,org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset,printTo,2087,/JodaTime/src/main/java/org/joda/time/format/DateTimeFormatterBuilder.java,buf.append(iZeroOffsetPrintText);
7,org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset,printTo,2088,/JodaTime/src/main/java/org/joda/time/format/DateTimeFormatterBuilder.java,return;
7,org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset,printTo,2090,/JodaTime/src/main/java/org/joda/time/format/DateTimeFormatterBuilder.java,if (displayOffset >= 0) {
7,org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset,printTo,2091,/JodaTime/src/main/java/org/joda/time/format/DateTimeFormatterBuilder.java,buf.append('+');
7,org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset,printTo,2097,/JodaTime/src/main/java/org/joda/time/format/DateTimeFormatterBuilder.java,int hours = displayOffset / DateTimeConstants.MILLIS_PER_HOUR;
7,org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset,printTo,2098,/JodaTime/src/main/java/org/joda/time/format/DateTimeFormatterBuilder.java,"FormatUtils.appendPaddedInteger(buf, hours, 2);"
7,org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset,printTo,2099,/JodaTime/src/main/java/org/joda/time/format/DateTimeFormatterBuilder.java,if (iMaxFields == 1) {
7,org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset,printTo,2102,/JodaTime/src/main/java/org/joda/time/format/DateTimeFormatterBuilder.java,displayOffset -= hours * (int)DateTimeConstants.MILLIS_PER_HOUR;
7,org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset,printTo,2103,/JodaTime/src/main/java/org/joda/time/format/DateTimeFormatterBuilder.java,if (displayOffset == 0 && iMinFields <= 1) {
7,org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset,printTo,2107,/JodaTime/src/main/java/org/joda/time/format/DateTimeFormatterBuilder.java,int minutes = displayOffset / DateTimeConstants.MILLIS_PER_MINUTE;
7,org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset,printTo,2108,/JodaTime/src/main/java/org/joda/time/format/DateTimeFormatterBuilder.java,if (iShowSeparators) {
7,org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset,printTo,2109,/JodaTime/src/main/java/org/joda/time/format/DateTimeFormatterBuilder.java,buf.append(':');
7,org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset,printTo,2111,/JodaTime/src/main/java/org/joda/time/format/DateTimeFormatterBuilder.java,"FormatUtils.appendPaddedInteger(buf, minutes, 2);"
7,org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset,printTo,2112,/JodaTime/src/main/java/org/joda/time/format/DateTimeFormatterBuilder.java,if (iMaxFields == 2) {
7,org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset,printTo,2115,/JodaTime/src/main/java/org/joda/time/format/DateTimeFormatterBuilder.java,displayOffset -= minutes * DateTimeConstants.MILLIS_PER_MINUTE;
7,org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset,printTo,2116,/JodaTime/src/main/java/org/joda/time/format/DateTimeFormatterBuilder.java,if (displayOffset == 0 && iMinFields <= 2) {
7,org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset,printTo,2117,/JodaTime/src/main/java/org/joda/time/format/DateTimeFormatterBuilder.java,return;
7,org.joda.time.format.FormatUtils,<clinit>,31,/JodaTime/src/main/java/org/joda/time/format/FormatUtils.java,private static final double LOG_10 = Math.log(10);
7,org.joda.time.format.FormatUtils,appendPaddedInteger,50,/JodaTime/src/main/java/org/joda/time/format/FormatUtils.java,if (value < 0) {
7,org.joda.time.format.FormatUtils,appendPaddedInteger,62,/JodaTime/src/main/java/org/joda/time/format/FormatUtils.java,if (value < 10) {
7,org.joda.time.format.FormatUtils,appendPaddedInteger,63,/JodaTime/src/main/java/org/joda/time/format/FormatUtils.java,for (; size > 1; size--) {
7,org.joda.time.format.FormatUtils,appendPaddedInteger,64,/JodaTime/src/main/java/org/joda/time/format/FormatUtils.java,buf.append('0');
7,org.joda.time.format.FormatUtils,appendPaddedInteger,66,/JodaTime/src/main/java/org/joda/time/format/FormatUtils.java,buf.append((char)(value + '0'));
7,org.joda.time.format.FormatUtils,appendPaddedInteger,67,/JodaTime/src/main/java/org/joda/time/format/FormatUtils.java,} else if (value < 100) {
7,org.joda.time.format.FormatUtils,appendPaddedInteger,68,/JodaTime/src/main/java/org/joda/time/format/FormatUtils.java,for (; size > 2; size--) {
7,org.joda.time.format.FormatUtils,appendPaddedInteger,74,/JodaTime/src/main/java/org/joda/time/format/FormatUtils.java,int d = ((value + 1) * 13421772) >> 27;
7,org.joda.time.format.FormatUtils,appendPaddedInteger,75,/JodaTime/src/main/java/org/joda/time/format/FormatUtils.java,buf.append((char) (d + '0'));
7,org.joda.time.format.FormatUtils,appendPaddedInteger,77,/JodaTime/src/main/java/org/joda/time/format/FormatUtils.java,buf.append((char) (value - (d << 3) - (d << 1) + '0'));
7,org.joda.time.format.FormatUtils,appendPaddedInteger,78,/JodaTime/src/main/java/org/joda/time/format/FormatUtils.java,} else {
7,org.joda.time.format.FormatUtils,appendPaddedInteger,80,/JodaTime/src/main/java/org/joda/time/format/FormatUtils.java,if (value < 1000) {
7,org.joda.time.format.FormatUtils,appendPaddedInteger,82,/JodaTime/src/main/java/org/joda/time/format/FormatUtils.java,} else if (value < 10000) {
7,org.joda.time.format.FormatUtils,appendPaddedInteger,83,/JodaTime/src/main/java/org/joda/time/format/FormatUtils.java,digits = 4;
7,org.joda.time.format.FormatUtils,appendPaddedInteger,87,/JodaTime/src/main/java/org/joda/time/format/FormatUtils.java,for (; size > digits; size--) {
7,org.joda.time.format.FormatUtils,appendPaddedInteger,90,/JodaTime/src/main/java/org/joda/time/format/FormatUtils.java,buf.append(Integer.toString(value));
7,org.joda.time.format.FormatUtils,appendPaddedInteger,92,/JodaTime/src/main/java/org/joda/time/format/FormatUtils.java,}
7,org.joda.time.format.ISODateTimeFormat,date,854,/JodaTime/src/main/java/org/joda/time/format/ISODateTimeFormat.java,return yearMonthDay();
7,org.joda.time.format.ISODateTimeFormat,dateTimeNoMillis,953,/JodaTime/src/main/java/org/joda/time/format/ISODateTimeFormat.java,if (dtx == null) {
7,org.joda.time.format.ISODateTimeFormat,dateTimeNoMillis,954,/JodaTime/src/main/java/org/joda/time/format/ISODateTimeFormat.java,dtx = new DateTimeFormatterBuilder()
7,org.joda.time.format.ISODateTimeFormat,dateTimeNoMillis,959,/JodaTime/src/main/java/org/joda/time/format/ISODateTimeFormat.java,return dtx;
7,org.joda.time.format.ISODateTimeFormat,dayOfMonthElement,1572,/JodaTime/src/main/java/org/joda/time/format/ISODateTimeFormat.java,if (dme == null) {
7,org.joda.time.format.ISODateTimeFormat,dayOfMonthElement,1573,/JodaTime/src/main/java/org/joda/time/format/ISODateTimeFormat.java,dme = new DateTimeFormatterBuilder()
7,org.joda.time.format.ISODateTimeFormat,dayOfMonthElement,1578,/JodaTime/src/main/java/org/joda/time/format/ISODateTimeFormat.java,return dme;
7,org.joda.time.format.ISODateTimeFormat,hourElement,1630,/JodaTime/src/main/java/org/joda/time/format/ISODateTimeFormat.java,if (hde == null) {
7,org.joda.time.format.ISODateTimeFormat,hourElement,1631,/JodaTime/src/main/java/org/joda/time/format/ISODateTimeFormat.java,hde = new DateTimeFormatterBuilder()
7,org.joda.time.format.ISODateTimeFormat,hourElement,1635,/JodaTime/src/main/java/org/joda/time/format/ISODateTimeFormat.java,return hde;
7,org.joda.time.format.ISODateTimeFormat,hourMinuteSecond,1410,/JodaTime/src/main/java/org/joda/time/format/ISODateTimeFormat.java,if (hms == null) {
7,org.joda.time.format.ISODateTimeFormat,hourMinuteSecond,1411,/JodaTime/src/main/java/org/joda/time/format/ISODateTimeFormat.java,hms = new DateTimeFormatterBuilder()
7,org.joda.time.format.ISODateTimeFormat,hourMinuteSecond,1417,/JodaTime/src/main/java/org/joda/time/format/ISODateTimeFormat.java,return hms;
7,org.joda.time.format.ISODateTimeFormat,literalTElement,1621,/JodaTime/src/main/java/org/joda/time/format/ISODateTimeFormat.java,if (lte == null) {
7,org.joda.time.format.ISODateTimeFormat,literalTElement,1622,/JodaTime/src/main/java/org/joda/time/format/ISODateTimeFormat.java,lte = new DateTimeFormatterBuilder()
7,org.joda.time.format.ISODateTimeFormat,literalTElement,1626,/JodaTime/src/main/java/org/joda/time/format/ISODateTimeFormat.java,return lte;
7,org.joda.time.format.ISODateTimeFormat,minuteElement,1639,/JodaTime/src/main/java/org/joda/time/format/ISODateTimeFormat.java,if (mhe == null) {
7,org.joda.time.format.ISODateTimeFormat,minuteElement,1640,/JodaTime/src/main/java/org/joda/time/format/ISODateTimeFormat.java,mhe = new DateTimeFormatterBuilder()
7,org.joda.time.format.ISODateTimeFormat,minuteElement,1645,/JodaTime/src/main/java/org/joda/time/format/ISODateTimeFormat.java,return mhe;
7,org.joda.time.format.ISODateTimeFormat,monthElement,1562,/JodaTime/src/main/java/org/joda/time/format/ISODateTimeFormat.java,if (mye == null) {
7,org.joda.time.format.ISODateTimeFormat,monthElement,1563,/JodaTime/src/main/java/org/joda/time/format/ISODateTimeFormat.java,mye = new DateTimeFormatterBuilder()
7,org.joda.time.format.ISODateTimeFormat,monthElement,1568,/JodaTime/src/main/java/org/joda/time/format/ISODateTimeFormat.java,return mye;
7,org.joda.time.format.ISODateTimeFormat,offsetElement,1671,/JodaTime/src/main/java/org/joda/time/format/ISODateTimeFormat.java,if (ze == null) {
7,org.joda.time.format.ISODateTimeFormat,offsetElement,1672,/JodaTime/src/main/java/org/joda/time/format/ISODateTimeFormat.java,ze = new DateTimeFormatterBuilder()
7,org.joda.time.format.ISODateTimeFormat,offsetElement,1676,/JodaTime/src/main/java/org/joda/time/format/ISODateTimeFormat.java,return ze;
7,org.joda.time.format.ISODateTimeFormat,secondElement,1649,/JodaTime/src/main/java/org/joda/time/format/ISODateTimeFormat.java,if (sme == null) {
7,org.joda.time.format.ISODateTimeFormat,secondElement,1650,/JodaTime/src/main/java/org/joda/time/format/ISODateTimeFormat.java,sme = new DateTimeFormatterBuilder()
7,org.joda.time.format.ISODateTimeFormat,secondElement,1655,/JodaTime/src/main/java/org/joda/time/format/ISODateTimeFormat.java,return sme;
7,org.joda.time.format.ISODateTimeFormat,tTimeNoMillis,919,/JodaTime/src/main/java/org/joda/time/format/ISODateTimeFormat.java,if (ttx == null) {
7,org.joda.time.format.ISODateTimeFormat,tTimeNoMillis,920,/JodaTime/src/main/java/org/joda/time/format/ISODateTimeFormat.java,ttx = new DateTimeFormatterBuilder()
7,org.joda.time.format.ISODateTimeFormat,tTimeNoMillis,925,/JodaTime/src/main/java/org/joda/time/format/ISODateTimeFormat.java,return ttx;
7,org.joda.time.format.ISODateTimeFormat,timeNoMillis,883,/JodaTime/src/main/java/org/joda/time/format/ISODateTimeFormat.java,if (tx == null) {
7,org.joda.time.format.ISODateTimeFormat,timeNoMillis,884,/JodaTime/src/main/java/org/joda/time/format/ISODateTimeFormat.java,tx = new DateTimeFormatterBuilder()
7,org.joda.time.format.ISODateTimeFormat,timeNoMillis,889,/JodaTime/src/main/java/org/joda/time/format/ISODateTimeFormat.java,return tx;
7,org.joda.time.format.ISODateTimeFormat,yearElement,1553,/JodaTime/src/main/java/org/joda/time/format/ISODateTimeFormat.java,if (ye == null) {
7,org.joda.time.format.ISODateTimeFormat,yearElement,1554,/JodaTime/src/main/java/org/joda/time/format/ISODateTimeFormat.java,ye = new DateTimeFormatterBuilder()
7,org.joda.time.format.ISODateTimeFormat,yearElement,1558,/JodaTime/src/main/java/org/joda/time/format/ISODateTimeFormat.java,return ye;
7,org.joda.time.format.ISODateTimeFormat,yearMonthDay,1326,/JodaTime/src/main/java/org/joda/time/format/ISODateTimeFormat.java,if (ymd == null) {
7,org.joda.time.format.ISODateTimeFormat,yearMonthDay,1327,/JodaTime/src/main/java/org/joda/time/format/ISODateTimeFormat.java,ymd = new DateTimeFormatterBuilder()
7,org.joda.time.format.ISODateTimeFormat,yearMonthDay,1333,/JodaTime/src/main/java/org/joda/time/format/ISODateTimeFormat.java,return ymd;
7,org.joda.time.tz.CachedDateTimeZone,<clinit>,39,/JodaTime/src/main/java/org/joda/time/tz/CachedDateTimeZone.java,"i = Integer.getInteger(""org.joda.time.tz.CachedDateTimeZone.size"");"
7,org.joda.time.tz.CachedDateTimeZone,<clinit>,42,/JodaTime/src/main/java/org/joda/time/tz/CachedDateTimeZone.java,}
7,org.joda.time.tz.CachedDateTimeZone,<clinit>,45,/JodaTime/src/main/java/org/joda/time/tz/CachedDateTimeZone.java,if (i == null) {
7,org.joda.time.tz.CachedDateTimeZone,<clinit>,48,/JodaTime/src/main/java/org/joda/time/tz/CachedDateTimeZone.java,cacheSize = 512; // (1 << 9)
7,org.joda.time.tz.CachedDateTimeZone,<clinit>,61,/JodaTime/src/main/java/org/joda/time/tz/CachedDateTimeZone.java,cInfoCacheMask = cacheSize - 1;
7,org.joda.time.tz.CachedDateTimeZone,<clinit>,62,/JodaTime/src/main/java/org/joda/time/tz/CachedDateTimeZone.java,}
7,org.joda.time.tz.CachedDateTimeZone,<init>,87,/JodaTime/src/main/java/org/joda/time/tz/CachedDateTimeZone.java,super(zone.getID());
7,org.joda.time.tz.CachedDateTimeZone,<init>,88,/JodaTime/src/main/java/org/joda/time/tz/CachedDateTimeZone.java,iZone = zone;
7,org.joda.time.tz.CachedDateTimeZone,<init>,89,/JodaTime/src/main/java/org/joda/time/tz/CachedDateTimeZone.java,iInfoCache = new Info[cInfoCacheMask + 1];
7,org.joda.time.tz.CachedDateTimeZone,<init>,90,/JodaTime/src/main/java/org/joda/time/tz/CachedDateTimeZone.java,}
7,org.joda.time.tz.CachedDateTimeZone,createInfo,160,/JodaTime/src/main/java/org/joda/time/tz/CachedDateTimeZone.java,long periodStart = millis & (0xffffffffL << 32);
7,org.joda.time.tz.CachedDateTimeZone,createInfo,161,/JodaTime/src/main/java/org/joda/time/tz/CachedDateTimeZone.java,"Info info = new Info(iZone, periodStart);"
7,org.joda.time.tz.CachedDateTimeZone,createInfo,163,/JodaTime/src/main/java/org/joda/time/tz/CachedDateTimeZone.java,long end = periodStart | 0xffffffffL;
7,org.joda.time.tz.CachedDateTimeZone,createInfo,164,/JodaTime/src/main/java/org/joda/time/tz/CachedDateTimeZone.java,Info chain = info;
7,org.joda.time.tz.CachedDateTimeZone,createInfo,166,/JodaTime/src/main/java/org/joda/time/tz/CachedDateTimeZone.java,long next = iZone.nextTransition(periodStart);
7,org.joda.time.tz.CachedDateTimeZone,createInfo,167,/JodaTime/src/main/java/org/joda/time/tz/CachedDateTimeZone.java,if (next == periodStart || next > end) {
7,org.joda.time.tz.CachedDateTimeZone,createInfo,168,/JodaTime/src/main/java/org/joda/time/tz/CachedDateTimeZone.java,break;
7,org.joda.time.tz.CachedDateTimeZone,createInfo,174,/JodaTime/src/main/java/org/joda/time/tz/CachedDateTimeZone.java,return info;
7,org.joda.time.tz.CachedDateTimeZone,forZone,68,/JodaTime/src/main/java/org/joda/time/tz/CachedDateTimeZone.java,if (zone instanceof CachedDateTimeZone) {
7,org.joda.time.tz.CachedDateTimeZone,forZone,71,/JodaTime/src/main/java/org/joda/time/tz/CachedDateTimeZone.java,return new CachedDateTimeZone(zone);
7,org.joda.time.tz.CachedDateTimeZone,getInfo,148,/JodaTime/src/main/java/org/joda/time/tz/CachedDateTimeZone.java,int period = (int)(millis >> 32);
7,org.joda.time.tz.CachedDateTimeZone,getInfo,149,/JodaTime/src/main/java/org/joda/time/tz/CachedDateTimeZone.java,Info[] cache = iInfoCache;
7,org.joda.time.tz.CachedDateTimeZone,getInfo,150,/JodaTime/src/main/java/org/joda/time/tz/CachedDateTimeZone.java,int index = period & cInfoCacheMask;
7,org.joda.time.tz.CachedDateTimeZone,getInfo,151,/JodaTime/src/main/java/org/joda/time/tz/CachedDateTimeZone.java,Info info = cache[index];
7,org.joda.time.tz.CachedDateTimeZone,getInfo,152,/JodaTime/src/main/java/org/joda/time/tz/CachedDateTimeZone.java,if (info == null || (int)((info.iPeriodStart >> 32)) != period) {
7,org.joda.time.tz.CachedDateTimeZone,getInfo,153,/JodaTime/src/main/java/org/joda/time/tz/CachedDateTimeZone.java,info = createInfo(millis);
7,org.joda.time.tz.CachedDateTimeZone,getInfo,154,/JodaTime/src/main/java/org/joda/time/tz/CachedDateTimeZone.java,cache[index] = info;
7,org.joda.time.tz.CachedDateTimeZone,getInfo,156,/JodaTime/src/main/java/org/joda/time/tz/CachedDateTimeZone.java,return info;
7,org.joda.time.tz.CachedDateTimeZone,getOffset,111,/JodaTime/src/main/java/org/joda/time/tz/CachedDateTimeZone.java,return getInfo(instant).getOffset(instant);
7,org.joda.time.tz.CachedDateTimeZone,hashCode,131,/JodaTime/src/main/java/org/joda/time/tz/CachedDateTimeZone.java,return iZone.hashCode();
7,org.joda.time.tz.CachedDateTimeZone$Info,<init>,185,/JodaTime/src/main/java/org/joda/time/tz/CachedDateTimeZone.java,private int iOffset = Integer.MIN_VALUE;
7,org.joda.time.tz.CachedDateTimeZone$Info,<init>,186,/JodaTime/src/main/java/org/joda/time/tz/CachedDateTimeZone.java,private int iStandardOffset = Integer.MIN_VALUE;
7,org.joda.time.tz.CachedDateTimeZone$Info,<init>,188,/JodaTime/src/main/java/org/joda/time/tz/CachedDateTimeZone.java,"Info(DateTimeZone zone, long periodStart) {"
7,org.joda.time.tz.CachedDateTimeZone$Info,<init>,189,/JodaTime/src/main/java/org/joda/time/tz/CachedDateTimeZone.java,iPeriodStart = periodStart;
7,org.joda.time.tz.CachedDateTimeZone$Info,<init>,190,/JodaTime/src/main/java/org/joda/time/tz/CachedDateTimeZone.java,iZoneRef = zone;
7,org.joda.time.tz.CachedDateTimeZone$Info,<init>,191,/JodaTime/src/main/java/org/joda/time/tz/CachedDateTimeZone.java,}
7,org.joda.time.tz.CachedDateTimeZone$Info,getOffset,204,/JodaTime/src/main/java/org/joda/time/tz/CachedDateTimeZone.java,if (iNextInfo == null || millis < iNextInfo.iPeriodStart) {
7,org.joda.time.tz.CachedDateTimeZone$Info,getOffset,205,/JodaTime/src/main/java/org/joda/time/tz/CachedDateTimeZone.java,if (iOffset == Integer.MIN_VALUE) {
7,org.joda.time.tz.CachedDateTimeZone$Info,getOffset,206,/JodaTime/src/main/java/org/joda/time/tz/CachedDateTimeZone.java,iOffset = iZoneRef.getOffset(iPeriodStart);
7,org.joda.time.tz.CachedDateTimeZone$Info,getOffset,208,/JodaTime/src/main/java/org/joda/time/tz/CachedDateTimeZone.java,return iOffset;
7,org.joda.time.tz.DateTimeZoneBuilder,readFrom,110,/JodaTime/src/main/java/org/joda/time/tz/DateTimeZoneBuilder.java,switch (in.readUnsignedByte()) {
7,org.joda.time.tz.DateTimeZoneBuilder,readFrom,119,/JodaTime/src/main/java/org/joda/time/tz/DateTimeZoneBuilder.java,"return CachedDateTimeZone.forZone(PrecalculatedZone.readFrom(in, id));"
7,org.joda.time.tz.DateTimeZoneBuilder,readFrom,95,/JodaTime/src/main/java/org/joda/time/tz/DateTimeZoneBuilder.java,if (in instanceof DataInput) {
7,org.joda.time.tz.DateTimeZoneBuilder,readFrom,98,/JodaTime/src/main/java/org/joda/time/tz/DateTimeZoneBuilder.java,"return readFrom((DataInput)new DataInputStream(in), id);"
7,org.joda.time.tz.DateTimeZoneBuilder,readMillis,183,/JodaTime/src/main/java/org/joda/time/tz/DateTimeZoneBuilder.java,int v = in.readUnsignedByte();
7,org.joda.time.tz.DateTimeZoneBuilder,readMillis,184,/JodaTime/src/main/java/org/joda/time/tz/DateTimeZoneBuilder.java,switch (v >> 6) {
7,org.joda.time.tz.DateTimeZoneBuilder,readMillis,187,/JodaTime/src/main/java/org/joda/time/tz/DateTimeZoneBuilder.java,v = (v << (32 - 6)) >> (32 - 6);
7,org.joda.time.tz.DateTimeZoneBuilder,readMillis,188,/JodaTime/src/main/java/org/joda/time/tz/DateTimeZoneBuilder.java,return v * (30 * 60000L);
7,org.joda.time.tz.DateTimeZoneBuilder,readMillis,192,/JodaTime/src/main/java/org/joda/time/tz/DateTimeZoneBuilder.java,v = (v << (32 - 6)) >> (32 - 30);
7,org.joda.time.tz.DateTimeZoneBuilder,readMillis,193,/JodaTime/src/main/java/org/joda/time/tz/DateTimeZoneBuilder.java,v |= (in.readUnsignedByte()) << 16;
7,org.joda.time.tz.DateTimeZoneBuilder,readMillis,194,/JodaTime/src/main/java/org/joda/time/tz/DateTimeZoneBuilder.java,v |= (in.readUnsignedByte()) << 8;
7,org.joda.time.tz.DateTimeZoneBuilder,readMillis,195,/JodaTime/src/main/java/org/joda/time/tz/DateTimeZoneBuilder.java,v |= (in.readUnsignedByte());
7,org.joda.time.tz.DateTimeZoneBuilder,readMillis,196,/JodaTime/src/main/java/org/joda/time/tz/DateTimeZoneBuilder.java,return v * 60000L;
7,org.joda.time.tz.DateTimeZoneBuilder,readMillis,200,/JodaTime/src/main/java/org/joda/time/tz/DateTimeZoneBuilder.java,long w = (((long)v) << (64 - 6)) >> (64 - 38);
7,org.joda.time.tz.DateTimeZoneBuilder,readMillis,201,/JodaTime/src/main/java/org/joda/time/tz/DateTimeZoneBuilder.java,w |= (in.readUnsignedByte()) << 24;
7,org.joda.time.tz.DateTimeZoneBuilder,readMillis,202,/JodaTime/src/main/java/org/joda/time/tz/DateTimeZoneBuilder.java,w |= (in.readUnsignedByte()) << 16;
7,org.joda.time.tz.DateTimeZoneBuilder,readMillis,203,/JodaTime/src/main/java/org/joda/time/tz/DateTimeZoneBuilder.java,w |= (in.readUnsignedByte()) << 8;
7,org.joda.time.tz.DateTimeZoneBuilder,readMillis,204,/JodaTime/src/main/java/org/joda/time/tz/DateTimeZoneBuilder.java,w |= (in.readUnsignedByte());
7,org.joda.time.tz.DateTimeZoneBuilder,readMillis,205,/JodaTime/src/main/java/org/joda/time/tz/DateTimeZoneBuilder.java,return w * 1000L;
7,org.joda.time.tz.DateTimeZoneBuilder,readMillis,209,/JodaTime/src/main/java/org/joda/time/tz/DateTimeZoneBuilder.java,return in.readLong();
7,org.joda.time.tz.DateTimeZoneBuilder$DSTZone,<init>,1176,/JodaTime/src/main/java/org/joda/time/tz/DateTimeZoneBuilder.java,super(id);
7,org.joda.time.tz.DateTimeZoneBuilder$DSTZone,<init>,1177,/JodaTime/src/main/java/org/joda/time/tz/DateTimeZoneBuilder.java,iStandardOffset = standardOffset;
7,org.joda.time.tz.DateTimeZoneBuilder$DSTZone,<init>,1178,/JodaTime/src/main/java/org/joda/time/tz/DateTimeZoneBuilder.java,iStartRecurrence = startRecurrence;
7,org.joda.time.tz.DateTimeZoneBuilder$DSTZone,<init>,1179,/JodaTime/src/main/java/org/joda/time/tz/DateTimeZoneBuilder.java,iEndRecurrence = endRecurrence;
7,org.joda.time.tz.DateTimeZoneBuilder$DSTZone,<init>,1180,/JodaTime/src/main/java/org/joda/time/tz/DateTimeZoneBuilder.java,}
7,org.joda.time.tz.DateTimeZoneBuilder$DSTZone,findMatchingRecurrence,1304,/JodaTime/src/main/java/org/joda/time/tz/DateTimeZoneBuilder.java,int standardOffset = iStandardOffset;
7,org.joda.time.tz.DateTimeZoneBuilder$DSTZone,findMatchingRecurrence,1305,/JodaTime/src/main/java/org/joda/time/tz/DateTimeZoneBuilder.java,Recurrence startRecurrence = iStartRecurrence;
7,org.joda.time.tz.DateTimeZoneBuilder$DSTZone,findMatchingRecurrence,1306,/JodaTime/src/main/java/org/joda/time/tz/DateTimeZoneBuilder.java,Recurrence endRecurrence = iEndRecurrence;
7,org.joda.time.tz.DateTimeZoneBuilder$DSTZone,findMatchingRecurrence,1311,/JodaTime/src/main/java/org/joda/time/tz/DateTimeZoneBuilder.java,start = startRecurrence.next
7,org.joda.time.tz.DateTimeZoneBuilder$DSTZone,findMatchingRecurrence,1319,/JodaTime/src/main/java/org/joda/time/tz/DateTimeZoneBuilder.java,}
7,org.joda.time.tz.DateTimeZoneBuilder$DSTZone,findMatchingRecurrence,1322,/JodaTime/src/main/java/org/joda/time/tz/DateTimeZoneBuilder.java,end = endRecurrence.next
7,org.joda.time.tz.DateTimeZoneBuilder$DSTZone,findMatchingRecurrence,1330,/JodaTime/src/main/java/org/joda/time/tz/DateTimeZoneBuilder.java,}
7,org.joda.time.tz.DateTimeZoneBuilder$DSTZone,findMatchingRecurrence,1332,/JodaTime/src/main/java/org/joda/time/tz/DateTimeZoneBuilder.java,return (start > end) ? startRecurrence : endRecurrence;
7,org.joda.time.tz.DateTimeZoneBuilder$DSTZone,getOffset,1187,/JodaTime/src/main/java/org/joda/time/tz/DateTimeZoneBuilder.java,return iStandardOffset + findMatchingRecurrence(instant).getSaveMillis();
7,org.joda.time.tz.DateTimeZoneBuilder$DSTZone,nextTransition,1199,/JodaTime/src/main/java/org/joda/time/tz/DateTimeZoneBuilder.java,int standardOffset = iStandardOffset;
7,org.joda.time.tz.DateTimeZoneBuilder$DSTZone,nextTransition,1200,/JodaTime/src/main/java/org/joda/time/tz/DateTimeZoneBuilder.java,Recurrence startRecurrence = iStartRecurrence;
7,org.joda.time.tz.DateTimeZoneBuilder$DSTZone,nextTransition,1201,/JodaTime/src/main/java/org/joda/time/tz/DateTimeZoneBuilder.java,Recurrence endRecurrence = iEndRecurrence;
7,org.joda.time.tz.DateTimeZoneBuilder$DSTZone,nextTransition,1206,/JodaTime/src/main/java/org/joda/time/tz/DateTimeZoneBuilder.java,start = startRecurrence.next
7,org.joda.time.tz.DateTimeZoneBuilder$DSTZone,nextTransition,1208,/JodaTime/src/main/java/org/joda/time/tz/DateTimeZoneBuilder.java,if (instant > 0 && start < 0) {
7,org.joda.time.tz.DateTimeZoneBuilder$DSTZone,nextTransition,1218,/JodaTime/src/main/java/org/joda/time/tz/DateTimeZoneBuilder.java,}
7,org.joda.time.tz.DateTimeZoneBuilder$DSTZone,nextTransition,1221,/JodaTime/src/main/java/org/joda/time/tz/DateTimeZoneBuilder.java,end = endRecurrence.next
7,org.joda.time.tz.DateTimeZoneBuilder$DSTZone,nextTransition,1223,/JodaTime/src/main/java/org/joda/time/tz/DateTimeZoneBuilder.java,if (instant > 0 && end < 0) {
7,org.joda.time.tz.DateTimeZoneBuilder$DSTZone,nextTransition,1233,/JodaTime/src/main/java/org/joda/time/tz/DateTimeZoneBuilder.java,}
7,org.joda.time.tz.DateTimeZoneBuilder$DSTZone,nextTransition,1235,/JodaTime/src/main/java/org/joda/time/tz/DateTimeZoneBuilder.java,return (start > end) ? end : start;
7,org.joda.time.tz.DateTimeZoneBuilder$DSTZone,readFrom,1166,/JodaTime/src/main/java/org/joda/time/tz/DateTimeZoneBuilder.java,"return new DSTZone(id, (int)readMillis(in),"
7,org.joda.time.tz.DateTimeZoneBuilder$OfYear,<init>,504,/JodaTime/src/main/java/org/joda/time/tz/DateTimeZoneBuilder.java,{
7,org.joda.time.tz.DateTimeZoneBuilder$OfYear,<init>,505,/JodaTime/src/main/java/org/joda/time/tz/DateTimeZoneBuilder.java,if (mode != 'u' && mode != 'w' && mode != 's') {
7,org.joda.time.tz.DateTimeZoneBuilder$OfYear,<init>,509,/JodaTime/src/main/java/org/joda/time/tz/DateTimeZoneBuilder.java,iMode = mode;
7,org.joda.time.tz.DateTimeZoneBuilder$OfYear,<init>,510,/JodaTime/src/main/java/org/joda/time/tz/DateTimeZoneBuilder.java,iMonthOfYear = monthOfYear;
7,org.joda.time.tz.DateTimeZoneBuilder$OfYear,<init>,511,/JodaTime/src/main/java/org/joda/time/tz/DateTimeZoneBuilder.java,iDayOfMonth = dayOfMonth;
7,org.joda.time.tz.DateTimeZoneBuilder$OfYear,<init>,512,/JodaTime/src/main/java/org/joda/time/tz/DateTimeZoneBuilder.java,iDayOfWeek = dayOfWeek;
7,org.joda.time.tz.DateTimeZoneBuilder$OfYear,<init>,513,/JodaTime/src/main/java/org/joda/time/tz/DateTimeZoneBuilder.java,iAdvance = advanceDayOfWeek;
7,org.joda.time.tz.DateTimeZoneBuilder$OfYear,<init>,514,/JodaTime/src/main/java/org/joda/time/tz/DateTimeZoneBuilder.java,iMillisOfDay = millisOfDay;
7,org.joda.time.tz.DateTimeZoneBuilder$OfYear,<init>,515,/JodaTime/src/main/java/org/joda/time/tz/DateTimeZoneBuilder.java,}
7,org.joda.time.tz.DateTimeZoneBuilder$OfYear,next,549,/JodaTime/src/main/java/org/joda/time/tz/DateTimeZoneBuilder.java,if (iMode == 'w') {
7,org.joda.time.tz.DateTimeZoneBuilder$OfYear,next,551,/JodaTime/src/main/java/org/joda/time/tz/DateTimeZoneBuilder.java,} else if (iMode == 's') {
7,org.joda.time.tz.DateTimeZoneBuilder$OfYear,next,554,/JodaTime/src/main/java/org/joda/time/tz/DateTimeZoneBuilder.java,offset = 0;
7,org.joda.time.tz.DateTimeZoneBuilder$OfYear,next,558,/JodaTime/src/main/java/org/joda/time/tz/DateTimeZoneBuilder.java,instant += offset;
7,org.joda.time.tz.DateTimeZoneBuilder$OfYear,next,560,/JodaTime/src/main/java/org/joda/time/tz/DateTimeZoneBuilder.java,Chronology chrono = ISOChronology.getInstanceUTC();
7,org.joda.time.tz.DateTimeZoneBuilder$OfYear,next,561,/JodaTime/src/main/java/org/joda/time/tz/DateTimeZoneBuilder.java,"long next = chrono.monthOfYear().set(instant, iMonthOfYear);"
7,org.joda.time.tz.DateTimeZoneBuilder$OfYear,next,563,/JodaTime/src/main/java/org/joda/time/tz/DateTimeZoneBuilder.java,"next = chrono.millisOfDay().set(next, 0);"
7,org.joda.time.tz.DateTimeZoneBuilder$OfYear,next,564,/JodaTime/src/main/java/org/joda/time/tz/DateTimeZoneBuilder.java,"next = chrono.millisOfDay().add(next, iMillisOfDay);"
7,org.joda.time.tz.DateTimeZoneBuilder$OfYear,next,565,/JodaTime/src/main/java/org/joda/time/tz/DateTimeZoneBuilder.java,"next = setDayOfMonthNext(chrono, next);"
7,org.joda.time.tz.DateTimeZoneBuilder$OfYear,next,567,/JodaTime/src/main/java/org/joda/time/tz/DateTimeZoneBuilder.java,if (iDayOfWeek == 0) {
7,org.joda.time.tz.DateTimeZoneBuilder$OfYear,next,573,/JodaTime/src/main/java/org/joda/time/tz/DateTimeZoneBuilder.java,"next = setDayOfWeek(chrono, next);"
7,org.joda.time.tz.DateTimeZoneBuilder$OfYear,next,574,/JodaTime/src/main/java/org/joda/time/tz/DateTimeZoneBuilder.java,if (next <= instant) {
7,org.joda.time.tz.DateTimeZoneBuilder$OfYear,next,575,/JodaTime/src/main/java/org/joda/time/tz/DateTimeZoneBuilder.java,"next = chrono.year().add(next, 1);"
7,org.joda.time.tz.DateTimeZoneBuilder$OfYear,next,576,/JodaTime/src/main/java/org/joda/time/tz/DateTimeZoneBuilder.java,"next = chrono.monthOfYear().set(next, iMonthOfYear);"
7,org.joda.time.tz.DateTimeZoneBuilder$OfYear,next,577,/JodaTime/src/main/java/org/joda/time/tz/DateTimeZoneBuilder.java,"next = setDayOfMonthNext(chrono, next);"
7,org.joda.time.tz.DateTimeZoneBuilder$OfYear,next,578,/JodaTime/src/main/java/org/joda/time/tz/DateTimeZoneBuilder.java,"next = setDayOfWeek(chrono, next);"
7,org.joda.time.tz.DateTimeZoneBuilder$OfYear,next,583,/JodaTime/src/main/java/org/joda/time/tz/DateTimeZoneBuilder.java,return next - offset;
7,org.joda.time.tz.DateTimeZoneBuilder$OfYear,readFrom,482,/JodaTime/src/main/java/org/joda/time/tz/DateTimeZoneBuilder.java,"return new OfYear((char)in.readUnsignedByte(),"
7,org.joda.time.tz.DateTimeZoneBuilder$OfYear,setDayOfMonth,706,/JodaTime/src/main/java/org/joda/time/tz/DateTimeZoneBuilder.java,if (iDayOfMonth >= 0) {
7,org.joda.time.tz.DateTimeZoneBuilder$OfYear,setDayOfMonth,709,/JodaTime/src/main/java/org/joda/time/tz/DateTimeZoneBuilder.java,"instant = chrono.dayOfMonth().set(instant, 1);"
7,org.joda.time.tz.DateTimeZoneBuilder$OfYear,setDayOfMonth,710,/JodaTime/src/main/java/org/joda/time/tz/DateTimeZoneBuilder.java,"instant = chrono.monthOfYear().add(instant, 1);"
7,org.joda.time.tz.DateTimeZoneBuilder$OfYear,setDayOfMonth,711,/JodaTime/src/main/java/org/joda/time/tz/DateTimeZoneBuilder.java,"instant = chrono.dayOfMonth().add(instant, iDayOfMonth);"
7,org.joda.time.tz.DateTimeZoneBuilder$OfYear,setDayOfMonth,713,/JodaTime/src/main/java/org/joda/time/tz/DateTimeZoneBuilder.java,return instant;
7,org.joda.time.tz.DateTimeZoneBuilder$OfYear,setDayOfMonthNext,672,/JodaTime/src/main/java/org/joda/time/tz/DateTimeZoneBuilder.java,"next = setDayOfMonth(chrono, next);"
7,org.joda.time.tz.DateTimeZoneBuilder$OfYear,setDayOfMonthNext,682,/JodaTime/src/main/java/org/joda/time/tz/DateTimeZoneBuilder.java,}
7,org.joda.time.tz.DateTimeZoneBuilder$OfYear,setDayOfMonthNext,683,/JodaTime/src/main/java/org/joda/time/tz/DateTimeZoneBuilder.java,return next;
7,org.joda.time.tz.DateTimeZoneBuilder$OfYear,setDayOfWeek,717,/JodaTime/src/main/java/org/joda/time/tz/DateTimeZoneBuilder.java,int dayOfWeek = chrono.dayOfWeek().get(instant);
7,org.joda.time.tz.DateTimeZoneBuilder$OfYear,setDayOfWeek,718,/JodaTime/src/main/java/org/joda/time/tz/DateTimeZoneBuilder.java,int daysToAdd = iDayOfWeek - dayOfWeek;
7,org.joda.time.tz.DateTimeZoneBuilder$OfYear,setDayOfWeek,719,/JodaTime/src/main/java/org/joda/time/tz/DateTimeZoneBuilder.java,if (daysToAdd != 0) {
7,org.joda.time.tz.DateTimeZoneBuilder$OfYear,setDayOfWeek,720,/JodaTime/src/main/java/org/joda/time/tz/DateTimeZoneBuilder.java,if (iAdvance) {
7,org.joda.time.tz.DateTimeZoneBuilder$OfYear,setDayOfWeek,725,/JodaTime/src/main/java/org/joda/time/tz/DateTimeZoneBuilder.java,if (daysToAdd > 0) {
7,org.joda.time.tz.DateTimeZoneBuilder$OfYear,setDayOfWeek,726,/JodaTime/src/main/java/org/joda/time/tz/DateTimeZoneBuilder.java,daysToAdd -= 7;
7,org.joda.time.tz.DateTimeZoneBuilder$OfYear,setDayOfWeek,729,/JodaTime/src/main/java/org/joda/time/tz/DateTimeZoneBuilder.java,"instant = chrono.dayOfWeek().add(instant, daysToAdd);"
7,org.joda.time.tz.DateTimeZoneBuilder$OfYear,setDayOfWeek,731,/JodaTime/src/main/java/org/joda/time/tz/DateTimeZoneBuilder.java,return instant;
7,org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone,<init>,1500,/JodaTime/src/main/java/org/joda/time/tz/DateTimeZoneBuilder.java,super(id);
7,org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone,<init>,1501,/JodaTime/src/main/java/org/joda/time/tz/DateTimeZoneBuilder.java,iTransitions = transitions;
7,org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone,<init>,1502,/JodaTime/src/main/java/org/joda/time/tz/DateTimeZoneBuilder.java,iWallOffsets = wallOffsets;
7,org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone,<init>,1503,/JodaTime/src/main/java/org/joda/time/tz/DateTimeZoneBuilder.java,iStandardOffsets = standardOffsets;
7,org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone,<init>,1504,/JodaTime/src/main/java/org/joda/time/tz/DateTimeZoneBuilder.java,iNameKeys = nameKeys;
7,org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone,<init>,1505,/JodaTime/src/main/java/org/joda/time/tz/DateTimeZoneBuilder.java,iTailZone = tailZone;
7,org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone,<init>,1506,/JodaTime/src/main/java/org/joda/time/tz/DateTimeZoneBuilder.java,}
7,org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone,getOffset,1528,/JodaTime/src/main/java/org/joda/time/tz/DateTimeZoneBuilder.java,long[] transitions = iTransitions;
7,org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone,getOffset,1529,/JodaTime/src/main/java/org/joda/time/tz/DateTimeZoneBuilder.java,"int i = Arrays.binarySearch(transitions, instant);"
7,org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone,getOffset,1530,/JodaTime/src/main/java/org/joda/time/tz/DateTimeZoneBuilder.java,if (i >= 0) {
7,org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone,getOffset,1533,/JodaTime/src/main/java/org/joda/time/tz/DateTimeZoneBuilder.java,i = ~i;
7,org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone,getOffset,1534,/JodaTime/src/main/java/org/joda/time/tz/DateTimeZoneBuilder.java,if (i < transitions.length) {
7,org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone,getOffset,1535,/JodaTime/src/main/java/org/joda/time/tz/DateTimeZoneBuilder.java,if (i > 0) {
7,org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone,getOffset,1536,/JodaTime/src/main/java/org/joda/time/tz/DateTimeZoneBuilder.java,return iWallOffsets[i - 1];
7,org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone,getOffset,1540,/JodaTime/src/main/java/org/joda/time/tz/DateTimeZoneBuilder.java,if (iTailZone == null) {
7,org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone,getOffset,1543,/JodaTime/src/main/java/org/joda/time/tz/DateTimeZoneBuilder.java,return iTailZone.getOffset(instant);
7,org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone,nextTransition,1570,/JodaTime/src/main/java/org/joda/time/tz/DateTimeZoneBuilder.java,long[] transitions = iTransitions;
7,org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone,nextTransition,1571,/JodaTime/src/main/java/org/joda/time/tz/DateTimeZoneBuilder.java,"int i = Arrays.binarySearch(transitions, instant);"
7,org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone,nextTransition,1572,/JodaTime/src/main/java/org/joda/time/tz/DateTimeZoneBuilder.java,i = (i >= 0) ? (i + 1) : ~i;
7,org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone,nextTransition,1573,/JodaTime/src/main/java/org/joda/time/tz/DateTimeZoneBuilder.java,if (i < transitions.length) {
7,org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone,nextTransition,1574,/JodaTime/src/main/java/org/joda/time/tz/DateTimeZoneBuilder.java,return transitions[i];
7,org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone,nextTransition,1576,/JodaTime/src/main/java/org/joda/time/tz/DateTimeZoneBuilder.java,if (iTailZone == null) {
7,org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone,nextTransition,1579,/JodaTime/src/main/java/org/joda/time/tz/DateTimeZoneBuilder.java,long end = transitions[transitions.length - 1];
7,org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone,nextTransition,1580,/JodaTime/src/main/java/org/joda/time/tz/DateTimeZoneBuilder.java,if (instant < end) {
7,org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone,nextTransition,1583,/JodaTime/src/main/java/org/joda/time/tz/DateTimeZoneBuilder.java,return iTailZone.nextTransition(instant);
7,org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone,readFrom,1341,/JodaTime/src/main/java/org/joda/time/tz/DateTimeZoneBuilder.java,int poolSize = in.readUnsignedShort();
7,org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone,readFrom,1342,/JodaTime/src/main/java/org/joda/time/tz/DateTimeZoneBuilder.java,String[] pool = new String[poolSize];
7,org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone,readFrom,1343,/JodaTime/src/main/java/org/joda/time/tz/DateTimeZoneBuilder.java,for (int i=0; i<poolSize; i++) {
7,org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone,readFrom,1344,/JodaTime/src/main/java/org/joda/time/tz/DateTimeZoneBuilder.java,pool[i] = in.readUTF();
7,org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone,readFrom,1347,/JodaTime/src/main/java/org/joda/time/tz/DateTimeZoneBuilder.java,int size = in.readInt();
7,org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone,readFrom,1348,/JodaTime/src/main/java/org/joda/time/tz/DateTimeZoneBuilder.java,long[] transitions = new long[size];
7,org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone,readFrom,1349,/JodaTime/src/main/java/org/joda/time/tz/DateTimeZoneBuilder.java,int[] wallOffsets = new int[size];
7,org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone,readFrom,1350,/JodaTime/src/main/java/org/joda/time/tz/DateTimeZoneBuilder.java,int[] standardOffsets = new int[size];
7,org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone,readFrom,1351,/JodaTime/src/main/java/org/joda/time/tz/DateTimeZoneBuilder.java,String[] nameKeys = new String[size];
7,org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone,readFrom,1353,/JodaTime/src/main/java/org/joda/time/tz/DateTimeZoneBuilder.java,for (int i=0; i<size; i++) {
7,org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone,readFrom,1354,/JodaTime/src/main/java/org/joda/time/tz/DateTimeZoneBuilder.java,transitions[i] = readMillis(in);
7,org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone,readFrom,1355,/JodaTime/src/main/java/org/joda/time/tz/DateTimeZoneBuilder.java,wallOffsets[i] = (int)readMillis(in);
7,org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone,readFrom,1356,/JodaTime/src/main/java/org/joda/time/tz/DateTimeZoneBuilder.java,standardOffsets[i] = (int)readMillis(in);
7,org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone,readFrom,1359,/JodaTime/src/main/java/org/joda/time/tz/DateTimeZoneBuilder.java,if (poolSize < 256) {
7,org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone,readFrom,1360,/JodaTime/src/main/java/org/joda/time/tz/DateTimeZoneBuilder.java,index = in.readUnsignedByte();
7,org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone,readFrom,1364,/JodaTime/src/main/java/org/joda/time/tz/DateTimeZoneBuilder.java,nameKeys[i] = pool[index];
7,org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone,readFrom,1367,/JodaTime/src/main/java/org/joda/time/tz/DateTimeZoneBuilder.java,}
7,org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone,readFrom,1370,/JodaTime/src/main/java/org/joda/time/tz/DateTimeZoneBuilder.java,DSTZone tailZone = null;
7,org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone,readFrom,1371,/JodaTime/src/main/java/org/joda/time/tz/DateTimeZoneBuilder.java,if (in.readBoolean()) {
7,org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone,readFrom,1372,/JodaTime/src/main/java/org/joda/time/tz/DateTimeZoneBuilder.java,"tailZone = DSTZone.readFrom(in, id);"
7,org.joda.time.tz.DateTimeZoneBuilder$PrecalculatedZone,readFrom,1375,/JodaTime/src/main/java/org/joda/time/tz/DateTimeZoneBuilder.java,return new PrecalculatedZone
7,org.joda.time.tz.DateTimeZoneBuilder$Recurrence,<init>,747,/JodaTime/src/main/java/org/joda/time/tz/DateTimeZoneBuilder.java,"Recurrence(OfYear ofYear, String nameKey, int saveMillis) {"
7,org.joda.time.tz.DateTimeZoneBuilder$Recurrence,<init>,748,/JodaTime/src/main/java/org/joda/time/tz/DateTimeZoneBuilder.java,iOfYear = ofYear;
7,org.joda.time.tz.DateTimeZoneBuilder$Recurrence,<init>,749,/JodaTime/src/main/java/org/joda/time/tz/DateTimeZoneBuilder.java,iNameKey = nameKey;
7,org.joda.time.tz.DateTimeZoneBuilder$Recurrence,<init>,750,/JodaTime/src/main/java/org/joda/time/tz/DateTimeZoneBuilder.java,iSaveMillis = saveMillis;
7,org.joda.time.tz.DateTimeZoneBuilder$Recurrence,<init>,751,/JodaTime/src/main/java/org/joda/time/tz/DateTimeZoneBuilder.java,}
7,org.joda.time.tz.DateTimeZoneBuilder$Recurrence,getSaveMillis,776,/JodaTime/src/main/java/org/joda/time/tz/DateTimeZoneBuilder.java,return iSaveMillis;
7,org.joda.time.tz.DateTimeZoneBuilder$Recurrence,next,761,/JodaTime/src/main/java/org/joda/time/tz/DateTimeZoneBuilder.java,"return iOfYear.next(instant, standardOffset, saveMillis);"
7,org.joda.time.tz.DateTimeZoneBuilder$Recurrence,readFrom,740,/JodaTime/src/main/java/org/joda/time/tz/DateTimeZoneBuilder.java,"return new Recurrence(OfYear.readFrom(in), in.readUTF(), (int)readMillis(in));"
7,org.joda.time.tz.DefaultNameProvider,<init>,37,/JodaTime/src/main/java/org/joda/time/tz/DefaultNameProvider.java,"private HashMap<Locale, Map<String, Map<String, Object>>> iByLocaleCache = createCache();"
7,org.joda.time.tz.DefaultNameProvider,<init>,39,/JodaTime/src/main/java/org/joda/time/tz/DefaultNameProvider.java,public DefaultNameProvider() {
7,org.joda.time.tz.DefaultNameProvider,<init>,40,/JodaTime/src/main/java/org/joda/time/tz/DefaultNameProvider.java,}
7,org.joda.time.tz.DefaultNameProvider,createCache,87,/JodaTime/src/main/java/org/joda/time/tz/DefaultNameProvider.java,return new HashMap(7);
7,org.joda.time.tz.FixedDateTimeZone,<init>,38,/JodaTime/src/main/java/org/joda/time/tz/FixedDateTimeZone.java,super(id);
7,org.joda.time.tz.FixedDateTimeZone,<init>,39,/JodaTime/src/main/java/org/joda/time/tz/FixedDateTimeZone.java,iNameKey = nameKey;
7,org.joda.time.tz.FixedDateTimeZone,<init>,40,/JodaTime/src/main/java/org/joda/time/tz/FixedDateTimeZone.java,iWallOffset = wallOffset;
7,org.joda.time.tz.FixedDateTimeZone,<init>,41,/JodaTime/src/main/java/org/joda/time/tz/FixedDateTimeZone.java,iStandardOffset = standardOffset;
7,org.joda.time.tz.FixedDateTimeZone,<init>,42,/JodaTime/src/main/java/org/joda/time/tz/FixedDateTimeZone.java,}
7,org.joda.time.tz.FixedDateTimeZone,equals,88,/JodaTime/src/main/java/org/joda/time/tz/FixedDateTimeZone.java,if (this == obj) {
7,org.joda.time.tz.FixedDateTimeZone,equals,89,/JodaTime/src/main/java/org/joda/time/tz/FixedDateTimeZone.java,return true;
7,org.joda.time.tz.FixedDateTimeZone,getOffset,49,/JodaTime/src/main/java/org/joda/time/tz/FixedDateTimeZone.java,return iWallOffset;
7,org.joda.time.tz.FixedDateTimeZone,hashCode,102,/JodaTime/src/main/java/org/joda/time/tz/FixedDateTimeZone.java,return getID().hashCode() + 37 * iStandardOffset + 31 * iWallOffset;
7,org.joda.time.tz.ZoneInfoProvider,<init>,82,/JodaTime/src/main/java/org/joda/time/tz/ZoneInfoProvider.java,"this(resourcePath, null, false);"
7,org.joda.time.tz.ZoneInfoProvider,<init>,83,/JodaTime/src/main/java/org/joda/time/tz/ZoneInfoProvider.java,}
7,org.joda.time.tz.ZoneInfoProvider,<init>,106,/JodaTime/src/main/java/org/joda/time/tz/ZoneInfoProvider.java,{
7,org.joda.time.tz.ZoneInfoProvider,<init>,107,/JodaTime/src/main/java/org/joda/time/tz/ZoneInfoProvider.java,if (resourcePath == null) {
7,org.joda.time.tz.ZoneInfoProvider,<init>,110,/JodaTime/src/main/java/org/joda/time/tz/ZoneInfoProvider.java,"if (!resourcePath.endsWith(""/"")) {"
7,org.joda.time.tz.ZoneInfoProvider,<init>,111,/JodaTime/src/main/java/org/joda/time/tz/ZoneInfoProvider.java,resourcePath += '/';
7,org.joda.time.tz.ZoneInfoProvider,<init>,114,/JodaTime/src/main/java/org/joda/time/tz/ZoneInfoProvider.java,iFileDir = null;
7,org.joda.time.tz.ZoneInfoProvider,<init>,115,/JodaTime/src/main/java/org/joda/time/tz/ZoneInfoProvider.java,iResourcePath = resourcePath;
7,org.joda.time.tz.ZoneInfoProvider,<init>,117,/JodaTime/src/main/java/org/joda/time/tz/ZoneInfoProvider.java,if (loader == null && !favorSystemLoader) {
7,org.joda.time.tz.ZoneInfoProvider,<init>,118,/JodaTime/src/main/java/org/joda/time/tz/ZoneInfoProvider.java,loader = getClass().getClassLoader();
7,org.joda.time.tz.ZoneInfoProvider,<init>,121,/JodaTime/src/main/java/org/joda/time/tz/ZoneInfoProvider.java,iLoader = loader;
7,org.joda.time.tz.ZoneInfoProvider,<init>,123,/JodaTime/src/main/java/org/joda/time/tz/ZoneInfoProvider.java,"iZoneInfoMap = loadZoneInfoMap(openResource(""ZoneInfoMap""));"
7,org.joda.time.tz.ZoneInfoProvider,<init>,124,/JodaTime/src/main/java/org/joda/time/tz/ZoneInfoProvider.java,}
7,org.joda.time.tz.ZoneInfoProvider,getAvailableIDs,174,/JodaTime/src/main/java/org/joda/time/tz/ZoneInfoProvider.java,return new TreeSet<String>(iZoneInfoMap.keySet());
7,org.joda.time.tz.ZoneInfoProvider,getZone,136,/JodaTime/src/main/java/org/joda/time/tz/ZoneInfoProvider.java,if (id == null) {
7,org.joda.time.tz.ZoneInfoProvider,getZone,140,/JodaTime/src/main/java/org/joda/time/tz/ZoneInfoProvider.java,Object obj = iZoneInfoMap.get(id);
7,org.joda.time.tz.ZoneInfoProvider,getZone,141,/JodaTime/src/main/java/org/joda/time/tz/ZoneInfoProvider.java,if (obj == null) {
7,org.joda.time.tz.ZoneInfoProvider,getZone,145,/JodaTime/src/main/java/org/joda/time/tz/ZoneInfoProvider.java,if (id.equals(obj)) {
7,org.joda.time.tz.ZoneInfoProvider,getZone,147,/JodaTime/src/main/java/org/joda/time/tz/ZoneInfoProvider.java,return loadZoneData(id);
7,org.joda.time.tz.ZoneInfoProvider,getZone,150,/JodaTime/src/main/java/org/joda/time/tz/ZoneInfoProvider.java,if (obj instanceof SoftReference<?>) {
7,org.joda.time.tz.ZoneInfoProvider,getZone,152,/JodaTime/src/main/java/org/joda/time/tz/ZoneInfoProvider.java,SoftReference<DateTimeZone> ref = (SoftReference<DateTimeZone>) obj;
7,org.joda.time.tz.ZoneInfoProvider,getZone,153,/JodaTime/src/main/java/org/joda/time/tz/ZoneInfoProvider.java,DateTimeZone tz = ref.get();
7,org.joda.time.tz.ZoneInfoProvider,getZone,154,/JodaTime/src/main/java/org/joda/time/tz/ZoneInfoProvider.java,if (tz != null) {
7,org.joda.time.tz.ZoneInfoProvider,getZone,155,/JodaTime/src/main/java/org/joda/time/tz/ZoneInfoProvider.java,return tz;
7,org.joda.time.tz.ZoneInfoProvider,loadZoneData,224,/JodaTime/src/main/java/org/joda/time/tz/ZoneInfoProvider.java,InputStream in = null;
7,org.joda.time.tz.ZoneInfoProvider,loadZoneData,226,/JodaTime/src/main/java/org/joda/time/tz/ZoneInfoProvider.java,in = openResource(id);
7,org.joda.time.tz.ZoneInfoProvider,loadZoneData,227,/JodaTime/src/main/java/org/joda/time/tz/ZoneInfoProvider.java,"DateTimeZone tz = DateTimeZoneBuilder.readFrom(in, id);"
7,org.joda.time.tz.ZoneInfoProvider,loadZoneData,228,/JodaTime/src/main/java/org/joda/time/tz/ZoneInfoProvider.java,"iZoneInfoMap.put(id, new SoftReference<DateTimeZone>(tz));"
7,org.joda.time.tz.ZoneInfoProvider,loadZoneData,229,/JodaTime/src/main/java/org/joda/time/tz/ZoneInfoProvider.java,return tz;
7,org.joda.time.tz.ZoneInfoProvider,loadZoneData,236,/JodaTime/src/main/java/org/joda/time/tz/ZoneInfoProvider.java,if (in != null) {
7,org.joda.time.tz.ZoneInfoProvider,loadZoneData,237,/JodaTime/src/main/java/org/joda/time/tz/ZoneInfoProvider.java,in.close();
7,org.joda.time.tz.ZoneInfoProvider,loadZoneData,240,/JodaTime/src/main/java/org/joda/time/tz/ZoneInfoProvider.java,}
7,org.joda.time.tz.ZoneInfoProvider,loadZoneInfoMap,252,/JodaTime/src/main/java/org/joda/time/tz/ZoneInfoProvider.java,"Map<String, Object> map = new ConcurrentHashMap<String, Object>();"
7,org.joda.time.tz.ZoneInfoProvider,loadZoneInfoMap,253,/JodaTime/src/main/java/org/joda/time/tz/ZoneInfoProvider.java,DataInputStream din = new DataInputStream(in);
7,org.joda.time.tz.ZoneInfoProvider,loadZoneInfoMap,255,/JodaTime/src/main/java/org/joda/time/tz/ZoneInfoProvider.java,"readZoneInfoMap(din, map);"
7,org.joda.time.tz.ZoneInfoProvider,loadZoneInfoMap,258,/JodaTime/src/main/java/org/joda/time/tz/ZoneInfoProvider.java,din.close();
7,org.joda.time.tz.ZoneInfoProvider,loadZoneInfoMap,260,/JodaTime/src/main/java/org/joda/time/tz/ZoneInfoProvider.java,}
7,org.joda.time.tz.ZoneInfoProvider,loadZoneInfoMap,262,/JodaTime/src/main/java/org/joda/time/tz/ZoneInfoProvider.java,"map.put(""UTC"", new SoftReference<DateTimeZone>(DateTimeZone.UTC));"
7,org.joda.time.tz.ZoneInfoProvider,loadZoneInfoMap,263,/JodaTime/src/main/java/org/joda/time/tz/ZoneInfoProvider.java,return map;
7,org.joda.time.tz.ZoneInfoProvider,openResource,196,/JodaTime/src/main/java/org/joda/time/tz/ZoneInfoProvider.java,if (iFileDir != null) {
7,org.joda.time.tz.ZoneInfoProvider,openResource,199,/JodaTime/src/main/java/org/joda/time/tz/ZoneInfoProvider.java,String path = iResourcePath.concat(name);
7,org.joda.time.tz.ZoneInfoProvider,openResource,200,/JodaTime/src/main/java/org/joda/time/tz/ZoneInfoProvider.java,if (iLoader != null) {
7,org.joda.time.tz.ZoneInfoProvider,openResource,201,/JodaTime/src/main/java/org/joda/time/tz/ZoneInfoProvider.java,in = iLoader.getResourceAsStream(path);
7,org.joda.time.tz.ZoneInfoProvider,openResource,205,/JodaTime/src/main/java/org/joda/time/tz/ZoneInfoProvider.java,if (in == null) {
7,org.joda.time.tz.ZoneInfoProvider,openResource,214,/JodaTime/src/main/java/org/joda/time/tz/ZoneInfoProvider.java,return in;
7,org.joda.time.tz.ZoneInfoProvider,readZoneInfoMap,274,/JodaTime/src/main/java/org/joda/time/tz/ZoneInfoProvider.java,int size = din.readUnsignedShort();
7,org.joda.time.tz.ZoneInfoProvider,readZoneInfoMap,275,/JodaTime/src/main/java/org/joda/time/tz/ZoneInfoProvider.java,String[] pool = new String[size];
7,org.joda.time.tz.ZoneInfoProvider,readZoneInfoMap,276,/JodaTime/src/main/java/org/joda/time/tz/ZoneInfoProvider.java,for (int i=0; i<size; i++) {
7,org.joda.time.tz.ZoneInfoProvider,readZoneInfoMap,277,/JodaTime/src/main/java/org/joda/time/tz/ZoneInfoProvider.java,pool[i] = din.readUTF().intern();
7,org.joda.time.tz.ZoneInfoProvider,readZoneInfoMap,281,/JodaTime/src/main/java/org/joda/time/tz/ZoneInfoProvider.java,size = din.readUnsignedShort();
7,org.joda.time.tz.ZoneInfoProvider,readZoneInfoMap,282,/JodaTime/src/main/java/org/joda/time/tz/ZoneInfoProvider.java,for (int i=0; i<size; i++) {
7,org.joda.time.tz.ZoneInfoProvider,readZoneInfoMap,284,/JodaTime/src/main/java/org/joda/time/tz/ZoneInfoProvider.java,"zimap.put(pool[din.readUnsignedShort()], pool[din.readUnsignedShort()]);"
7,org.joda.time.tz.ZoneInfoProvider,readZoneInfoMap,287,/JodaTime/src/main/java/org/joda/time/tz/ZoneInfoProvider.java,}
7,org.joda.time.tz.ZoneInfoProvider,readZoneInfoMap,289,/JodaTime/src/main/java/org/joda/time/tz/ZoneInfoProvider.java,}
