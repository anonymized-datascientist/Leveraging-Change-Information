@Test
public void polynomial() throws DerivativeException, IntegratorException {
    TestProblem6 pb = new TestProblem6();
    double range = Math.abs(pb.getFinalTime() - pb.getInitialTime());
    for (int nSteps = 1; nSteps < 7; ++nSteps) {
        AdamsMoultonIntegrator integ = new AdamsMoultonIntegrator(nSteps, 1.0e-6 * range, 0.1 * range, 1.0e-9, 1.0e-9);
        TestProblemHandler handler = new TestProblemHandler(pb, integ);
        integ.addStepHandler(handler);
        integ.integrate(pb, pb.getInitialTime(), pb.getInitialState(), pb.getFinalTime(), new double[pb.getDimension()]);
        if (nSteps < 4) {
            assertTrue(integ.getEvaluations() > 140);
        } else {
            assertTrue(integ.getEvaluations() < 90);
        }
    }
}